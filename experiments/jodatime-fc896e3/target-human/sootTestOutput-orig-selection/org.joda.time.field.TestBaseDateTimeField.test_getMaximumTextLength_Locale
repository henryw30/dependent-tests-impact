org.joda.time.DateTimeFieldType.secondOfMinute : $r0 = <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType SECOND_OF_MINUTE_TYPE> >>>>>>>> org.joda.time.DateTimeFieldType.secondOfMinute : return $r0
org.joda.time.DateTimeFieldType.secondOfMinute : return $r0 >>>>>>>> org.joda.time.field.BaseDateTimeField.getMaximumTextLength : i0 = virtualinvoke r0.<org.joda.time.field.BaseDateTimeField: int getMaximumValue()>()
org.joda.time.field.BaseDateTimeField.getMaximumTextLength : i0 = virtualinvoke r0.<org.joda.time.field.BaseDateTimeField: int getMaximumValue()>() >>>>>>>> org.joda.time.field.TestBaseDateTimeField$MockBaseDateTimeField.getMaximumValue : return 59
org.joda.time.field.TestBaseDateTimeField$MockBaseDateTimeField.getMaximumValue : return 59 >>>>>>>> org.joda.time.field.BaseDateTimeField.getMaximumTextLength : if i0 < 0
org.joda.time.field.BaseDateTimeField.getMaximumTextLength : if i0 < 0 >>>>>>>> org.joda.time.field.BaseDateTimeField.getMaximumTextLength : if i0 >= 10
org.joda.time.field.BaseDateTimeField.getMaximumTextLength : if i0 >= 10 >>>>>>>> org.joda.time.field.BaseDateTimeField.getMaximumTextLength : if i0 >= 100
org.joda.time.field.BaseDateTimeField.getMaximumTextLength : if i0 >= 100 >>>>>>>> org.joda.time.field.BaseDateTimeField.getMaximumTextLength : return 2
org.joda.time.field.BaseDateTimeField.getMaximumTextLength : return 2 >>>>>>>> org.joda.time.field.TestBaseDateTimeField$1.getMaximumValue : return 5
org.joda.time.field.TestBaseDateTimeField$1.getMaximumValue : return 5 >>>>>>>> org.joda.time.field.BaseDateTimeField.getMaximumTextLength : return 1
org.joda.time.field.BaseDateTimeField.getMaximumTextLength : return 1 >>>>>>>> org.joda.time.field.TestBaseDateTimeField$2.getMaximumValue : return 555
org.joda.time.field.TestBaseDateTimeField$2.getMaximumValue : return 555 >>>>>>>> org.joda.time.field.BaseDateTimeField.getMaximumTextLength : if i0 >= 1000
org.joda.time.field.BaseDateTimeField.getMaximumTextLength : if i0 >= 1000 >>>>>>>> org.joda.time.field.BaseDateTimeField.getMaximumTextLength : return 3
org.joda.time.field.BaseDateTimeField.getMaximumTextLength : return 3 >>>>>>>> org.joda.time.field.TestBaseDateTimeField$3.getMaximumValue : return 5555
org.joda.time.field.TestBaseDateTimeField$3.getMaximumValue : return 5555 >>>>>>>> org.joda.time.field.BaseDateTimeField.getMaximumTextLength : $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0)
org.joda.time.field.BaseDateTimeField.getMaximumTextLength : $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0) >>>>>>>> org.joda.time.field.BaseDateTimeField.getMaximumTextLength : $i1 = virtualinvoke $r2.<java.lang.String: int length()>()
org.joda.time.field.BaseDateTimeField.getMaximumTextLength : $i1 = virtualinvoke $r2.<java.lang.String: int length()>() >>>>>>>> org.joda.time.field.BaseDateTimeField.getMaximumTextLength : return $i1
org.joda.time.field.BaseDateTimeField.getMaximumTextLength : return $i1 >>>>>>>> org.joda.time.field.TestBaseDateTimeField$4.getMaximumValue : return -1
