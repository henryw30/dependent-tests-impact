org.joda.time.TestParseISO$TMatcher.run : $r1 = new org.joda.time.MutableDateTime >>>>>>>> org.joda.time.TestParseISO$TMatcher.run : specialinvoke $r1.<org.joda.time.MutableDateTime: void <init>(int,int,int,int,int,int,int)>(1972, 12, 3, 10, 32, 40, 205)
org.joda.time.TestParseISO$TMatcher.run : specialinvoke $r1.<org.joda.time.MutableDateTime: void <init>(int,int,int,int,int,int,int)>(1972, 12, 3, 10, 32, 40, 205) >>>>>>>> org.joda.time.TestParseISO$TMatcher.run : r0.<org.joda.time.TestParseISO$TMatcher: org.joda.time.MutableDateTime dt> = $r1
org.joda.time.TestParseISO$TMatcher.run : r0.<org.joda.time.TestParseISO$TMatcher: org.joda.time.MutableDateTime dt> = $r1 >>>>>>>> org.joda.time.TestParseISO$TMatcher.run : $r2 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter timeParser()>()
org.joda.time.TestParseISO$TMatcher.run : $r2 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter timeParser()>() >>>>>>>> org.joda.time.TestParseISO$TMatcher.run : virtualinvoke r0.<org.joda.time.TestParseISO$TMatcher: void parse(org.joda.time.format.DateTimeFormatter)>($r2)
org.joda.time.TestParseISO$TMatcher.run : virtualinvoke r0.<org.joda.time.TestParseISO$TMatcher: void parse(org.joda.time.format.DateTimeFormatter)>($r2) >>>>>>>> org.joda.time.TestParseISO$TMatcher.run : specialinvoke r0.<org.joda.time.TestParseISO$Matcher: void assertDate()>()
org.joda.time.TestParseISO$TMatcher.run : specialinvoke r0.<org.joda.time.TestParseISO$Matcher: void assertDate()>() >>>>>>>> org.joda.time.TestParseISO$TMatcher.run : $r3 = new java.lang.StringBuilder
org.joda.time.TestParseISO$TMatcher.run : $r3 = new java.lang.StringBuilder >>>>>>>> org.joda.time.TestParseISO$TMatcher.run : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.joda.time.TestParseISO$TMatcher.run : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.time.TestParseISO$TMatcher.run : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("T")
org.joda.time.TestParseISO$TMatcher.run : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("T") >>>>>>>> org.joda.time.TestParseISO$TMatcher.run : $r5 = r0.<org.joda.time.TestParseISO$TMatcher: java.lang.String extended>
org.joda.time.TestParseISO$TMatcher.run : $r5 = r0.<org.joda.time.TestParseISO$TMatcher: java.lang.String extended> >>>>>>>> org.joda.time.TestParseISO$TMatcher.run : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
org.joda.time.TestParseISO$TMatcher.run : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) >>>>>>>> org.joda.time.TestParseISO$TMatcher.run : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.time.TestParseISO$TMatcher.run : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.time.TestParseISO$TMatcher.run : r0.<org.joda.time.TestParseISO$TMatcher: java.lang.String extended> = $r7
org.joda.time.TestParseISO$TMatcher.run : r0.<org.joda.time.TestParseISO$TMatcher: java.lang.String extended> = $r7 >>>>>>>> org.joda.time.TestParseISO$TMatcher.run : $r8 = new org.joda.time.MutableDateTime
org.joda.time.TestParseISO$TMatcher.run : $r8 = new org.joda.time.MutableDateTime >>>>>>>> org.joda.time.TestParseISO$TMatcher.run : specialinvoke $r8.<org.joda.time.MutableDateTime: void <init>(int,int,int,int,int,int,int)>(1972, 12, 3, 10, 32, 40, 205)
org.joda.time.TestParseISO$TMatcher.run : specialinvoke $r8.<org.joda.time.MutableDateTime: void <init>(int,int,int,int,int,int,int)>(1972, 12, 3, 10, 32, 40, 205) >>>>>>>> org.joda.time.TestParseISO$TMatcher.run : r0.<org.joda.time.TestParseISO$TMatcher: org.joda.time.MutableDateTime dt> = $r8
org.joda.time.TestParseISO$TMatcher.run : r0.<org.joda.time.TestParseISO$TMatcher: org.joda.time.MutableDateTime dt> = $r8 >>>>>>>> org.joda.time.TestParseISO$TMatcher.run : $r9 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter timeParser()>()
org.joda.time.TestParseISO$TMatcher.run : $r9 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter timeParser()>() >>>>>>>> org.joda.time.TestParseISO$TMatcher.run : virtualinvoke r0.<org.joda.time.TestParseISO$TMatcher: void parse(org.joda.time.format.DateTimeFormatter)>($r9)
org.joda.time.TestParseISO$TMatcher.run : virtualinvoke r0.<org.joda.time.TestParseISO$TMatcher: void parse(org.joda.time.format.DateTimeFormatter)>($r9) >>>>>>>> org.joda.time.TestParseISO$TMatcher.run : specialinvoke r0.<org.joda.time.TestParseISO$Matcher: void assertDate()>()
org.joda.time.TestParseISO$TMatcher.run : specialinvoke r0.<org.joda.time.TestParseISO$Matcher: void assertDate()>() >>>>>>>> org.joda.time.TestParseISO$TMatcher.run : $r10 = new org.joda.time.MutableDateTime
org.joda.time.TestParseISO$TMatcher.run : $r10 = new org.joda.time.MutableDateTime >>>>>>>> org.joda.time.TestParseISO$TMatcher.run : specialinvoke $r10.<org.joda.time.MutableDateTime: void <init>(int,int,int,int,int,int,int)>(1972, 12, 3, 10, 32, 40, 205)
org.joda.time.TestParseISO$TMatcher.run : specialinvoke $r10.<org.joda.time.MutableDateTime: void <init>(int,int,int,int,int,int,int)>(1972, 12, 3, 10, 32, 40, 205) >>>>>>>> org.joda.time.TestParseISO$TMatcher.run : r0.<org.joda.time.TestParseISO$TMatcher: org.joda.time.MutableDateTime dt> = $r10
org.joda.time.TestParseISO$TMatcher.run : r0.<org.joda.time.TestParseISO$TMatcher: org.joda.time.MutableDateTime dt> = $r10 >>>>>>>> org.joda.time.TestParseISO$TMatcher.run : $r11 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dateTimeParser()>()
org.joda.time.TestParseISO$TMatcher.run : $r11 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dateTimeParser()>() >>>>>>>> org.joda.time.TestParseISO$TMatcher.run : virtualinvoke r0.<org.joda.time.TestParseISO$TMatcher: void parse(org.joda.time.format.DateTimeFormatter)>($r11)
org.joda.time.TestParseISO$TMatcher.run : virtualinvoke r0.<org.joda.time.TestParseISO$TMatcher: void parse(org.joda.time.format.DateTimeFormatter)>($r11) >>>>>>>> org.joda.time.TestParseISO$TMatcher.run : specialinvoke r0.<org.joda.time.TestParseISO$Matcher: void assertDate()>()
org.joda.time.TestParseISO$TMatcher.run : specialinvoke r0.<org.joda.time.TestParseISO$Matcher: void assertDate()>() >>>>>>>> org.joda.time.TestParseISO$TMatcher.run : return
