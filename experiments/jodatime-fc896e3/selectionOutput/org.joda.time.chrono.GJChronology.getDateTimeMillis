org.joda.time.chrono.GJChronology.getDateTimeMillis : $r2 = virtualinvoke r0.<org.joda.time.chrono.GJChronology: org.joda.time.Chronology getBase()>() >>>>>>>> org.joda.time.chrono.GJChronology.getDateTimeMillis : r1 = $r2
org.joda.time.chrono.GJChronology.getDateTimeMillis : r1 = $r2 >>>>>>>> org.joda.time.chrono.GJChronology.getDateTimeMillis : if $r2 == null
org.joda.time.chrono.GJChronology.getDateTimeMillis : if $r2 == null >>>>>>>> org.joda.time.chrono.GJChronology.getDateTimeMillis : $l8 = virtualinvoke r1.<org.joda.time.Chronology: long getDateTimeMillis(int,int,int,int,int,int,int)>(i0, i1, i2, i3, i4, i5, i6)
org.joda.time.chrono.GJChronology.getDateTimeMillis : if $r2 == null >>>>>>>> org.joda.time.chrono.GJChronology.getDateTimeMillis : $r3 = r0.<org.joda.time.chrono.GJChronology: org.joda.time.chrono.GregorianChronology iGregorianChronology>
org.joda.time.chrono.GJChronology.getDateTimeMillis : $r3 = r0.<org.joda.time.chrono.GJChronology: org.joda.time.chrono.GregorianChronology iGregorianChronology> >>>>>>>> org.joda.time.chrono.GJChronology.getDateTimeMillis : l7 = virtualinvoke $r3.<org.joda.time.chrono.GregorianChronology: long getDateTimeMillis(int,int,int,int,int,int,int)>(i0, i1, i2, i3, i4, i5, i6)
org.joda.time.chrono.GJChronology.getDateTimeMillis : l7 = virtualinvoke $r3.<org.joda.time.chrono.GregorianChronology: long getDateTimeMillis(int,int,int,int,int,int,int)>(i0, i1, i2, i3, i4, i5, i6) >>>>>>>> org.joda.time.chrono.GJChronology.getDateTimeMillis : $l9 = r0.<org.joda.time.chrono.GJChronology: long iCutoverMillis>
org.joda.time.chrono.GJChronology.getDateTimeMillis : $l9 = r0.<org.joda.time.chrono.GJChronology: long iCutoverMillis> >>>>>>>> org.joda.time.chrono.GJChronology.getDateTimeMillis : $b10 = l7 cmp $l9
org.joda.time.chrono.GJChronology.getDateTimeMillis : $b10 = l7 cmp $l9 >>>>>>>> org.joda.time.chrono.GJChronology.getDateTimeMillis : if $b10 >= 0
org.joda.time.chrono.GJChronology.getDateTimeMillis : if $b10 >= 0 >>>>>>>> org.joda.time.chrono.GJChronology.getDateTimeMillis : $r4 = r0.<org.joda.time.chrono.GJChronology: org.joda.time.chrono.JulianChronology iJulianChronology>
org.joda.time.chrono.GJChronology.getDateTimeMillis : if $b10 >= 0 >>>>>>>> org.joda.time.chrono.GJChronology.getDateTimeMillis : return l7
org.joda.time.chrono.GJChronology.getDateTimeMillis : $r4 = r0.<org.joda.time.chrono.GJChronology: org.joda.time.chrono.JulianChronology iJulianChronology> >>>>>>>> org.joda.time.chrono.GJChronology.getDateTimeMillis : l7 = virtualinvoke $r4.<org.joda.time.chrono.JulianChronology: long getDateTimeMillis(int,int,int,int,int,int,int)>(i0, i1, i2, i3, i4, i5, i6)
org.joda.time.chrono.GJChronology.getDateTimeMillis : l7 = virtualinvoke $r4.<org.joda.time.chrono.JulianChronology: long getDateTimeMillis(int,int,int,int,int,int,int)>(i0, i1, i2, i3, i4, i5, i6) >>>>>>>> org.joda.time.chrono.GJChronology.getDateTimeMillis : $l11 = r0.<org.joda.time.chrono.GJChronology: long iCutoverMillis>
org.joda.time.chrono.GJChronology.getDateTimeMillis : $l11 = r0.<org.joda.time.chrono.GJChronology: long iCutoverMillis> >>>>>>>> org.joda.time.chrono.GJChronology.getDateTimeMillis : $b12 = l7 cmp $l11
org.joda.time.chrono.GJChronology.getDateTimeMillis : $b12 = l7 cmp $l11 >>>>>>>> org.joda.time.chrono.GJChronology.getDateTimeMillis : if $b12 < 0
org.joda.time.chrono.GJChronology.getDateTimeMillis : if $b12 < 0 >>>>>>>> org.joda.time.chrono.GJChronology.getDateTimeMillis : $r5 = new java.lang.IllegalArgumentException
org.joda.time.chrono.GJChronology.getDateTimeMillis : if $b12 < 0 >>>>>>>> org.joda.time.chrono.GJChronology.getDateTimeMillis : return l7
org.joda.time.chrono.GJChronology.getDateTimeMillis : $r5 = new java.lang.IllegalArgumentException >>>>>>>> org.joda.time.chrono.GJChronology.getDateTimeMillis : specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Specified date does not exist")
org.joda.time.chrono.GJChronology.getDateTimeMillis : specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Specified date does not exist") >>>>>>>> org.joda.time.chrono.GJChronology.getDateTimeMillis : throw $r5
org.joda.time.chrono.GJChronology.getDateTimeMillis : $l8 = virtualinvoke r1.<org.joda.time.Chronology: long getDateTimeMillis(int,int,int,int,int,int,int)>(i0, i1, i2, i3, i4, i5, i6) >>>>>>>> org.joda.time.chrono.GJChronology.getDateTimeMillis : return $l8
