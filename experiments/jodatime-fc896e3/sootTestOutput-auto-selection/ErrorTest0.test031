org.joda.time.Seconds.seconds : lookupswitch(i0) {     case -2147483648: >>>>>>>> org.joda.time.Seconds.seconds : $r6 = new org.joda.time.Seconds
org.joda.time.Seconds.seconds : $r6 = new org.joda.time.Seconds >>>>>>>> org.joda.time.Seconds.seconds : specialinvoke $r6.<org.joda.time.Seconds: void <init>(int)>(i0)
org.joda.time.Seconds.seconds : specialinvoke $r6.<org.joda.time.Seconds: void <init>(int)>(i0) >>>>>>>> org.joda.time.Seconds.seconds : return $r6
org.joda.time.Seconds.seconds : return $r6 >>>>>>>> org.joda.time.Seconds.isLessThan : if r1 != null
org.joda.time.Seconds.isLessThan : if r1 != null >>>>>>>> org.joda.time.Seconds.isLessThan : $i1 = virtualinvoke r0.<org.joda.time.Seconds: int getValue()>()
org.joda.time.Seconds.isLessThan : $i1 = virtualinvoke r0.<org.joda.time.Seconds: int getValue()>() >>>>>>>> org.joda.time.base.BaseSingleFieldPeriod.getValue : $i0 = r0.<org.joda.time.base.BaseSingleFieldPeriod: int iPeriod>
org.joda.time.base.BaseSingleFieldPeriod.getValue : $i0 = r0.<org.joda.time.base.BaseSingleFieldPeriod: int iPeriod> >>>>>>>> org.joda.time.base.BaseSingleFieldPeriod.getValue : return $i0
org.joda.time.base.BaseSingleFieldPeriod.getValue : return $i0 >>>>>>>> org.joda.time.Seconds.isLessThan : $i2 = virtualinvoke r1.<org.joda.time.Seconds: int getValue()>()
org.joda.time.Seconds.isLessThan : $i2 = virtualinvoke r1.<org.joda.time.Seconds: int getValue()>() >>>>>>>> org.joda.time.Seconds.isLessThan : if $i1 >= $i2
org.joda.time.Seconds.isLessThan : if $i1 >= $i2 >>>>>>>> org.joda.time.Seconds.isLessThan : $z1 = 1
org.joda.time.Seconds.isLessThan : $z1 = 1 >>>>>>>> org.joda.time.Seconds.isLessThan : goto [?= return $z1]
org.joda.time.Seconds.isLessThan : goto [?= return $z1] >>>>>>>> org.joda.time.Seconds.isLessThan : return $z1
org.joda.time.Seconds.isLessThan : return $z1 >>>>>>>> org.joda.time.Seconds.toStandardDays : $i0 = virtualinvoke r0.<org.joda.time.Seconds: int getValue()>()
org.joda.time.Seconds.toStandardDays : $i0 = virtualinvoke r0.<org.joda.time.Seconds: int getValue()>() >>>>>>>> org.joda.time.Seconds.toStandardDays : $i1 = $i0 / 86400
org.joda.time.Seconds.toStandardDays : $i1 = $i0 / 86400 >>>>>>>> org.joda.time.Seconds.toStandardDays : $r1 = staticinvoke <org.joda.time.Days: org.joda.time.Days days(int)>($i1)
org.joda.time.Seconds.toStandardDays : $r1 = staticinvoke <org.joda.time.Days: org.joda.time.Days days(int)>($i1) >>>>>>>> org.joda.time.Days.days : lookupswitch(i0) {     case -2147483648:
org.joda.time.Days.days : lookupswitch(i0) {     case -2147483648: >>>>>>>> org.joda.time.Days.days : $r0 = <org.joda.time.Days: org.joda.time.Days ZERO>
org.joda.time.Days.days : $r0 = <org.joda.time.Days: org.joda.time.Days ZERO> >>>>>>>> org.joda.time.Days.days : return $r0
org.joda.time.Days.days : return $r0 >>>>>>>> org.joda.time.Seconds.toStandardDays : return $r1
org.joda.time.Seconds.toStandardDays : return $r1 >>>>>>>> org.joda.time.base.BaseSingleFieldPeriod.compareTo : $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.joda.time.base.BaseSingleFieldPeriod.compareTo : $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.joda.time.base.BaseSingleFieldPeriod.compareTo : $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.joda.time.base.BaseSingleFieldPeriod.compareTo : $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.joda.time.base.BaseSingleFieldPeriod.compareTo : if $r3 == $r4
org.joda.time.base.BaseSingleFieldPeriod.compareTo : if $r3 == $r4 >>>>>>>> org.joda.time.base.BaseSingleFieldPeriod.compareTo : $r5 = new java.lang.ClassCastException
org.joda.time.base.BaseSingleFieldPeriod.compareTo : $r5 = new java.lang.ClassCastException >>>>>>>> org.joda.time.base.BaseSingleFieldPeriod.compareTo : $r2 = new java.lang.StringBuilder
org.joda.time.base.BaseSingleFieldPeriod.compareTo : $r2 = new java.lang.StringBuilder >>>>>>>> org.joda.time.base.BaseSingleFieldPeriod.compareTo : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.joda.time.base.BaseSingleFieldPeriod.compareTo : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.time.base.BaseSingleFieldPeriod.compareTo : $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.joda.time.base.BaseSingleFieldPeriod.compareTo : $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.joda.time.base.BaseSingleFieldPeriod.compareTo : $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6)
org.joda.time.base.BaseSingleFieldPeriod.compareTo : $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6) >>>>>>>> org.joda.time.base.BaseSingleFieldPeriod.compareTo : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be compared to ")
org.joda.time.base.BaseSingleFieldPeriod.compareTo : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be compared to ") >>>>>>>> org.joda.time.base.BaseSingleFieldPeriod.compareTo : $r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.joda.time.base.BaseSingleFieldPeriod.compareTo : $r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.joda.time.base.BaseSingleFieldPeriod.compareTo : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9)
org.joda.time.base.BaseSingleFieldPeriod.compareTo : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9) >>>>>>>> org.joda.time.base.BaseSingleFieldPeriod.compareTo : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.time.base.BaseSingleFieldPeriod.compareTo : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.time.base.BaseSingleFieldPeriod.compareTo : specialinvoke $r5.<java.lang.ClassCastException: void <init>(java.lang.String)>($r11)
org.joda.time.base.BaseSingleFieldPeriod.compareTo : specialinvoke $r5.<java.lang.ClassCastException: void <init>(java.lang.String)>($r11) >>>>>>>> org.joda.time.base.BaseSingleFieldPeriod.compareTo : throw $r5
