org.joda.time.format.ISOPeriodFormat.standard : $r0 = <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter cStandard> >>>>>>>> org.joda.time.format.ISOPeriodFormat.standard : if $r0 != null
org.joda.time.format.ISOPeriodFormat.standard : if $r0 != null >>>>>>>> org.joda.time.format.ISOPeriodFormat.standard : $r19 = <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter cStandard>
org.joda.time.format.ISOPeriodFormat.standard : $r19 = <org.joda.time.format.ISOPeriodFormat: org.joda.time.format.PeriodFormatter cStandard> >>>>>>>> org.joda.time.format.ISOPeriodFormat.standard : return $r19
org.joda.time.format.ISOPeriodFormat.standard : return $r19 >>>>>>>> org.joda.time.PeriodType.seconds : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cSeconds>
org.joda.time.PeriodType.seconds : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cSeconds> >>>>>>>> org.joda.time.PeriodType.seconds : if r0 != null
org.joda.time.PeriodType.seconds : if r0 != null >>>>>>>> org.joda.time.PeriodType.seconds : $r2 = new org.joda.time.PeriodType
org.joda.time.PeriodType.seconds : $r2 = new org.joda.time.PeriodType >>>>>>>> org.joda.time.PeriodType.seconds : $r3 = newarray (org.joda.time.DurationFieldType)[1]
org.joda.time.PeriodType.seconds : $r3 = newarray (org.joda.time.DurationFieldType)[1] >>>>>>>> org.joda.time.PeriodType.seconds : $r1 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>()
org.joda.time.PeriodType.seconds : $r1 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType seconds()>() >>>>>>>> org.joda.time.DurationFieldType.seconds : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType SECONDS_TYPE>
org.joda.time.DurationFieldType.seconds : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType SECONDS_TYPE> >>>>>>>> org.joda.time.DurationFieldType.seconds : return $r0
org.joda.time.DurationFieldType.seconds : return $r0 >>>>>>>> org.joda.time.PeriodType.seconds : $r3[0] = $r1
org.joda.time.PeriodType.seconds : $r3[0] = $r1 >>>>>>>> org.joda.time.PeriodType.seconds : $r4 = newarray (int)[8]
org.joda.time.PeriodType.seconds : $r4 = newarray (int)[8] >>>>>>>> org.joda.time.PeriodType.seconds : $r4[0] = -1
org.joda.time.PeriodType.seconds : $r4[0] = -1 >>>>>>>> org.joda.time.PeriodType.seconds : $r4[1] = -1
org.joda.time.PeriodType.seconds : $r4[1] = -1 >>>>>>>> org.joda.time.PeriodType.seconds : $r4[2] = -1
org.joda.time.PeriodType.seconds : $r4[2] = -1 >>>>>>>> org.joda.time.PeriodType.seconds : $r4[3] = -1
org.joda.time.PeriodType.seconds : $r4[3] = -1 >>>>>>>> org.joda.time.PeriodType.seconds : $r4[4] = -1
org.joda.time.PeriodType.seconds : $r4[4] = -1 >>>>>>>> org.joda.time.PeriodType.seconds : $r4[5] = -1
org.joda.time.PeriodType.seconds : $r4[5] = -1 >>>>>>>> org.joda.time.PeriodType.seconds : $r4[6] = 0
org.joda.time.PeriodType.seconds : $r4[6] = 0 >>>>>>>> org.joda.time.PeriodType.seconds : $r4[7] = -1
org.joda.time.PeriodType.seconds : $r4[7] = -1 >>>>>>>> org.joda.time.PeriodType.seconds : specialinvoke $r2.<org.joda.time.PeriodType: void <init>(java.lang.String,org.joda.time.DurationFieldType[],int[])>("Seconds", $r3, $r4)
org.joda.time.PeriodType.seconds : specialinvoke $r2.<org.joda.time.PeriodType: void <init>(java.lang.String,org.joda.time.DurationFieldType[],int[])>("Seconds", $r3, $r4) >>>>>>>> org.joda.time.PeriodType.seconds : r0 = $r2
org.joda.time.PeriodType.seconds : r0 = $r2 >>>>>>>> org.joda.time.PeriodType.seconds : <org.joda.time.PeriodType: org.joda.time.PeriodType cSeconds> = r0
org.joda.time.PeriodType.seconds : <org.joda.time.PeriodType: org.joda.time.PeriodType cSeconds> = r0 >>>>>>>> org.joda.time.PeriodType.seconds : return r0
org.joda.time.PeriodType.seconds : return r0 >>>>>>>> org.joda.time.format.PeriodFormatter.withParseType : $r2 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.PeriodType iParseType>
org.joda.time.format.PeriodFormatter.withParseType : $r2 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.PeriodType iParseType> >>>>>>>> org.joda.time.format.PeriodFormatter.withParseType : if r1 != $r2
org.joda.time.format.PeriodFormatter.withParseType : if r1 != $r2 >>>>>>>> org.joda.time.format.PeriodFormatter.withParseType : $r3 = new org.joda.time.format.PeriodFormatter
org.joda.time.format.PeriodFormatter.withParseType : $r3 = new org.joda.time.format.PeriodFormatter >>>>>>>> org.joda.time.format.PeriodFormatter.withParseType : $r4 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter iPrinter>
org.joda.time.format.PeriodFormatter.withParseType : $r4 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter iPrinter> >>>>>>>> org.joda.time.format.PeriodFormatter.withParseType : $r5 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser iParser>
org.joda.time.format.PeriodFormatter.withParseType : $r5 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser iParser> >>>>>>>> org.joda.time.format.PeriodFormatter.withParseType : $r6 = r0.<org.joda.time.format.PeriodFormatter: java.util.Locale iLocale>
org.joda.time.format.PeriodFormatter.withParseType : $r6 = r0.<org.joda.time.format.PeriodFormatter: java.util.Locale iLocale> >>>>>>>> org.joda.time.format.PeriodFormatter.withParseType : specialinvoke $r3.<org.joda.time.format.PeriodFormatter: void <init>(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,java.util.Locale,org.joda.time.PeriodType)>($r4, $r5, $r6, r1)
org.joda.time.format.PeriodFormatter.withParseType : specialinvoke $r3.<org.joda.time.format.PeriodFormatter: void <init>(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,java.util.Locale,org.joda.time.PeriodType)>($r4, $r5, $r6, r1) >>>>>>>> org.joda.time.format.PeriodFormatter.withParseType : return $r3
org.joda.time.format.PeriodFormatter.withParseType : return $r3 >>>>>>>> org.joda.time.Seconds.seconds : lookupswitch(i0) {     case -2147483648:
org.joda.time.Seconds.seconds : lookupswitch(i0) {     case -2147483648: >>>>>>>> org.joda.time.Seconds.seconds : $r6 = new org.joda.time.Seconds
org.joda.time.Seconds.seconds : $r6 = new org.joda.time.Seconds >>>>>>>> org.joda.time.Seconds.seconds : specialinvoke $r6.<org.joda.time.Seconds: void <init>(int)>(i0)
org.joda.time.Seconds.seconds : specialinvoke $r6.<org.joda.time.Seconds: void <init>(int)>(i0) >>>>>>>> org.joda.time.Seconds.seconds : return $r6
org.joda.time.Seconds.seconds : return $r6 >>>>>>>> org.joda.time.Seconds.toStandardDays : $i0 = virtualinvoke r0.<org.joda.time.Seconds: int getValue()>()
org.joda.time.Seconds.toStandardDays : $i0 = virtualinvoke r0.<org.joda.time.Seconds: int getValue()>() >>>>>>>> org.joda.time.base.BaseSingleFieldPeriod.getValue : $i0 = r0.<org.joda.time.base.BaseSingleFieldPeriod: int iPeriod>
org.joda.time.base.BaseSingleFieldPeriod.getValue : $i0 = r0.<org.joda.time.base.BaseSingleFieldPeriod: int iPeriod> >>>>>>>> org.joda.time.base.BaseSingleFieldPeriod.getValue : return $i0
org.joda.time.base.BaseSingleFieldPeriod.getValue : return $i0 >>>>>>>> org.joda.time.Seconds.toStandardDays : $i1 = $i0 / 86400
org.joda.time.Seconds.toStandardDays : $i1 = $i0 / 86400 >>>>>>>> org.joda.time.Seconds.toStandardDays : $r1 = staticinvoke <org.joda.time.Days: org.joda.time.Days days(int)>($i1)
org.joda.time.Seconds.toStandardDays : $r1 = staticinvoke <org.joda.time.Days: org.joda.time.Days days(int)>($i1) >>>>>>>> org.joda.time.PeriodType.days : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cDays>
org.joda.time.PeriodType.days : r0 = <org.joda.time.PeriodType: org.joda.time.PeriodType cDays> >>>>>>>> org.joda.time.PeriodType.days : if r0 != null
org.joda.time.PeriodType.days : if r0 != null >>>>>>>> org.joda.time.PeriodType.days : $r2 = new org.joda.time.PeriodType
org.joda.time.PeriodType.days : $r2 = new org.joda.time.PeriodType >>>>>>>> org.joda.time.PeriodType.days : $r3 = newarray (org.joda.time.DurationFieldType)[1]
org.joda.time.PeriodType.days : $r3 = newarray (org.joda.time.DurationFieldType)[1] >>>>>>>> org.joda.time.PeriodType.days : $r1 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType days()>()
org.joda.time.PeriodType.days : $r1 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType days()>() >>>>>>>> org.joda.time.DurationFieldType.days : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType DAYS_TYPE>
org.joda.time.DurationFieldType.days : $r0 = <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType DAYS_TYPE> >>>>>>>> org.joda.time.DurationFieldType.days : return $r0
org.joda.time.DurationFieldType.days : return $r0 >>>>>>>> org.joda.time.PeriodType.days : $r3[0] = $r1
org.joda.time.PeriodType.days : $r3[0] = $r1 >>>>>>>> org.joda.time.PeriodType.days : $r4 = newarray (int)[8]
org.joda.time.PeriodType.days : $r4 = newarray (int)[8] >>>>>>>> org.joda.time.PeriodType.days : $r4[0] = -1
org.joda.time.PeriodType.days : $r4[0] = -1 >>>>>>>> org.joda.time.PeriodType.days : $r4[1] = -1
org.joda.time.PeriodType.days : $r4[1] = -1 >>>>>>>> org.joda.time.PeriodType.days : $r4[2] = -1
org.joda.time.PeriodType.days : $r4[2] = -1 >>>>>>>> org.joda.time.PeriodType.days : $r4[3] = 0
org.joda.time.PeriodType.days : $r4[3] = 0 >>>>>>>> org.joda.time.PeriodType.days : $r4[4] = -1
org.joda.time.PeriodType.days : $r4[4] = -1 >>>>>>>> org.joda.time.PeriodType.days : $r4[5] = -1
org.joda.time.PeriodType.days : $r4[5] = -1 >>>>>>>> org.joda.time.PeriodType.days : $r4[6] = -1
org.joda.time.PeriodType.days : $r4[6] = -1 >>>>>>>> org.joda.time.PeriodType.days : $r4[7] = -1
org.joda.time.PeriodType.days : $r4[7] = -1 >>>>>>>> org.joda.time.PeriodType.days : specialinvoke $r2.<org.joda.time.PeriodType: void <init>(java.lang.String,org.joda.time.DurationFieldType[],int[])>("Days", $r3, $r4)
org.joda.time.PeriodType.days : specialinvoke $r2.<org.joda.time.PeriodType: void <init>(java.lang.String,org.joda.time.DurationFieldType[],int[])>("Days", $r3, $r4) >>>>>>>> org.joda.time.PeriodType.days : r0 = $r2
org.joda.time.PeriodType.days : r0 = $r2 >>>>>>>> org.joda.time.PeriodType.days : <org.joda.time.PeriodType: org.joda.time.PeriodType cDays> = r0
org.joda.time.PeriodType.days : <org.joda.time.PeriodType: org.joda.time.PeriodType cDays> = r0 >>>>>>>> org.joda.time.PeriodType.days : return r0
org.joda.time.PeriodType.days : return r0 >>>>>>>> org.joda.time.Days.days : lookupswitch(i0) {     case -2147483648:
org.joda.time.Days.days : lookupswitch(i0) {     case -2147483648: >>>>>>>> org.joda.time.Days.days : $r0 = <org.joda.time.Days: org.joda.time.Days ZERO>
org.joda.time.Days.days : $r0 = <org.joda.time.Days: org.joda.time.Days ZERO> >>>>>>>> org.joda.time.Days.days : return $r0
org.joda.time.Days.days : return $r0 >>>>>>>> org.joda.time.Seconds.toStandardDays : return $r1
