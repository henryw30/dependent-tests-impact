org.joda.time.Seconds.toString : $r1 = new java.lang.StringBuilder >>>>>>>> org.joda.time.Seconds.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.joda.time.Seconds.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.time.Seconds.toString : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PT")
org.joda.time.Seconds.toString : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PT") >>>>>>>> org.joda.time.Seconds.toString : $i0 = virtualinvoke r0.<org.joda.time.Seconds: int getValue()>()
org.joda.time.Seconds.toString : $i0 = virtualinvoke r0.<org.joda.time.Seconds: int getValue()>() >>>>>>>> org.joda.time.base.BaseSingleFieldPeriod.getValue : $i0 = r0.<org.joda.time.base.BaseSingleFieldPeriod: int iPeriod>
org.joda.time.base.BaseSingleFieldPeriod.getValue : $i0 = r0.<org.joda.time.base.BaseSingleFieldPeriod: int iPeriod> >>>>>>>> org.joda.time.base.BaseSingleFieldPeriod.getValue : return $i0
org.joda.time.base.BaseSingleFieldPeriod.getValue : return $i0 >>>>>>>> org.joda.time.Seconds.toString : $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0)
org.joda.time.Seconds.toString : $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0) >>>>>>>> org.joda.time.Seconds.toString : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
org.joda.time.Seconds.toString : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) >>>>>>>> org.joda.time.Seconds.toString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("S")
org.joda.time.Seconds.toString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("S") >>>>>>>> org.joda.time.Seconds.toString : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.time.Seconds.toString : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.time.Seconds.toString : return $r6
org.joda.time.Seconds.toString : return $r6 >>>>>>>> org.joda.time.Seconds.toStandardDays : $i0 = virtualinvoke r0.<org.joda.time.Seconds: int getValue()>()
org.joda.time.Seconds.toStandardDays : $i0 = virtualinvoke r0.<org.joda.time.Seconds: int getValue()>() >>>>>>>> org.joda.time.Seconds.toStandardDays : $i1 = $i0 / 86400
org.joda.time.Seconds.toStandardDays : $i1 = $i0 / 86400 >>>>>>>> org.joda.time.Seconds.toStandardDays : $r1 = staticinvoke <org.joda.time.Days: org.joda.time.Days days(int)>($i1)
org.joda.time.Seconds.toStandardDays : $r1 = staticinvoke <org.joda.time.Days: org.joda.time.Days days(int)>($i1) >>>>>>>> org.joda.time.Days.days : lookupswitch(i0) {     case -2147483648:
org.joda.time.Days.days : lookupswitch(i0) {     case -2147483648: >>>>>>>> org.joda.time.Days.days : $r0 = <org.joda.time.Days: org.joda.time.Days ZERO>
org.joda.time.Days.days : $r0 = <org.joda.time.Days: org.joda.time.Days ZERO> >>>>>>>> org.joda.time.Days.days : return $r0
org.joda.time.Days.days : return $r0 >>>>>>>> org.joda.time.Seconds.toStandardDays : return $r1
