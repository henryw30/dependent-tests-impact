org.joda.time.format.FormatUtils.writeUnpaddedInteger : i1 = (int) l0 >>>>>>>> org.joda.time.format.FormatUtils.writeUnpaddedInteger : $l2 = (long) i1
org.joda.time.format.FormatUtils.writeUnpaddedInteger : $l2 = (long) i1 >>>>>>>> org.joda.time.format.FormatUtils.writeUnpaddedInteger : $b3 = $l2 cmp l0
org.joda.time.format.FormatUtils.writeUnpaddedInteger : $b3 = $l2 cmp l0 >>>>>>>> org.joda.time.format.FormatUtils.writeUnpaddedInteger : if $b3 != 0
org.joda.time.format.FormatUtils.writeUnpaddedInteger : if $b3 != 0 >>>>>>>> org.joda.time.format.FormatUtils.writeUnpaddedInteger : staticinvoke <org.joda.time.format.FormatUtils: void writeUnpaddedInteger(java.io.Writer,int)>(r0, i1)
org.joda.time.format.FormatUtils.writeUnpaddedInteger : staticinvoke <org.joda.time.format.FormatUtils: void writeUnpaddedInteger(java.io.Writer,int)>(r0, i1) >>>>>>>> org.joda.time.format.FormatUtils.writeUnpaddedInteger : if i0 >= 0
org.joda.time.format.FormatUtils.writeUnpaddedInteger : if i0 >= 0 >>>>>>>> org.joda.time.format.FormatUtils.writeUnpaddedInteger : if i0 >= 10
org.joda.time.format.FormatUtils.writeUnpaddedInteger : if i0 >= 10 >>>>>>>> org.joda.time.format.FormatUtils.writeUnpaddedInteger : if i0 >= 100
org.joda.time.format.FormatUtils.writeUnpaddedInteger : if i0 >= 100 >>>>>>>> org.joda.time.format.FormatUtils.writeUnpaddedInteger : $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0)
org.joda.time.format.FormatUtils.writeUnpaddedInteger : $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0) >>>>>>>> org.joda.time.format.FormatUtils.writeUnpaddedInteger : virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>($r1)
