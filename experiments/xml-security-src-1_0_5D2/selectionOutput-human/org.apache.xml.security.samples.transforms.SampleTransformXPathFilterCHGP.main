org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP.main : staticinvoke <org.apache.xml.security.Init: void init()>() >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP.main : r1 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>()
org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP.main : r1 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>() >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP.main : virtualinvoke r1.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(1)
org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP.main : virtualinvoke r1.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(1) >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP.main : r2 = virtualinvoke r1.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>()
org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP.main : r2 = virtualinvoke r1.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>() >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP.main : r3 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n"
org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP.main : r3 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n" >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP.main : $r5 = new java.io.ByteArrayInputStream
org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP.main : $r5 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP.main : $r6 = virtualinvoke r3.<java.lang.String: byte[] getBytes()>()
org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP.main : $r6 = virtualinvoke r3.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP.main : specialinvoke $r5.<java.io.ByteArrayInputStream: void <init>(byte[])>($r6)
org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP.main : specialinvoke $r5.<java.io.ByteArrayInputStream: void <init>(byte[])>($r6) >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP.main : r4 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r5)
org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP.main : r4 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r5) >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP.main : staticinvoke <org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP: void outApache(org.w3c.dom.Document)>(r4)
org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP.main : staticinvoke <org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP: void outApache(org.w3c.dom.Document)>(r4) >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP.main : $r7 = new java.io.ByteArrayInputStream
org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP.main : $r7 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP.main : $r8 = virtualinvoke r3.<java.lang.String: byte[] getBytes()>()
org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP.main : $r8 = virtualinvoke r3.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP.main : specialinvoke $r7.<java.io.ByteArrayInputStream: void <init>(byte[])>($r8)
org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP.main : specialinvoke $r7.<java.io.ByteArrayInputStream: void <init>(byte[])>($r8) >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP.main : r9 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r7)
org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP.main : r9 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r7) >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP.main : staticinvoke <org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP: void outXFilter2(org.w3c.dom.Document)>(r9)
org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP.main : staticinvoke <org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP: void outXFilter2(org.w3c.dom.Document)>(r9) >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXPathFilterCHGP.main : return
