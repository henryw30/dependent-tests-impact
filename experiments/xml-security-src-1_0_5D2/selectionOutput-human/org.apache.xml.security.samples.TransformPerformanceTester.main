org.apache.xml.security.samples.TransformPerformanceTester.main : staticinvoke <org.apache.xml.security.Init: void init()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r1 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : r1 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r1.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(1)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r1.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(1) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r2 = virtualinvoke r1.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : r2 = virtualinvoke r1.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : b0 = 50
org.apache.xml.security.samples.TransformPerformanceTester.main : b0 = 50 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : z0 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : z0 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : z1 = 1
org.apache.xml.security.samples.TransformPerformanceTester.main : z1 = 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : z2 = 1
org.apache.xml.security.samples.TransformPerformanceTester.main : z2 = 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : z3 = 1
org.apache.xml.security.samples.TransformPerformanceTester.main : z3 = 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : z4 = 1
org.apache.xml.security.samples.TransformPerformanceTester.main : z4 = 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : z5 = 1
org.apache.xml.security.samples.TransformPerformanceTester.main : z5 = 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : z6 = 1
org.apache.xml.security.samples.TransformPerformanceTester.main : z6 = 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : z7 = 1
org.apache.xml.security.samples.TransformPerformanceTester.main : z7 = 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : z8 = 1
org.apache.xml.security.samples.TransformPerformanceTester.main : z8 = 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : z9 = 1
org.apache.xml.security.samples.TransformPerformanceTester.main : z9 = 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : z10 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : z10 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : z11 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : z11 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : z12 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : z12 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : z13 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : z13 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : z14 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : z14 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : z15 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : z15 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : z16 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : z16 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : z17 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : z17 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : z18 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : z18 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : z19 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : z19 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : z20 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : z20 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : z21 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : z21 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : z22 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : z22 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : z23 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : z23 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : z24 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : z24 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : z25 = 1
org.apache.xml.security.samples.TransformPerformanceTester.main : z25 = 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z0 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if z0 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r3 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : if z0 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z1 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if z1 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r21 = new java.io.FileInputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : if z1 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z2 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if z2 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r39 = new java.io.FileInputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : if z2 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z3 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if z3 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r57 = new java.io.FileInputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : if z3 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z4 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if z4 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r75 = "<Document>\n     <ToBeSigned>\n       <!-- comment -->\n       <Data />\n       <NotToBeSigned>\n         <ReallyToBeSigned>\n           <!-- comment -->\n           <Data />\n         </ReallyToBeSigned>\n       </NotToBeSigned>\n     </ToBeSigned>\n     <ToBeSigned>\n       <Data />\n       <NotToBeSigned>\n         <Data />\n       </NotToBeSigned>\n     </ToBeSigned>\n</Document>"
org.apache.xml.security.samples.TransformPerformanceTester.main : if z4 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z5 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if z5 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r94 = "<Document>\n     <ToBeSigned>\n       <!-- comment -->\n       <Data />\n       <NotToBeSigned>\n         <ReallyToBeSigned>\n           <!-- comment -->\n           <Data />\n         </ReallyToBeSigned>\n       </NotToBeSigned>\n     </ToBeSigned>\n     <ToBeSigned>\n       <Data />\n       <NotToBeSigned>\n         <Data />\n       </NotToBeSigned>\n     </ToBeSigned>\n</Document>"
org.apache.xml.security.samples.TransformPerformanceTester.main : if z5 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z6 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if z6 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r114 = "<Document>\n     <ToBeSigned>\n       <!-- comment -->\n       <Data />\n       <NotToBeSigned>\n         <ReallyToBeSigned>\n           <!-- comment -->\n           <Data />\n         </ReallyToBeSigned>\n       </NotToBeSigned>\n     </ToBeSigned>\n     <ToBeSigned>\n       <Data />\n       <NotToBeSigned>\n         <Data />\n       </NotToBeSigned>\n     </ToBeSigned>\n</Document>"
org.apache.xml.security.samples.TransformPerformanceTester.main : if z6 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z7 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if z7 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r134 = "<Document>\n     <ToBeSigned>\n       <!-- comment -->\n       <Data />\n       <NotToBeSigned>\n         <ReallyToBeSigned>\n           <!-- comment -->\n           <Data />\n         </ReallyToBeSigned>\n       </NotToBeSigned>\n     </ToBeSigned>\n     <ToBeSigned>\n       <Data />\n       <NotToBeSigned>\n         <Data />\n       </NotToBeSigned>\n     </ToBeSigned>\n</Document>"
org.apache.xml.security.samples.TransformPerformanceTester.main : if z7 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z8 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if z8 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r154 = "<Document>\n     <ToBeSigned>\n       <!-- comment -->\n       <Data />\n       <NotToBeSigned>\n         <ReallyToBeSigned>\n           <!-- comment -->\n           <Data />\n         </ReallyToBeSigned>\n       </NotToBeSigned>\n     </ToBeSigned>\n     <ToBeSigned>\n       <Data />\n       <NotToBeSigned>\n         <Data />\n       </NotToBeSigned>\n     </ToBeSigned>\n</Document>"
org.apache.xml.security.samples.TransformPerformanceTester.main : if z8 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z9 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if z9 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r174 = "<Document>\n     <ToBeSigned>\n       <!-- comment -->\n       <Data />\n       <NotToBeSigned>\n         <ReallyToBeSigned>\n           <!-- comment -->\n           <Data />\n         </ReallyToBeSigned>\n       </NotToBeSigned>\n     </ToBeSigned>\n     <ToBeSigned>\n       <Data />\n       <NotToBeSigned>\n         <Data />\n       </NotToBeSigned>\n     </ToBeSigned>\n</Document>"
org.apache.xml.security.samples.TransformPerformanceTester.main : if z9 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z24 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if z24 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r194 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n"
org.apache.xml.security.samples.TransformPerformanceTester.main : if z24 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z17 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if z17 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r214 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n"
org.apache.xml.security.samples.TransformPerformanceTester.main : if z17 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z18 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if z18 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r234 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n"
org.apache.xml.security.samples.TransformPerformanceTester.main : if z18 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z19 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if z19 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r254 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n"
org.apache.xml.security.samples.TransformPerformanceTester.main : if z19 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z20 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if z20 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r274 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n"
org.apache.xml.security.samples.TransformPerformanceTester.main : if z20 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z21 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if z21 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r294 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n"
org.apache.xml.security.samples.TransformPerformanceTester.main : if z21 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z22 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if z22 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r314 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n"
org.apache.xml.security.samples.TransformPerformanceTester.main : if z22 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z23 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if z23 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r334 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n"
org.apache.xml.security.samples.TransformPerformanceTester.main : if z23 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z10 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if z10 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r354 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n"
org.apache.xml.security.samples.TransformPerformanceTester.main : if z10 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z11 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if z11 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r374 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n"
org.apache.xml.security.samples.TransformPerformanceTester.main : if z11 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z12 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if z12 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r394 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n"
org.apache.xml.security.samples.TransformPerformanceTester.main : if z12 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z13 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if z13 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r414 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n"
org.apache.xml.security.samples.TransformPerformanceTester.main : if z13 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z14 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if z14 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r434 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n"
org.apache.xml.security.samples.TransformPerformanceTester.main : if z14 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z15 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if z15 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r454 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n"
org.apache.xml.security.samples.TransformPerformanceTester.main : if z15 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z16 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if z16 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r474 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n"
org.apache.xml.security.samples.TransformPerformanceTester.main : if z16 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z25 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if z25 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r494 = "<Document>\n     <ToBeSigned>\n       <!-- comment -->\n       <Data />\n       <NotToBeSigned>\n         <ReallyToBeSigned>\n           <!-- comment -->\n           <Data />\n         </ReallyToBeSigned>\n       </NotToBeSigned>\n     </ToBeSigned>\n     <ToBeSigned>\n       <Data />\n       <NotToBeSigned>\n         <Data />\n       </NotToBeSigned>\n     </ToBeSigned>\n</Document>"
org.apache.xml.security.samples.TransformPerformanceTester.main : if z25 == 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : return
org.apache.xml.security.samples.TransformPerformanceTester.main : r494 = "<Document>\n     <ToBeSigned>\n       <!-- comment -->\n       <Data />\n       <NotToBeSigned>\n         <ReallyToBeSigned>\n           <!-- comment -->\n           <Data />\n         </ReallyToBeSigned>\n       </NotToBeSigned>\n     </ToBeSigned>\n     <ToBeSigned>\n       <Data />\n       <NotToBeSigned>\n         <Data />\n       </NotToBeSigned>\n     </ToBeSigned>\n</Document>" >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r495 = new java.io.ByteArrayInputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r495 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r496 = virtualinvoke r494.<java.lang.String: byte[] getBytes()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r496 = virtualinvoke r494.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r495.<java.io.ByteArrayInputStream: void <init>(byte[])>($r496)
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r495.<java.io.ByteArrayInputStream: void <init>(byte[])>($r496) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r497 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r495)
org.apache.xml.security.samples.TransformPerformanceTester.main : r497 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r495) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l126 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l126 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r498 = (byte[][]) null
org.apache.xml.security.samples.TransformPerformanceTester.main : r498 = (byte[][]) null >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i127 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : i127 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i127 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : if i127 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r498 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] xfilter2spec_xfilter2_3_new(org.w3c.dom.Document)>(r497)
org.apache.xml.security.samples.TransformPerformanceTester.main : if i127 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l128 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l128 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $l129 = l128 - l126
org.apache.xml.security.samples.TransformPerformanceTester.main : $l129 = l128 - l126 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : d50 = (double) $l129
org.apache.xml.security.samples.TransformPerformanceTester.main : d50 = (double) $l129 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r499 = <java.lang.System: java.io.PrintStream out>
org.apache.xml.security.samples.TransformPerformanceTester.main : $r499 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r500 = new java.lang.StringBuilder
org.apache.xml.security.samples.TransformPerformanceTester.main : $r500 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r500.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r500.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r501 = virtualinvoke $r500.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r501 = virtualinvoke $r500.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r502 = virtualinvoke $r501.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * xfilter2spec_xfilter2_3_new took ")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r502 = virtualinvoke $r501.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * xfilter2spec_xfilter2_3_new took ") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r503 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r503 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $d51 = d50 / 1000.0
org.apache.xml.security.samples.TransformPerformanceTester.main : $d51 = d50 / 1000.0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r504 = virtualinvoke $r503.<java.text.NumberFormat: java.lang.String format(double)>($d51)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r504 = virtualinvoke $r503.<java.text.NumberFormat: java.lang.String format(double)>($d51) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r505 = virtualinvoke $r502.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r504)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r505 = virtualinvoke $r502.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r504) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r506 = virtualinvoke $r505.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r506 = virtualinvoke $r505.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r507 = virtualinvoke $r506.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r507 = virtualinvoke $r506.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r499.<java.io.PrintStream: void println(java.lang.String)>($r507)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r499.<java.io.PrintStream: void println(java.lang.String)>($r507) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r508 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r508 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r508.<java.io.FileOutputStream: void <init>(java.lang.String)>("xfilter2spec_xfilter2_3_new_doc.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r508.<java.io.FileOutputStream: void <init>(java.lang.String)>("xfilter2spec_xfilter2_3_new_doc.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r509 = $r508
org.apache.xml.security.samples.TransformPerformanceTester.main : r509 = $r508 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r510 = r498[0]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r510 = r498[0] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r509.<java.io.FileOutputStream: void write(byte[])>($r510)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r509.<java.io.FileOutputStream: void write(byte[])>($r510) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r509.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r509.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r511 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r511 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r511.<java.io.FileOutputStream: void <init>(java.lang.String)>("xfilter2spec_xfilter2_3_new_ref.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r511.<java.io.FileOutputStream: void <init>(java.lang.String)>("xfilter2spec_xfilter2_3_new_ref.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r512 = $r511
org.apache.xml.security.samples.TransformPerformanceTester.main : r512 = $r511 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r513 = r498[1]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r513 = r498[1] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r512.<java.io.FileOutputStream: void write(byte[])>($r513)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r512.<java.io.FileOutputStream: void write(byte[])>($r513) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r512.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r512.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : return
org.apache.xml.security.samples.TransformPerformanceTester.main : r498 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] xfilter2spec_xfilter2_3_new(org.w3c.dom.Document)>(r497) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i127 = i127 + 1
org.apache.xml.security.samples.TransformPerformanceTester.main : i127 = i127 + 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)]
org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i127 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : r474 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n" >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r475 = new java.io.ByteArrayInputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r475 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r476 = virtualinvoke r474.<java.lang.String: byte[] getBytes()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r476 = virtualinvoke r474.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r475.<java.io.ByteArrayInputStream: void <init>(byte[])>($r476)
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r475.<java.io.ByteArrayInputStream: void <init>(byte[])>($r476) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r477 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r475)
org.apache.xml.security.samples.TransformPerformanceTester.main : r477 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r475) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l121 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l121 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r478 = (byte[][]) null
org.apache.xml.security.samples.TransformPerformanceTester.main : r478 = (byte[][]) null >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i122 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : i122 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i122 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : if i122 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r478 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] apachesample_xfilter2_7(org.w3c.dom.Document)>(r477)
org.apache.xml.security.samples.TransformPerformanceTester.main : if i122 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l124 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l124 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $l125 = l124 - l121
org.apache.xml.security.samples.TransformPerformanceTester.main : $l125 = l124 - l121 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : d48 = (double) $l125
org.apache.xml.security.samples.TransformPerformanceTester.main : d48 = (double) $l125 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r479 = <java.lang.System: java.io.PrintStream out>
org.apache.xml.security.samples.TransformPerformanceTester.main : $r479 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r480 = new java.lang.StringBuilder
org.apache.xml.security.samples.TransformPerformanceTester.main : $r480 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r480.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r480.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r481 = virtualinvoke $r480.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r481 = virtualinvoke $r480.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r482 = virtualinvoke $r481.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * apachesample_xfilter2_7 took ")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r482 = virtualinvoke $r481.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * apachesample_xfilter2_7 took ") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r483 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r483 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $d49 = d48 / 1000.0
org.apache.xml.security.samples.TransformPerformanceTester.main : $d49 = d48 / 1000.0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r484 = virtualinvoke $r483.<java.text.NumberFormat: java.lang.String format(double)>($d49)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r484 = virtualinvoke $r483.<java.text.NumberFormat: java.lang.String format(double)>($d49) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r485 = virtualinvoke $r482.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r484)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r485 = virtualinvoke $r482.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r484) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r486 = virtualinvoke $r485.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r486 = virtualinvoke $r485.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r487 = virtualinvoke $r486.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r487 = virtualinvoke $r486.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r479.<java.io.PrintStream: void println(java.lang.String)>($r487)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r479.<java.io.PrintStream: void println(java.lang.String)>($r487) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r488 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r488 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r488.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_xfilter2_doc_7.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r488.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_xfilter2_doc_7.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r489 = $r488
org.apache.xml.security.samples.TransformPerformanceTester.main : r489 = $r488 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r490 = r478[0]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r490 = r478[0] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r489.<java.io.FileOutputStream: void write(byte[])>($r490)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r489.<java.io.FileOutputStream: void write(byte[])>($r490) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r489.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r489.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r491 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r491 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r491.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_xfilter2_ref_7.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r491.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_xfilter2_ref_7.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r492 = $r491
org.apache.xml.security.samples.TransformPerformanceTester.main : r492 = $r491 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r493 = r478[1]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r493 = r478[1] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r492.<java.io.FileOutputStream: void write(byte[])>($r493)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r492.<java.io.FileOutputStream: void write(byte[])>($r493) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r492.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r492.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z25 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : r478 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] apachesample_xfilter2_7(org.w3c.dom.Document)>(r477) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $i123 = i122 % 10
org.apache.xml.security.samples.TransformPerformanceTester.main : $i123 = i122 % 10 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if $i123 != 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if $i123 != 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i122 = i122 + 1
org.apache.xml.security.samples.TransformPerformanceTester.main : i122 = i122 + 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)]
org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i122 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : r454 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n" >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r455 = new java.io.ByteArrayInputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r455 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r456 = virtualinvoke r454.<java.lang.String: byte[] getBytes()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r456 = virtualinvoke r454.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r455.<java.io.ByteArrayInputStream: void <init>(byte[])>($r456)
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r455.<java.io.ByteArrayInputStream: void <init>(byte[])>($r456) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r457 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r455)
org.apache.xml.security.samples.TransformPerformanceTester.main : r457 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r455) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l116 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l116 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r458 = (byte[][]) null
org.apache.xml.security.samples.TransformPerformanceTester.main : r458 = (byte[][]) null >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i117 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : i117 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i117 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : if i117 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r458 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] apachesample_xfilter2_6(org.w3c.dom.Document)>(r457)
org.apache.xml.security.samples.TransformPerformanceTester.main : if i117 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l119 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l119 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $l120 = l119 - l116
org.apache.xml.security.samples.TransformPerformanceTester.main : $l120 = l119 - l116 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : d46 = (double) $l120
org.apache.xml.security.samples.TransformPerformanceTester.main : d46 = (double) $l120 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r459 = <java.lang.System: java.io.PrintStream out>
org.apache.xml.security.samples.TransformPerformanceTester.main : $r459 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r460 = new java.lang.StringBuilder
org.apache.xml.security.samples.TransformPerformanceTester.main : $r460 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r460.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r460.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r461 = virtualinvoke $r460.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r461 = virtualinvoke $r460.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r462 = virtualinvoke $r461.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * apachesample_xfilter2_6 took ")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r462 = virtualinvoke $r461.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * apachesample_xfilter2_6 took ") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r463 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r463 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $d47 = d46 / 1000.0
org.apache.xml.security.samples.TransformPerformanceTester.main : $d47 = d46 / 1000.0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r464 = virtualinvoke $r463.<java.text.NumberFormat: java.lang.String format(double)>($d47)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r464 = virtualinvoke $r463.<java.text.NumberFormat: java.lang.String format(double)>($d47) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r465 = virtualinvoke $r462.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r464)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r465 = virtualinvoke $r462.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r464) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r466 = virtualinvoke $r465.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r466 = virtualinvoke $r465.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r467 = virtualinvoke $r466.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r467 = virtualinvoke $r466.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r459.<java.io.PrintStream: void println(java.lang.String)>($r467)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r459.<java.io.PrintStream: void println(java.lang.String)>($r467) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r468 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r468 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r468.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_xfilter2_doc_6.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r468.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_xfilter2_doc_6.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r469 = $r468
org.apache.xml.security.samples.TransformPerformanceTester.main : r469 = $r468 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r470 = r458[0]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r470 = r458[0] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r469.<java.io.FileOutputStream: void write(byte[])>($r470)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r469.<java.io.FileOutputStream: void write(byte[])>($r470) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r469.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r469.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r471 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r471 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r471.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_xfilter2_ref_6.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r471.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_xfilter2_ref_6.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r472 = $r471
org.apache.xml.security.samples.TransformPerformanceTester.main : r472 = $r471 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r473 = r458[1]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r473 = r458[1] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r472.<java.io.FileOutputStream: void write(byte[])>($r473)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r472.<java.io.FileOutputStream: void write(byte[])>($r473) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r472.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r472.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z16 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : r458 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] apachesample_xfilter2_6(org.w3c.dom.Document)>(r457) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $i118 = i117 % 10
org.apache.xml.security.samples.TransformPerformanceTester.main : $i118 = i117 % 10 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if $i118 != 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if $i118 != 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i117 = i117 + 1
org.apache.xml.security.samples.TransformPerformanceTester.main : i117 = i117 + 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)]
org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i117 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : r434 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n" >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r435 = new java.io.ByteArrayInputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r435 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r436 = virtualinvoke r434.<java.lang.String: byte[] getBytes()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r436 = virtualinvoke r434.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r435.<java.io.ByteArrayInputStream: void <init>(byte[])>($r436)
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r435.<java.io.ByteArrayInputStream: void <init>(byte[])>($r436) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r437 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r435)
org.apache.xml.security.samples.TransformPerformanceTester.main : r437 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r435) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l111 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l111 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r438 = (byte[][]) null
org.apache.xml.security.samples.TransformPerformanceTester.main : r438 = (byte[][]) null >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i112 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : i112 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i112 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : if i112 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r438 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] apachesample_xfilter2_5(org.w3c.dom.Document)>(r437)
org.apache.xml.security.samples.TransformPerformanceTester.main : if i112 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l114 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l114 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $l115 = l114 - l111
org.apache.xml.security.samples.TransformPerformanceTester.main : $l115 = l114 - l111 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : d44 = (double) $l115
org.apache.xml.security.samples.TransformPerformanceTester.main : d44 = (double) $l115 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r439 = <java.lang.System: java.io.PrintStream out>
org.apache.xml.security.samples.TransformPerformanceTester.main : $r439 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r440 = new java.lang.StringBuilder
org.apache.xml.security.samples.TransformPerformanceTester.main : $r440 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r440.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r440.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r441 = virtualinvoke $r440.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r441 = virtualinvoke $r440.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r442 = virtualinvoke $r441.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * apachesample_xfilter2_5 took ")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r442 = virtualinvoke $r441.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * apachesample_xfilter2_5 took ") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r443 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r443 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $d45 = d44 / 1000.0
org.apache.xml.security.samples.TransformPerformanceTester.main : $d45 = d44 / 1000.0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r444 = virtualinvoke $r443.<java.text.NumberFormat: java.lang.String format(double)>($d45)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r444 = virtualinvoke $r443.<java.text.NumberFormat: java.lang.String format(double)>($d45) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r445 = virtualinvoke $r442.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r444)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r445 = virtualinvoke $r442.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r444) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r446 = virtualinvoke $r445.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r446 = virtualinvoke $r445.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r447 = virtualinvoke $r446.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r447 = virtualinvoke $r446.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r439.<java.io.PrintStream: void println(java.lang.String)>($r447)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r439.<java.io.PrintStream: void println(java.lang.String)>($r447) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r448 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r448 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r448.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_xfilter2_doc_5.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r448.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_xfilter2_doc_5.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r449 = $r448
org.apache.xml.security.samples.TransformPerformanceTester.main : r449 = $r448 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r450 = r438[0]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r450 = r438[0] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r449.<java.io.FileOutputStream: void write(byte[])>($r450)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r449.<java.io.FileOutputStream: void write(byte[])>($r450) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r449.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r449.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r451 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r451 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r451.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_xfilter2_ref_5.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r451.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_xfilter2_ref_5.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r452 = $r451
org.apache.xml.security.samples.TransformPerformanceTester.main : r452 = $r451 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r453 = r438[1]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r453 = r438[1] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r452.<java.io.FileOutputStream: void write(byte[])>($r453)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r452.<java.io.FileOutputStream: void write(byte[])>($r453) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r452.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r452.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z15 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : r438 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] apachesample_xfilter2_5(org.w3c.dom.Document)>(r437) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $i113 = i112 % 10
org.apache.xml.security.samples.TransformPerformanceTester.main : $i113 = i112 % 10 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if $i113 != 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if $i113 != 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i112 = i112 + 1
org.apache.xml.security.samples.TransformPerformanceTester.main : i112 = i112 + 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)]
org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i112 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : r414 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n" >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r415 = new java.io.ByteArrayInputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r415 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r416 = virtualinvoke r414.<java.lang.String: byte[] getBytes()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r416 = virtualinvoke r414.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r415.<java.io.ByteArrayInputStream: void <init>(byte[])>($r416)
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r415.<java.io.ByteArrayInputStream: void <init>(byte[])>($r416) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r417 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r415)
org.apache.xml.security.samples.TransformPerformanceTester.main : r417 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r415) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l106 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l106 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r418 = (byte[][]) null
org.apache.xml.security.samples.TransformPerformanceTester.main : r418 = (byte[][]) null >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i107 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : i107 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i107 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : if i107 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r418 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] apachesample_xfilter2_4(org.w3c.dom.Document)>(r417)
org.apache.xml.security.samples.TransformPerformanceTester.main : if i107 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l109 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l109 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $l110 = l109 - l106
org.apache.xml.security.samples.TransformPerformanceTester.main : $l110 = l109 - l106 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : d42 = (double) $l110
org.apache.xml.security.samples.TransformPerformanceTester.main : d42 = (double) $l110 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r419 = <java.lang.System: java.io.PrintStream out>
org.apache.xml.security.samples.TransformPerformanceTester.main : $r419 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r420 = new java.lang.StringBuilder
org.apache.xml.security.samples.TransformPerformanceTester.main : $r420 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r420.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r420.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r421 = virtualinvoke $r420.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r421 = virtualinvoke $r420.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r422 = virtualinvoke $r421.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * apachesample_xfilter2_4 took ")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r422 = virtualinvoke $r421.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * apachesample_xfilter2_4 took ") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r423 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r423 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $d43 = d42 / 1000.0
org.apache.xml.security.samples.TransformPerformanceTester.main : $d43 = d42 / 1000.0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r424 = virtualinvoke $r423.<java.text.NumberFormat: java.lang.String format(double)>($d43)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r424 = virtualinvoke $r423.<java.text.NumberFormat: java.lang.String format(double)>($d43) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r425 = virtualinvoke $r422.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r424)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r425 = virtualinvoke $r422.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r424) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r426 = virtualinvoke $r425.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r426 = virtualinvoke $r425.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r427 = virtualinvoke $r426.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r427 = virtualinvoke $r426.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r419.<java.io.PrintStream: void println(java.lang.String)>($r427)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r419.<java.io.PrintStream: void println(java.lang.String)>($r427) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r428 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r428 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r428.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_xfilter2_doc_4.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r428.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_xfilter2_doc_4.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r429 = $r428
org.apache.xml.security.samples.TransformPerformanceTester.main : r429 = $r428 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r430 = r418[0]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r430 = r418[0] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r429.<java.io.FileOutputStream: void write(byte[])>($r430)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r429.<java.io.FileOutputStream: void write(byte[])>($r430) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r429.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r429.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r431 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r431 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r431.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_xfilter2_ref_4.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r431.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_xfilter2_ref_4.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r432 = $r431
org.apache.xml.security.samples.TransformPerformanceTester.main : r432 = $r431 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r433 = r418[1]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r433 = r418[1] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r432.<java.io.FileOutputStream: void write(byte[])>($r433)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r432.<java.io.FileOutputStream: void write(byte[])>($r433) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r432.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r432.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z14 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : r418 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] apachesample_xfilter2_4(org.w3c.dom.Document)>(r417) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $i108 = i107 % 10
org.apache.xml.security.samples.TransformPerformanceTester.main : $i108 = i107 % 10 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if $i108 != 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if $i108 != 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i107 = i107 + 1
org.apache.xml.security.samples.TransformPerformanceTester.main : i107 = i107 + 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)]
org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i107 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : r394 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n" >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r395 = new java.io.ByteArrayInputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r395 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r396 = virtualinvoke r394.<java.lang.String: byte[] getBytes()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r396 = virtualinvoke r394.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r395.<java.io.ByteArrayInputStream: void <init>(byte[])>($r396)
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r395.<java.io.ByteArrayInputStream: void <init>(byte[])>($r396) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r397 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r395)
org.apache.xml.security.samples.TransformPerformanceTester.main : r397 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r395) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l101 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l101 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r398 = (byte[][]) null
org.apache.xml.security.samples.TransformPerformanceTester.main : r398 = (byte[][]) null >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i102 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : i102 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i102 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : if i102 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r398 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] apachesample_xfilter2_3(org.w3c.dom.Document)>(r397)
org.apache.xml.security.samples.TransformPerformanceTester.main : if i102 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l104 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l104 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $l105 = l104 - l101
org.apache.xml.security.samples.TransformPerformanceTester.main : $l105 = l104 - l101 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : d40 = (double) $l105
org.apache.xml.security.samples.TransformPerformanceTester.main : d40 = (double) $l105 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r399 = <java.lang.System: java.io.PrintStream out>
org.apache.xml.security.samples.TransformPerformanceTester.main : $r399 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r400 = new java.lang.StringBuilder
org.apache.xml.security.samples.TransformPerformanceTester.main : $r400 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r400.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r400.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r401 = virtualinvoke $r400.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r401 = virtualinvoke $r400.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r402 = virtualinvoke $r401.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * apachesample_xfilter2_3 took ")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r402 = virtualinvoke $r401.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * apachesample_xfilter2_3 took ") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r403 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r403 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $d41 = d40 / 1000.0
org.apache.xml.security.samples.TransformPerformanceTester.main : $d41 = d40 / 1000.0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r404 = virtualinvoke $r403.<java.text.NumberFormat: java.lang.String format(double)>($d41)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r404 = virtualinvoke $r403.<java.text.NumberFormat: java.lang.String format(double)>($d41) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r405 = virtualinvoke $r402.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r404)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r405 = virtualinvoke $r402.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r404) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r406 = virtualinvoke $r405.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r406 = virtualinvoke $r405.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r407 = virtualinvoke $r406.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r407 = virtualinvoke $r406.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r399.<java.io.PrintStream: void println(java.lang.String)>($r407)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r399.<java.io.PrintStream: void println(java.lang.String)>($r407) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r408 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r408 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r408.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_xfilter2_doc_3.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r408.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_xfilter2_doc_3.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r409 = $r408
org.apache.xml.security.samples.TransformPerformanceTester.main : r409 = $r408 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r410 = r398[0]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r410 = r398[0] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r409.<java.io.FileOutputStream: void write(byte[])>($r410)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r409.<java.io.FileOutputStream: void write(byte[])>($r410) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r409.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r409.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r411 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r411 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r411.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_xfilter2_ref_3.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r411.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_xfilter2_ref_3.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r412 = $r411
org.apache.xml.security.samples.TransformPerformanceTester.main : r412 = $r411 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r413 = r398[1]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r413 = r398[1] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r412.<java.io.FileOutputStream: void write(byte[])>($r413)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r412.<java.io.FileOutputStream: void write(byte[])>($r413) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r412.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r412.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z13 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : r398 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] apachesample_xfilter2_3(org.w3c.dom.Document)>(r397) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $i103 = i102 % 10
org.apache.xml.security.samples.TransformPerformanceTester.main : $i103 = i102 % 10 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if $i103 != 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if $i103 != 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i102 = i102 + 1
org.apache.xml.security.samples.TransformPerformanceTester.main : i102 = i102 + 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)]
org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i102 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : r374 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n" >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r375 = new java.io.ByteArrayInputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r375 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r376 = virtualinvoke r374.<java.lang.String: byte[] getBytes()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r376 = virtualinvoke r374.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r375.<java.io.ByteArrayInputStream: void <init>(byte[])>($r376)
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r375.<java.io.ByteArrayInputStream: void <init>(byte[])>($r376) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r377 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r375)
org.apache.xml.security.samples.TransformPerformanceTester.main : r377 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r375) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l96 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l96 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r378 = (byte[][]) null
org.apache.xml.security.samples.TransformPerformanceTester.main : r378 = (byte[][]) null >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i97 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : i97 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i97 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : if i97 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r378 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] apachesample_xfilter2_2(org.w3c.dom.Document)>(r377)
org.apache.xml.security.samples.TransformPerformanceTester.main : if i97 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l99 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l99 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $l100 = l99 - l96
org.apache.xml.security.samples.TransformPerformanceTester.main : $l100 = l99 - l96 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : d38 = (double) $l100
org.apache.xml.security.samples.TransformPerformanceTester.main : d38 = (double) $l100 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r379 = <java.lang.System: java.io.PrintStream out>
org.apache.xml.security.samples.TransformPerformanceTester.main : $r379 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r380 = new java.lang.StringBuilder
org.apache.xml.security.samples.TransformPerformanceTester.main : $r380 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r380.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r380.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r381 = virtualinvoke $r380.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r381 = virtualinvoke $r380.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r382 = virtualinvoke $r381.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * apachesample_xfilter2_2 took ")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r382 = virtualinvoke $r381.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * apachesample_xfilter2_2 took ") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r383 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r383 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $d39 = d38 / 1000.0
org.apache.xml.security.samples.TransformPerformanceTester.main : $d39 = d38 / 1000.0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r384 = virtualinvoke $r383.<java.text.NumberFormat: java.lang.String format(double)>($d39)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r384 = virtualinvoke $r383.<java.text.NumberFormat: java.lang.String format(double)>($d39) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r385 = virtualinvoke $r382.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r384)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r385 = virtualinvoke $r382.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r384) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r386 = virtualinvoke $r385.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r386 = virtualinvoke $r385.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r387 = virtualinvoke $r386.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r387 = virtualinvoke $r386.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r379.<java.io.PrintStream: void println(java.lang.String)>($r387)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r379.<java.io.PrintStream: void println(java.lang.String)>($r387) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r388 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r388 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r388.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_xfilter2_doc_2.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r388.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_xfilter2_doc_2.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r389 = $r388
org.apache.xml.security.samples.TransformPerformanceTester.main : r389 = $r388 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r390 = r378[0]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r390 = r378[0] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r389.<java.io.FileOutputStream: void write(byte[])>($r390)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r389.<java.io.FileOutputStream: void write(byte[])>($r390) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r389.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r389.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r391 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r391 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r391.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_xfilter2_ref_2.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r391.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_xfilter2_ref_2.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r392 = $r391
org.apache.xml.security.samples.TransformPerformanceTester.main : r392 = $r391 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r393 = r378[1]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r393 = r378[1] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r392.<java.io.FileOutputStream: void write(byte[])>($r393)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r392.<java.io.FileOutputStream: void write(byte[])>($r393) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r392.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r392.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z12 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : r378 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] apachesample_xfilter2_2(org.w3c.dom.Document)>(r377) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $i98 = i97 % 10
org.apache.xml.security.samples.TransformPerformanceTester.main : $i98 = i97 % 10 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if $i98 != 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if $i98 != 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i97 = i97 + 1
org.apache.xml.security.samples.TransformPerformanceTester.main : i97 = i97 + 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)]
org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i97 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : r354 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n" >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r355 = new java.io.ByteArrayInputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r355 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r356 = virtualinvoke r354.<java.lang.String: byte[] getBytes()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r356 = virtualinvoke r354.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r355.<java.io.ByteArrayInputStream: void <init>(byte[])>($r356)
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r355.<java.io.ByteArrayInputStream: void <init>(byte[])>($r356) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r357 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r355)
org.apache.xml.security.samples.TransformPerformanceTester.main : r357 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r355) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l91 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l91 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r358 = (byte[][]) null
org.apache.xml.security.samples.TransformPerformanceTester.main : r358 = (byte[][]) null >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i92 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : i92 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i92 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : if i92 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r358 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] apachesample_xfilter2_1(org.w3c.dom.Document)>(r357)
org.apache.xml.security.samples.TransformPerformanceTester.main : if i92 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l94 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l94 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $l95 = l94 - l91
org.apache.xml.security.samples.TransformPerformanceTester.main : $l95 = l94 - l91 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : d36 = (double) $l95
org.apache.xml.security.samples.TransformPerformanceTester.main : d36 = (double) $l95 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r359 = <java.lang.System: java.io.PrintStream out>
org.apache.xml.security.samples.TransformPerformanceTester.main : $r359 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r360 = new java.lang.StringBuilder
org.apache.xml.security.samples.TransformPerformanceTester.main : $r360 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r360.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r360.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r361 = virtualinvoke $r360.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r361 = virtualinvoke $r360.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r362 = virtualinvoke $r361.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * apachesample_xfilter2_1 took ")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r362 = virtualinvoke $r361.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * apachesample_xfilter2_1 took ") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r363 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r363 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $d37 = d36 / 1000.0
org.apache.xml.security.samples.TransformPerformanceTester.main : $d37 = d36 / 1000.0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r364 = virtualinvoke $r363.<java.text.NumberFormat: java.lang.String format(double)>($d37)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r364 = virtualinvoke $r363.<java.text.NumberFormat: java.lang.String format(double)>($d37) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r365 = virtualinvoke $r362.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r364)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r365 = virtualinvoke $r362.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r364) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r366 = virtualinvoke $r365.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r366 = virtualinvoke $r365.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r367 = virtualinvoke $r366.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r367 = virtualinvoke $r366.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r359.<java.io.PrintStream: void println(java.lang.String)>($r367)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r359.<java.io.PrintStream: void println(java.lang.String)>($r367) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r368 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r368 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r368.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_xfilter2_doc_1.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r368.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_xfilter2_doc_1.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r369 = $r368
org.apache.xml.security.samples.TransformPerformanceTester.main : r369 = $r368 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r370 = r358[0]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r370 = r358[0] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r369.<java.io.FileOutputStream: void write(byte[])>($r370)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r369.<java.io.FileOutputStream: void write(byte[])>($r370) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r369.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r369.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r371 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r371 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r371.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_xfilter2_ref_1.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r371.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_xfilter2_ref_1.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r372 = $r371
org.apache.xml.security.samples.TransformPerformanceTester.main : r372 = $r371 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r373 = r358[1]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r373 = r358[1] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r372.<java.io.FileOutputStream: void write(byte[])>($r373)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r372.<java.io.FileOutputStream: void write(byte[])>($r373) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r372.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r372.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z11 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : r358 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] apachesample_xfilter2_1(org.w3c.dom.Document)>(r357) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $i93 = i92 % 10
org.apache.xml.security.samples.TransformPerformanceTester.main : $i93 = i92 % 10 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if $i93 != 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if $i93 != 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i92 = i92 + 1
org.apache.xml.security.samples.TransformPerformanceTester.main : i92 = i92 + 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)]
org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i92 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : r334 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n" >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r335 = new java.io.ByteArrayInputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r335 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r336 = virtualinvoke r334.<java.lang.String: byte[] getBytes()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r336 = virtualinvoke r334.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r335.<java.io.ByteArrayInputStream: void <init>(byte[])>($r336)
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r335.<java.io.ByteArrayInputStream: void <init>(byte[])>($r336) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r337 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r335)
org.apache.xml.security.samples.TransformPerformanceTester.main : r337 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r335) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l86 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l86 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r338 = (byte[][]) null
org.apache.xml.security.samples.TransformPerformanceTester.main : r338 = (byte[][]) null >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i87 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : i87 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i87 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : if i87 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r338 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] apachesample_apachefilter_7(org.w3c.dom.Document)>(r337)
org.apache.xml.security.samples.TransformPerformanceTester.main : if i87 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l89 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l89 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $l90 = l89 - l86
org.apache.xml.security.samples.TransformPerformanceTester.main : $l90 = l89 - l86 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : d34 = (double) $l90
org.apache.xml.security.samples.TransformPerformanceTester.main : d34 = (double) $l90 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r339 = <java.lang.System: java.io.PrintStream out>
org.apache.xml.security.samples.TransformPerformanceTester.main : $r339 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r340 = new java.lang.StringBuilder
org.apache.xml.security.samples.TransformPerformanceTester.main : $r340 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r340.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r340.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r341 = virtualinvoke $r340.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r341 = virtualinvoke $r340.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r342 = virtualinvoke $r341.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * apachesample_apachefilter_7 took ")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r342 = virtualinvoke $r341.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * apachesample_apachefilter_7 took ") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r343 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r343 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $d35 = d34 / 1000.0
org.apache.xml.security.samples.TransformPerformanceTester.main : $d35 = d34 / 1000.0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r344 = virtualinvoke $r343.<java.text.NumberFormat: java.lang.String format(double)>($d35)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r344 = virtualinvoke $r343.<java.text.NumberFormat: java.lang.String format(double)>($d35) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r345 = virtualinvoke $r342.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r344)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r345 = virtualinvoke $r342.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r344) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r346 = virtualinvoke $r345.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r346 = virtualinvoke $r345.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r347 = virtualinvoke $r346.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r347 = virtualinvoke $r346.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r339.<java.io.PrintStream: void println(java.lang.String)>($r347)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r339.<java.io.PrintStream: void println(java.lang.String)>($r347) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r348 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r348 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r348.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_doc_7.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r348.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_doc_7.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r349 = $r348
org.apache.xml.security.samples.TransformPerformanceTester.main : r349 = $r348 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r350 = r338[0]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r350 = r338[0] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r349.<java.io.FileOutputStream: void write(byte[])>($r350)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r349.<java.io.FileOutputStream: void write(byte[])>($r350) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r349.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r349.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r351 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r351 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r351.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_ref_7.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r351.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_ref_7.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r352 = $r351
org.apache.xml.security.samples.TransformPerformanceTester.main : r352 = $r351 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r353 = r338[1]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r353 = r338[1] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r352.<java.io.FileOutputStream: void write(byte[])>($r353)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r352.<java.io.FileOutputStream: void write(byte[])>($r353) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r352.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r352.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z10 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : r338 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] apachesample_apachefilter_7(org.w3c.dom.Document)>(r337) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $i88 = i87 % 10
org.apache.xml.security.samples.TransformPerformanceTester.main : $i88 = i87 % 10 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if $i88 != 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if $i88 != 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i87 = i87 + 1
org.apache.xml.security.samples.TransformPerformanceTester.main : i87 = i87 + 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)]
org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i87 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : r314 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n" >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r315 = new java.io.ByteArrayInputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r315 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r316 = virtualinvoke r314.<java.lang.String: byte[] getBytes()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r316 = virtualinvoke r314.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r315.<java.io.ByteArrayInputStream: void <init>(byte[])>($r316)
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r315.<java.io.ByteArrayInputStream: void <init>(byte[])>($r316) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r317 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r315)
org.apache.xml.security.samples.TransformPerformanceTester.main : r317 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r315) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l81 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l81 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r318 = (byte[][]) null
org.apache.xml.security.samples.TransformPerformanceTester.main : r318 = (byte[][]) null >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i82 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : i82 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i82 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : if i82 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r318 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] apachesample_apachefilter_6(org.w3c.dom.Document)>(r317)
org.apache.xml.security.samples.TransformPerformanceTester.main : if i82 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l84 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l84 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $l85 = l84 - l81
org.apache.xml.security.samples.TransformPerformanceTester.main : $l85 = l84 - l81 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : d32 = (double) $l85
org.apache.xml.security.samples.TransformPerformanceTester.main : d32 = (double) $l85 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r319 = <java.lang.System: java.io.PrintStream out>
org.apache.xml.security.samples.TransformPerformanceTester.main : $r319 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r320 = new java.lang.StringBuilder
org.apache.xml.security.samples.TransformPerformanceTester.main : $r320 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r320.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r320.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r321 = virtualinvoke $r320.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r321 = virtualinvoke $r320.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r322 = virtualinvoke $r321.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * apachesample_apachefilter_6 took ")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r322 = virtualinvoke $r321.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * apachesample_apachefilter_6 took ") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r323 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r323 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $d33 = d32 / 1000.0
org.apache.xml.security.samples.TransformPerformanceTester.main : $d33 = d32 / 1000.0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r324 = virtualinvoke $r323.<java.text.NumberFormat: java.lang.String format(double)>($d33)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r324 = virtualinvoke $r323.<java.text.NumberFormat: java.lang.String format(double)>($d33) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r325 = virtualinvoke $r322.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r324)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r325 = virtualinvoke $r322.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r324) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r326 = virtualinvoke $r325.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r326 = virtualinvoke $r325.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r327 = virtualinvoke $r326.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r327 = virtualinvoke $r326.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r319.<java.io.PrintStream: void println(java.lang.String)>($r327)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r319.<java.io.PrintStream: void println(java.lang.String)>($r327) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r328 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r328 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r328.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_doc_6.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r328.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_doc_6.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r329 = $r328
org.apache.xml.security.samples.TransformPerformanceTester.main : r329 = $r328 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r330 = r318[0]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r330 = r318[0] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r329.<java.io.FileOutputStream: void write(byte[])>($r330)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r329.<java.io.FileOutputStream: void write(byte[])>($r330) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r329.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r329.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r331 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r331 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r331.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_ref_6.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r331.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_ref_6.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r332 = $r331
org.apache.xml.security.samples.TransformPerformanceTester.main : r332 = $r331 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r333 = r318[1]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r333 = r318[1] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r332.<java.io.FileOutputStream: void write(byte[])>($r333)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r332.<java.io.FileOutputStream: void write(byte[])>($r333) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r332.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r332.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z23 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : r318 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] apachesample_apachefilter_6(org.w3c.dom.Document)>(r317) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $i83 = i82 % 10
org.apache.xml.security.samples.TransformPerformanceTester.main : $i83 = i82 % 10 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if $i83 != 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if $i83 != 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i82 = i82 + 1
org.apache.xml.security.samples.TransformPerformanceTester.main : i82 = i82 + 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)]
org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i82 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : r294 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n" >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r295 = new java.io.ByteArrayInputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r295 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r296 = virtualinvoke r294.<java.lang.String: byte[] getBytes()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r296 = virtualinvoke r294.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r295.<java.io.ByteArrayInputStream: void <init>(byte[])>($r296)
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r295.<java.io.ByteArrayInputStream: void <init>(byte[])>($r296) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r297 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r295)
org.apache.xml.security.samples.TransformPerformanceTester.main : r297 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r295) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l76 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l76 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r298 = (byte[][]) null
org.apache.xml.security.samples.TransformPerformanceTester.main : r298 = (byte[][]) null >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i77 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : i77 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i77 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : if i77 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r298 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] apachesample_apachefilter_5(org.w3c.dom.Document)>(r297)
org.apache.xml.security.samples.TransformPerformanceTester.main : if i77 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l79 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l79 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $l80 = l79 - l76
org.apache.xml.security.samples.TransformPerformanceTester.main : $l80 = l79 - l76 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : d30 = (double) $l80
org.apache.xml.security.samples.TransformPerformanceTester.main : d30 = (double) $l80 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r299 = <java.lang.System: java.io.PrintStream out>
org.apache.xml.security.samples.TransformPerformanceTester.main : $r299 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r300 = new java.lang.StringBuilder
org.apache.xml.security.samples.TransformPerformanceTester.main : $r300 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r300.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r300.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r301 = virtualinvoke $r300.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r301 = virtualinvoke $r300.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r302 = virtualinvoke $r301.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * apachesample_apachefilter_5 took ")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r302 = virtualinvoke $r301.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * apachesample_apachefilter_5 took ") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r303 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r303 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $d31 = d30 / 1000.0
org.apache.xml.security.samples.TransformPerformanceTester.main : $d31 = d30 / 1000.0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r304 = virtualinvoke $r303.<java.text.NumberFormat: java.lang.String format(double)>($d31)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r304 = virtualinvoke $r303.<java.text.NumberFormat: java.lang.String format(double)>($d31) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r305 = virtualinvoke $r302.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r304)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r305 = virtualinvoke $r302.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r304) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r306 = virtualinvoke $r305.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r306 = virtualinvoke $r305.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r307 = virtualinvoke $r306.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r307 = virtualinvoke $r306.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r299.<java.io.PrintStream: void println(java.lang.String)>($r307)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r299.<java.io.PrintStream: void println(java.lang.String)>($r307) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r308 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r308 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r308.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_doc_5.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r308.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_doc_5.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r309 = $r308
org.apache.xml.security.samples.TransformPerformanceTester.main : r309 = $r308 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r310 = r298[0]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r310 = r298[0] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r309.<java.io.FileOutputStream: void write(byte[])>($r310)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r309.<java.io.FileOutputStream: void write(byte[])>($r310) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r309.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r309.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r311 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r311 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r311.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_ref_5.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r311.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_ref_5.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r312 = $r311
org.apache.xml.security.samples.TransformPerformanceTester.main : r312 = $r311 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r313 = r298[1]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r313 = r298[1] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r312.<java.io.FileOutputStream: void write(byte[])>($r313)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r312.<java.io.FileOutputStream: void write(byte[])>($r313) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r312.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r312.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z22 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : r298 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] apachesample_apachefilter_5(org.w3c.dom.Document)>(r297) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $i78 = i77 % 10
org.apache.xml.security.samples.TransformPerformanceTester.main : $i78 = i77 % 10 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if $i78 != 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if $i78 != 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i77 = i77 + 1
org.apache.xml.security.samples.TransformPerformanceTester.main : i77 = i77 + 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)]
org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i77 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : r274 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n" >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r275 = new java.io.ByteArrayInputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r275 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r276 = virtualinvoke r274.<java.lang.String: byte[] getBytes()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r276 = virtualinvoke r274.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r275.<java.io.ByteArrayInputStream: void <init>(byte[])>($r276)
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r275.<java.io.ByteArrayInputStream: void <init>(byte[])>($r276) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r277 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r275)
org.apache.xml.security.samples.TransformPerformanceTester.main : r277 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r275) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l71 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l71 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r278 = (byte[][]) null
org.apache.xml.security.samples.TransformPerformanceTester.main : r278 = (byte[][]) null >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i72 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : i72 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i72 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : if i72 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r278 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] apachesample_apachefilter_4(org.w3c.dom.Document)>(r277)
org.apache.xml.security.samples.TransformPerformanceTester.main : if i72 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l74 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l74 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $l75 = l74 - l71
org.apache.xml.security.samples.TransformPerformanceTester.main : $l75 = l74 - l71 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : d28 = (double) $l75
org.apache.xml.security.samples.TransformPerformanceTester.main : d28 = (double) $l75 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r279 = <java.lang.System: java.io.PrintStream out>
org.apache.xml.security.samples.TransformPerformanceTester.main : $r279 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r280 = new java.lang.StringBuilder
org.apache.xml.security.samples.TransformPerformanceTester.main : $r280 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r280.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r280.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r281 = virtualinvoke $r280.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r281 = virtualinvoke $r280.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r282 = virtualinvoke $r281.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * apachesample_apachefilter_4 took ")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r282 = virtualinvoke $r281.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * apachesample_apachefilter_4 took ") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r283 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r283 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $d29 = d28 / 1000.0
org.apache.xml.security.samples.TransformPerformanceTester.main : $d29 = d28 / 1000.0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r284 = virtualinvoke $r283.<java.text.NumberFormat: java.lang.String format(double)>($d29)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r284 = virtualinvoke $r283.<java.text.NumberFormat: java.lang.String format(double)>($d29) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r285 = virtualinvoke $r282.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r284)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r285 = virtualinvoke $r282.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r284) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r286 = virtualinvoke $r285.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r286 = virtualinvoke $r285.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r287 = virtualinvoke $r286.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r287 = virtualinvoke $r286.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r279.<java.io.PrintStream: void println(java.lang.String)>($r287)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r279.<java.io.PrintStream: void println(java.lang.String)>($r287) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r288 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r288 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r288.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_doc_4.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r288.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_doc_4.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r289 = $r288
org.apache.xml.security.samples.TransformPerformanceTester.main : r289 = $r288 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r290 = r278[0]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r290 = r278[0] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r289.<java.io.FileOutputStream: void write(byte[])>($r290)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r289.<java.io.FileOutputStream: void write(byte[])>($r290) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r289.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r289.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r291 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r291 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r291.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_ref_4.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r291.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_ref_4.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r292 = $r291
org.apache.xml.security.samples.TransformPerformanceTester.main : r292 = $r291 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r293 = r278[1]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r293 = r278[1] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r292.<java.io.FileOutputStream: void write(byte[])>($r293)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r292.<java.io.FileOutputStream: void write(byte[])>($r293) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r292.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r292.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z21 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : r278 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] apachesample_apachefilter_4(org.w3c.dom.Document)>(r277) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $i73 = i72 % 10
org.apache.xml.security.samples.TransformPerformanceTester.main : $i73 = i72 % 10 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if $i73 != 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if $i73 != 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i72 = i72 + 1
org.apache.xml.security.samples.TransformPerformanceTester.main : i72 = i72 + 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)]
org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i72 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : r254 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n" >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r255 = new java.io.ByteArrayInputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r255 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r256 = virtualinvoke r254.<java.lang.String: byte[] getBytes()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r256 = virtualinvoke r254.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r255.<java.io.ByteArrayInputStream: void <init>(byte[])>($r256)
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r255.<java.io.ByteArrayInputStream: void <init>(byte[])>($r256) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r257 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r255)
org.apache.xml.security.samples.TransformPerformanceTester.main : r257 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r255) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l66 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l66 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r258 = (byte[][]) null
org.apache.xml.security.samples.TransformPerformanceTester.main : r258 = (byte[][]) null >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i67 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : i67 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i67 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : if i67 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r258 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] apachesample_apachefilter_3(org.w3c.dom.Document)>(r257)
org.apache.xml.security.samples.TransformPerformanceTester.main : if i67 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l69 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l69 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $l70 = l69 - l66
org.apache.xml.security.samples.TransformPerformanceTester.main : $l70 = l69 - l66 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : d26 = (double) $l70
org.apache.xml.security.samples.TransformPerformanceTester.main : d26 = (double) $l70 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r259 = <java.lang.System: java.io.PrintStream out>
org.apache.xml.security.samples.TransformPerformanceTester.main : $r259 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r260 = new java.lang.StringBuilder
org.apache.xml.security.samples.TransformPerformanceTester.main : $r260 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r260.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r260.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r261 = virtualinvoke $r260.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r261 = virtualinvoke $r260.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r262 = virtualinvoke $r261.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * apachesample_apachefilter_3 took ")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r262 = virtualinvoke $r261.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * apachesample_apachefilter_3 took ") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r263 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r263 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $d27 = d26 / 1000.0
org.apache.xml.security.samples.TransformPerformanceTester.main : $d27 = d26 / 1000.0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r264 = virtualinvoke $r263.<java.text.NumberFormat: java.lang.String format(double)>($d27)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r264 = virtualinvoke $r263.<java.text.NumberFormat: java.lang.String format(double)>($d27) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r265 = virtualinvoke $r262.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r264)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r265 = virtualinvoke $r262.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r264) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r266 = virtualinvoke $r265.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r266 = virtualinvoke $r265.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r267 = virtualinvoke $r266.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r267 = virtualinvoke $r266.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r259.<java.io.PrintStream: void println(java.lang.String)>($r267)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r259.<java.io.PrintStream: void println(java.lang.String)>($r267) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r268 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r268 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r268.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_doc_3.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r268.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_doc_3.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r269 = $r268
org.apache.xml.security.samples.TransformPerformanceTester.main : r269 = $r268 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r270 = r258[0]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r270 = r258[0] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r269.<java.io.FileOutputStream: void write(byte[])>($r270)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r269.<java.io.FileOutputStream: void write(byte[])>($r270) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r269.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r269.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r271 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r271 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r271.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_ref_3.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r271.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_ref_3.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r272 = $r271
org.apache.xml.security.samples.TransformPerformanceTester.main : r272 = $r271 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r273 = r258[1]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r273 = r258[1] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r272.<java.io.FileOutputStream: void write(byte[])>($r273)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r272.<java.io.FileOutputStream: void write(byte[])>($r273) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r272.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r272.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z20 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : r258 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] apachesample_apachefilter_3(org.w3c.dom.Document)>(r257) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $i68 = i67 % 10
org.apache.xml.security.samples.TransformPerformanceTester.main : $i68 = i67 % 10 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if $i68 != 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if $i68 != 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i67 = i67 + 1
org.apache.xml.security.samples.TransformPerformanceTester.main : i67 = i67 + 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)]
org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i67 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : r234 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n" >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r235 = new java.io.ByteArrayInputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r235 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r236 = virtualinvoke r234.<java.lang.String: byte[] getBytes()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r236 = virtualinvoke r234.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r235.<java.io.ByteArrayInputStream: void <init>(byte[])>($r236)
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r235.<java.io.ByteArrayInputStream: void <init>(byte[])>($r236) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r237 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r235)
org.apache.xml.security.samples.TransformPerformanceTester.main : r237 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r235) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l61 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l61 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r238 = (byte[][]) null
org.apache.xml.security.samples.TransformPerformanceTester.main : r238 = (byte[][]) null >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i62 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : i62 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i62 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : if i62 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r238 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] apachesample_apachefilter_2(org.w3c.dom.Document)>(r237)
org.apache.xml.security.samples.TransformPerformanceTester.main : if i62 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l64 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l64 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $l65 = l64 - l61
org.apache.xml.security.samples.TransformPerformanceTester.main : $l65 = l64 - l61 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : d24 = (double) $l65
org.apache.xml.security.samples.TransformPerformanceTester.main : d24 = (double) $l65 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r239 = <java.lang.System: java.io.PrintStream out>
org.apache.xml.security.samples.TransformPerformanceTester.main : $r239 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r240 = new java.lang.StringBuilder
org.apache.xml.security.samples.TransformPerformanceTester.main : $r240 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r240.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r240.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r241 = virtualinvoke $r240.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r241 = virtualinvoke $r240.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r242 = virtualinvoke $r241.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * apachesample_apachefilter_2 took ")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r242 = virtualinvoke $r241.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * apachesample_apachefilter_2 took ") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r243 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r243 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $d25 = d24 / 1000.0
org.apache.xml.security.samples.TransformPerformanceTester.main : $d25 = d24 / 1000.0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r244 = virtualinvoke $r243.<java.text.NumberFormat: java.lang.String format(double)>($d25)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r244 = virtualinvoke $r243.<java.text.NumberFormat: java.lang.String format(double)>($d25) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r245 = virtualinvoke $r242.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r244)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r245 = virtualinvoke $r242.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r244) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r246 = virtualinvoke $r245.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r246 = virtualinvoke $r245.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r247 = virtualinvoke $r246.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r247 = virtualinvoke $r246.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r239.<java.io.PrintStream: void println(java.lang.String)>($r247)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r239.<java.io.PrintStream: void println(java.lang.String)>($r247) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r248 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r248 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r248.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_doc_2.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r248.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_doc_2.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r249 = $r248
org.apache.xml.security.samples.TransformPerformanceTester.main : r249 = $r248 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r250 = r238[0]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r250 = r238[0] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r249.<java.io.FileOutputStream: void write(byte[])>($r250)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r249.<java.io.FileOutputStream: void write(byte[])>($r250) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r249.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r249.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r251 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r251 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r251.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_ref_2.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r251.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_ref_2.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r252 = $r251
org.apache.xml.security.samples.TransformPerformanceTester.main : r252 = $r251 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r253 = r238[1]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r253 = r238[1] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r252.<java.io.FileOutputStream: void write(byte[])>($r253)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r252.<java.io.FileOutputStream: void write(byte[])>($r253) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r252.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r252.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z19 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : r238 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] apachesample_apachefilter_2(org.w3c.dom.Document)>(r237) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $i63 = i62 % 10
org.apache.xml.security.samples.TransformPerformanceTester.main : $i63 = i62 % 10 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if $i63 != 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if $i63 != 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i62 = i62 + 1
org.apache.xml.security.samples.TransformPerformanceTester.main : i62 = i62 + 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)]
org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i62 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : r214 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n" >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r215 = new java.io.ByteArrayInputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r215 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r216 = virtualinvoke r214.<java.lang.String: byte[] getBytes()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r216 = virtualinvoke r214.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r215.<java.io.ByteArrayInputStream: void <init>(byte[])>($r216)
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r215.<java.io.ByteArrayInputStream: void <init>(byte[])>($r216) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r217 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r215)
org.apache.xml.security.samples.TransformPerformanceTester.main : r217 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r215) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l56 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l56 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r218 = (byte[][]) null
org.apache.xml.security.samples.TransformPerformanceTester.main : r218 = (byte[][]) null >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i57 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : i57 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i57 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : if i57 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r218 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] apachesample_apachefilter_1(org.w3c.dom.Document)>(r217)
org.apache.xml.security.samples.TransformPerformanceTester.main : if i57 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l59 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l59 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $l60 = l59 - l56
org.apache.xml.security.samples.TransformPerformanceTester.main : $l60 = l59 - l56 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : d22 = (double) $l60
org.apache.xml.security.samples.TransformPerformanceTester.main : d22 = (double) $l60 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r219 = <java.lang.System: java.io.PrintStream out>
org.apache.xml.security.samples.TransformPerformanceTester.main : $r219 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r220 = new java.lang.StringBuilder
org.apache.xml.security.samples.TransformPerformanceTester.main : $r220 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r220.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r220.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r221 = virtualinvoke $r220.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r221 = virtualinvoke $r220.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r222 = virtualinvoke $r221.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * apachesample_apachefilter_1 took ")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r222 = virtualinvoke $r221.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * apachesample_apachefilter_1 took ") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r223 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r223 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $d23 = d22 / 1000.0
org.apache.xml.security.samples.TransformPerformanceTester.main : $d23 = d22 / 1000.0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r224 = virtualinvoke $r223.<java.text.NumberFormat: java.lang.String format(double)>($d23)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r224 = virtualinvoke $r223.<java.text.NumberFormat: java.lang.String format(double)>($d23) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r225 = virtualinvoke $r222.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r224)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r225 = virtualinvoke $r222.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r224) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r226 = virtualinvoke $r225.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r226 = virtualinvoke $r225.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r227 = virtualinvoke $r226.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r227 = virtualinvoke $r226.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r219.<java.io.PrintStream: void println(java.lang.String)>($r227)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r219.<java.io.PrintStream: void println(java.lang.String)>($r227) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r228 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r228 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r228.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_doc_1.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r228.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_doc_1.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r229 = $r228
org.apache.xml.security.samples.TransformPerformanceTester.main : r229 = $r228 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r230 = r218[0]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r230 = r218[0] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r229.<java.io.FileOutputStream: void write(byte[])>($r230)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r229.<java.io.FileOutputStream: void write(byte[])>($r230) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r229.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r229.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r231 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r231 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r231.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_ref_1.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r231.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_ref_1.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r232 = $r231
org.apache.xml.security.samples.TransformPerformanceTester.main : r232 = $r231 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r233 = r218[1]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r233 = r218[1] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r232.<java.io.FileOutputStream: void write(byte[])>($r233)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r232.<java.io.FileOutputStream: void write(byte[])>($r233) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r232.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r232.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z18 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : r218 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] apachesample_apachefilter_1(org.w3c.dom.Document)>(r217) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $i58 = i57 % 10
org.apache.xml.security.samples.TransformPerformanceTester.main : $i58 = i57 % 10 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if $i58 != 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if $i58 != 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i57 = i57 + 1
org.apache.xml.security.samples.TransformPerformanceTester.main : i57 = i57 + 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)]
org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i57 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : r194 = "<A xmlns:foo=\"http://foo.bar/\">\n<U>\n<U>\n<U>\n<U>\n<U>\n<B foo:attr=\"attr\">\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<C>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n<U>\n<U>\n<U>\n<U/>\n<U>\n<U/>\n<U/>\n</U>\n<U/>\n</U>\n<U>\n<U/>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</C>\n</B>\n<D>\n<U/>\n</D>\n<U>\n<E>\n<S>\n<S>\n<S/>\n<S>\n<S/>\n<S/>\n</S>\n<S/>\n</S>\n<S>\n<S/>\n</S>\n</S>\n</E>\n<U>\n<F>\n<G>\n<H/>\n<G>\n<H/>\n</G>\n</G>\n</F>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</U>\n</A>\n" >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r195 = new java.io.ByteArrayInputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r195 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r196 = virtualinvoke r194.<java.lang.String: byte[] getBytes()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r196 = virtualinvoke r194.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r195.<java.io.ByteArrayInputStream: void <init>(byte[])>($r196)
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r195.<java.io.ByteArrayInputStream: void <init>(byte[])>($r196) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r197 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r195)
org.apache.xml.security.samples.TransformPerformanceTester.main : r197 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r195) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l51 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l51 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r198 = (byte[][]) null
org.apache.xml.security.samples.TransformPerformanceTester.main : r198 = (byte[][]) null >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i52 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : i52 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i52 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : if i52 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r198 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] apachesample_apachefilter_7_optimal(org.w3c.dom.Document)>(r197)
org.apache.xml.security.samples.TransformPerformanceTester.main : if i52 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l54 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l54 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $l55 = l54 - l51
org.apache.xml.security.samples.TransformPerformanceTester.main : $l55 = l54 - l51 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : d20 = (double) $l55
org.apache.xml.security.samples.TransformPerformanceTester.main : d20 = (double) $l55 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r199 = <java.lang.System: java.io.PrintStream out>
org.apache.xml.security.samples.TransformPerformanceTester.main : $r199 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r200 = new java.lang.StringBuilder
org.apache.xml.security.samples.TransformPerformanceTester.main : $r200 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r200.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r200.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r201 = virtualinvoke $r200.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r201 = virtualinvoke $r200.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r202 = virtualinvoke $r201.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * apachesample_apachefilter_7_optimal took ")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r202 = virtualinvoke $r201.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * apachesample_apachefilter_7_optimal took ") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r203 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r203 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $d21 = d20 / 1000.0
org.apache.xml.security.samples.TransformPerformanceTester.main : $d21 = d20 / 1000.0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r204 = virtualinvoke $r203.<java.text.NumberFormat: java.lang.String format(double)>($d21)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r204 = virtualinvoke $r203.<java.text.NumberFormat: java.lang.String format(double)>($d21) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r205 = virtualinvoke $r202.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r204)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r205 = virtualinvoke $r202.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r204) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r206 = virtualinvoke $r205.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r206 = virtualinvoke $r205.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r207 = virtualinvoke $r206.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r207 = virtualinvoke $r206.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r199.<java.io.PrintStream: void println(java.lang.String)>($r207)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r199.<java.io.PrintStream: void println(java.lang.String)>($r207) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r208 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r208 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r208.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_doc_7_optimal.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r208.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_doc_7_optimal.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r209 = $r208
org.apache.xml.security.samples.TransformPerformanceTester.main : r209 = $r208 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r210 = r198[0]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r210 = r198[0] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r209.<java.io.FileOutputStream: void write(byte[])>($r210)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r209.<java.io.FileOutputStream: void write(byte[])>($r210) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r209.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r209.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r211 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r211 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r211.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_ref_7_optimal.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r211.<java.io.FileOutputStream: void <init>(java.lang.String)>("apachesample_apachefilter_ref_7_optimal.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r212 = $r211
org.apache.xml.security.samples.TransformPerformanceTester.main : r212 = $r211 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r213 = r198[1]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r213 = r198[1] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r212.<java.io.FileOutputStream: void write(byte[])>($r213)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r212.<java.io.FileOutputStream: void write(byte[])>($r213) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r212.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r212.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z17 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : r198 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] apachesample_apachefilter_7_optimal(org.w3c.dom.Document)>(r197) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $i53 = i52 % 10
org.apache.xml.security.samples.TransformPerformanceTester.main : $i53 = i52 % 10 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if $i53 != 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if $i53 != 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i52 = i52 + 1
org.apache.xml.security.samples.TransformPerformanceTester.main : i52 = i52 + 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)]
org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i52 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : r174 = "<Document>\n     <ToBeSigned>\n       <!-- comment -->\n       <Data />\n       <NotToBeSigned>\n         <ReallyToBeSigned>\n           <!-- comment -->\n           <Data />\n         </ReallyToBeSigned>\n       </NotToBeSigned>\n     </ToBeSigned>\n     <ToBeSigned>\n       <Data />\n       <NotToBeSigned>\n         <Data />\n       </NotToBeSigned>\n     </ToBeSigned>\n</Document>" >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r175 = new java.io.ByteArrayInputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r175 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r176 = virtualinvoke r174.<java.lang.String: byte[] getBytes()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r176 = virtualinvoke r174.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r175.<java.io.ByteArrayInputStream: void <init>(byte[])>($r176)
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r175.<java.io.ByteArrayInputStream: void <init>(byte[])>($r176) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r177 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r175)
org.apache.xml.security.samples.TransformPerformanceTester.main : r177 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r175) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l46 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l46 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r178 = (byte[][]) null
org.apache.xml.security.samples.TransformPerformanceTester.main : r178 = (byte[][]) null >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i47 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : i47 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i47 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : if i47 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r178 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] xfilter2spec_apachefilter_3(org.w3c.dom.Document)>(r177)
org.apache.xml.security.samples.TransformPerformanceTester.main : if i47 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l49 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l49 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $l50 = l49 - l46
org.apache.xml.security.samples.TransformPerformanceTester.main : $l50 = l49 - l46 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : d18 = (double) $l50
org.apache.xml.security.samples.TransformPerformanceTester.main : d18 = (double) $l50 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r179 = <java.lang.System: java.io.PrintStream out>
org.apache.xml.security.samples.TransformPerformanceTester.main : $r179 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r180 = new java.lang.StringBuilder
org.apache.xml.security.samples.TransformPerformanceTester.main : $r180 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r180.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r180.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r181 = virtualinvoke $r180.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r181 = virtualinvoke $r180.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r182 = virtualinvoke $r181.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * xfilter2spec_apachefilter_3 took ")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r182 = virtualinvoke $r181.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * xfilter2spec_apachefilter_3 took ") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r183 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r183 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $d19 = d18 / 1000.0
org.apache.xml.security.samples.TransformPerformanceTester.main : $d19 = d18 / 1000.0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r184 = virtualinvoke $r183.<java.text.NumberFormat: java.lang.String format(double)>($d19)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r184 = virtualinvoke $r183.<java.text.NumberFormat: java.lang.String format(double)>($d19) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r185 = virtualinvoke $r182.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r184)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r185 = virtualinvoke $r182.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r184) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r186 = virtualinvoke $r185.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r186 = virtualinvoke $r185.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r187 = virtualinvoke $r186.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r187 = virtualinvoke $r186.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r179.<java.io.PrintStream: void println(java.lang.String)>($r187)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r179.<java.io.PrintStream: void println(java.lang.String)>($r187) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r188 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r188 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r188.<java.io.FileOutputStream: void <init>(java.lang.String)>("xfilter2spec_apachefilter_doc_3.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r188.<java.io.FileOutputStream: void <init>(java.lang.String)>("xfilter2spec_apachefilter_doc_3.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r189 = $r188
org.apache.xml.security.samples.TransformPerformanceTester.main : r189 = $r188 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r190 = r178[0]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r190 = r178[0] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r189.<java.io.FileOutputStream: void write(byte[])>($r190)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r189.<java.io.FileOutputStream: void write(byte[])>($r190) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r189.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r189.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r191 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r191 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r191.<java.io.FileOutputStream: void <init>(java.lang.String)>("xfilter2spec_apachefilter_ref_3.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r191.<java.io.FileOutputStream: void <init>(java.lang.String)>("xfilter2spec_apachefilter_ref_3.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r192 = $r191
org.apache.xml.security.samples.TransformPerformanceTester.main : r192 = $r191 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r193 = r178[1]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r193 = r178[1] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r192.<java.io.FileOutputStream: void write(byte[])>($r193)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r192.<java.io.FileOutputStream: void write(byte[])>($r193) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r192.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r192.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z24 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : r178 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] xfilter2spec_apachefilter_3(org.w3c.dom.Document)>(r177) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $i48 = i47 % 10
org.apache.xml.security.samples.TransformPerformanceTester.main : $i48 = i47 % 10 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if $i48 != 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if $i48 != 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i47 = i47 + 1
org.apache.xml.security.samples.TransformPerformanceTester.main : i47 = i47 + 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)]
org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i47 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : r154 = "<Document>\n     <ToBeSigned>\n       <!-- comment -->\n       <Data />\n       <NotToBeSigned>\n         <ReallyToBeSigned>\n           <!-- comment -->\n           <Data />\n         </ReallyToBeSigned>\n       </NotToBeSigned>\n     </ToBeSigned>\n     <ToBeSigned>\n       <Data />\n       <NotToBeSigned>\n         <Data />\n       </NotToBeSigned>\n     </ToBeSigned>\n</Document>" >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r155 = new java.io.ByteArrayInputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r155 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r156 = virtualinvoke r154.<java.lang.String: byte[] getBytes()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r156 = virtualinvoke r154.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r155.<java.io.ByteArrayInputStream: void <init>(byte[])>($r156)
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r155.<java.io.ByteArrayInputStream: void <init>(byte[])>($r156) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r157 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r155)
org.apache.xml.security.samples.TransformPerformanceTester.main : r157 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r155) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l41 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l41 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r158 = (byte[][]) null
org.apache.xml.security.samples.TransformPerformanceTester.main : r158 = (byte[][]) null >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i42 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : i42 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i42 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : if i42 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r158 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] xfilter2spec_apachefilter_2(org.w3c.dom.Document)>(r157)
org.apache.xml.security.samples.TransformPerformanceTester.main : if i42 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l44 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l44 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $l45 = l44 - l41
org.apache.xml.security.samples.TransformPerformanceTester.main : $l45 = l44 - l41 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : d16 = (double) $l45
org.apache.xml.security.samples.TransformPerformanceTester.main : d16 = (double) $l45 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r159 = <java.lang.System: java.io.PrintStream out>
org.apache.xml.security.samples.TransformPerformanceTester.main : $r159 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r160 = new java.lang.StringBuilder
org.apache.xml.security.samples.TransformPerformanceTester.main : $r160 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r160.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r160.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r161 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r161 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r162 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * xfilter2spec_apachefilter_2 took ")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r162 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * xfilter2spec_apachefilter_2 took ") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r163 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r163 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $d17 = d16 / 1000.0
org.apache.xml.security.samples.TransformPerformanceTester.main : $d17 = d16 / 1000.0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r164 = virtualinvoke $r163.<java.text.NumberFormat: java.lang.String format(double)>($d17)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r164 = virtualinvoke $r163.<java.text.NumberFormat: java.lang.String format(double)>($d17) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r165 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r164)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r165 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r164) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r166 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r166 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r167 = virtualinvoke $r166.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r167 = virtualinvoke $r166.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r159.<java.io.PrintStream: void println(java.lang.String)>($r167)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r159.<java.io.PrintStream: void println(java.lang.String)>($r167) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r168 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r168 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r168.<java.io.FileOutputStream: void <init>(java.lang.String)>("xfilter2spec_apachefilter_doc_2.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r168.<java.io.FileOutputStream: void <init>(java.lang.String)>("xfilter2spec_apachefilter_doc_2.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r169 = $r168
org.apache.xml.security.samples.TransformPerformanceTester.main : r169 = $r168 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r170 = r158[0]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r170 = r158[0] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r169.<java.io.FileOutputStream: void write(byte[])>($r170)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r169.<java.io.FileOutputStream: void write(byte[])>($r170) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r169.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r169.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r171 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r171 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r171.<java.io.FileOutputStream: void <init>(java.lang.String)>("xfilter2spec_apachefilter_ref_2.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r171.<java.io.FileOutputStream: void <init>(java.lang.String)>("xfilter2spec_apachefilter_ref_2.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r172 = $r171
org.apache.xml.security.samples.TransformPerformanceTester.main : r172 = $r171 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r173 = r158[1]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r173 = r158[1] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r172.<java.io.FileOutputStream: void write(byte[])>($r173)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r172.<java.io.FileOutputStream: void write(byte[])>($r173) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r172.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r172.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z9 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : r158 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] xfilter2spec_apachefilter_2(org.w3c.dom.Document)>(r157) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $i43 = i42 % 10
org.apache.xml.security.samples.TransformPerformanceTester.main : $i43 = i42 % 10 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if $i43 != 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if $i43 != 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i42 = i42 + 1
org.apache.xml.security.samples.TransformPerformanceTester.main : i42 = i42 + 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)]
org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i42 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : r134 = "<Document>\n     <ToBeSigned>\n       <!-- comment -->\n       <Data />\n       <NotToBeSigned>\n         <ReallyToBeSigned>\n           <!-- comment -->\n           <Data />\n         </ReallyToBeSigned>\n       </NotToBeSigned>\n     </ToBeSigned>\n     <ToBeSigned>\n       <Data />\n       <NotToBeSigned>\n         <Data />\n       </NotToBeSigned>\n     </ToBeSigned>\n</Document>" >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r135 = new java.io.ByteArrayInputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r135 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r136 = virtualinvoke r134.<java.lang.String: byte[] getBytes()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r136 = virtualinvoke r134.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r135.<java.io.ByteArrayInputStream: void <init>(byte[])>($r136)
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r135.<java.io.ByteArrayInputStream: void <init>(byte[])>($r136) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r137 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r135)
org.apache.xml.security.samples.TransformPerformanceTester.main : r137 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r135) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l36 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l36 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r138 = (byte[][]) null
org.apache.xml.security.samples.TransformPerformanceTester.main : r138 = (byte[][]) null >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i37 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : i37 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i37 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : if i37 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r138 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] xfilter2spec_apachefilter_1(org.w3c.dom.Document)>(r137)
org.apache.xml.security.samples.TransformPerformanceTester.main : if i37 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l39 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l39 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $l40 = l39 - l36
org.apache.xml.security.samples.TransformPerformanceTester.main : $l40 = l39 - l36 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : d14 = (double) $l40
org.apache.xml.security.samples.TransformPerformanceTester.main : d14 = (double) $l40 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r139 = <java.lang.System: java.io.PrintStream out>
org.apache.xml.security.samples.TransformPerformanceTester.main : $r139 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r140 = new java.lang.StringBuilder
org.apache.xml.security.samples.TransformPerformanceTester.main : $r140 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r140.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r140.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r141 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r141 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r142 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * xfilter2spec_apachefilter_1 took ")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r142 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * xfilter2spec_apachefilter_1 took ") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r143 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r143 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $d15 = d14 / 1000.0
org.apache.xml.security.samples.TransformPerformanceTester.main : $d15 = d14 / 1000.0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r144 = virtualinvoke $r143.<java.text.NumberFormat: java.lang.String format(double)>($d15)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r144 = virtualinvoke $r143.<java.text.NumberFormat: java.lang.String format(double)>($d15) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r145 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r144)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r145 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r144) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r146 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r146 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r147 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r147 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r139.<java.io.PrintStream: void println(java.lang.String)>($r147)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r139.<java.io.PrintStream: void println(java.lang.String)>($r147) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r148 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r148 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r148.<java.io.FileOutputStream: void <init>(java.lang.String)>("xfilter2spec_apachefilter_doc_1.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r148.<java.io.FileOutputStream: void <init>(java.lang.String)>("xfilter2spec_apachefilter_doc_1.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r149 = $r148
org.apache.xml.security.samples.TransformPerformanceTester.main : r149 = $r148 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r150 = r138[0]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r150 = r138[0] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r149.<java.io.FileOutputStream: void write(byte[])>($r150)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r149.<java.io.FileOutputStream: void write(byte[])>($r150) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r149.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r149.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r151 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r151 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r151.<java.io.FileOutputStream: void <init>(java.lang.String)>("xfilter2spec_apachefilter_ref_1.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r151.<java.io.FileOutputStream: void <init>(java.lang.String)>("xfilter2spec_apachefilter_ref_1.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r152 = $r151
org.apache.xml.security.samples.TransformPerformanceTester.main : r152 = $r151 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r153 = r138[1]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r153 = r138[1] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r152.<java.io.FileOutputStream: void write(byte[])>($r153)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r152.<java.io.FileOutputStream: void write(byte[])>($r153) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r152.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r152.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z8 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : r138 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] xfilter2spec_apachefilter_1(org.w3c.dom.Document)>(r137) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $i38 = i37 % 10
org.apache.xml.security.samples.TransformPerformanceTester.main : $i38 = i37 % 10 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if $i38 != 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if $i38 != 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i37 = i37 + 1
org.apache.xml.security.samples.TransformPerformanceTester.main : i37 = i37 + 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)]
org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i37 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : r114 = "<Document>\n     <ToBeSigned>\n       <!-- comment -->\n       <Data />\n       <NotToBeSigned>\n         <ReallyToBeSigned>\n           <!-- comment -->\n           <Data />\n         </ReallyToBeSigned>\n       </NotToBeSigned>\n     </ToBeSigned>\n     <ToBeSigned>\n       <Data />\n       <NotToBeSigned>\n         <Data />\n       </NotToBeSigned>\n     </ToBeSigned>\n</Document>" >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r115 = new java.io.ByteArrayInputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r115 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r116 = virtualinvoke r114.<java.lang.String: byte[] getBytes()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r116 = virtualinvoke r114.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r115.<java.io.ByteArrayInputStream: void <init>(byte[])>($r116)
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r115.<java.io.ByteArrayInputStream: void <init>(byte[])>($r116) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r117 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r115)
org.apache.xml.security.samples.TransformPerformanceTester.main : r117 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r115) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l31 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l31 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r118 = (byte[][]) null
org.apache.xml.security.samples.TransformPerformanceTester.main : r118 = (byte[][]) null >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i32 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : i32 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i32 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : if i32 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r118 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] xfilter2spec_xfilter2_3(org.w3c.dom.Document)>(r117)
org.apache.xml.security.samples.TransformPerformanceTester.main : if i32 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l34 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l34 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $l35 = l34 - l31
org.apache.xml.security.samples.TransformPerformanceTester.main : $l35 = l34 - l31 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : d12 = (double) $l35
org.apache.xml.security.samples.TransformPerformanceTester.main : d12 = (double) $l35 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r119 = <java.lang.System: java.io.PrintStream out>
org.apache.xml.security.samples.TransformPerformanceTester.main : $r119 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r120 = new java.lang.StringBuilder
org.apache.xml.security.samples.TransformPerformanceTester.main : $r120 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r120.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r120.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * xfilter2spec_xfilter2_3 took ")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * xfilter2spec_xfilter2_3 took ") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r123 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r123 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $d13 = d12 / 1000.0
org.apache.xml.security.samples.TransformPerformanceTester.main : $d13 = d12 / 1000.0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r124 = virtualinvoke $r123.<java.text.NumberFormat: java.lang.String format(double)>($d13)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r124 = virtualinvoke $r123.<java.text.NumberFormat: java.lang.String format(double)>($d13) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r125 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r124)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r125 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r124) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r119.<java.io.PrintStream: void println(java.lang.String)>($r127)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r119.<java.io.PrintStream: void println(java.lang.String)>($r127) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r128 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r128 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r128.<java.io.FileOutputStream: void <init>(java.lang.String)>("xfilter2spec_xfilter2_doc_3.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r128.<java.io.FileOutputStream: void <init>(java.lang.String)>("xfilter2spec_xfilter2_doc_3.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r129 = $r128
org.apache.xml.security.samples.TransformPerformanceTester.main : r129 = $r128 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r130 = r118[0]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r130 = r118[0] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r129.<java.io.FileOutputStream: void write(byte[])>($r130)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r129.<java.io.FileOutputStream: void write(byte[])>($r130) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r129.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r129.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r131 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r131 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r131.<java.io.FileOutputStream: void <init>(java.lang.String)>("xfilter2spec_xfilter2_ref_3.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r131.<java.io.FileOutputStream: void <init>(java.lang.String)>("xfilter2spec_xfilter2_ref_3.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r132 = $r131
org.apache.xml.security.samples.TransformPerformanceTester.main : r132 = $r131 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r133 = r118[1]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r133 = r118[1] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r132.<java.io.FileOutputStream: void write(byte[])>($r133)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r132.<java.io.FileOutputStream: void write(byte[])>($r133) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r132.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r132.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z7 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : r118 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] xfilter2spec_xfilter2_3(org.w3c.dom.Document)>(r117) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $i33 = i32 % 10
org.apache.xml.security.samples.TransformPerformanceTester.main : $i33 = i32 % 10 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if $i33 != 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if $i33 != 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i32 = i32 + 1
org.apache.xml.security.samples.TransformPerformanceTester.main : i32 = i32 + 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)]
org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i32 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : r94 = "<Document>\n     <ToBeSigned>\n       <!-- comment -->\n       <Data />\n       <NotToBeSigned>\n         <ReallyToBeSigned>\n           <!-- comment -->\n           <Data />\n         </ReallyToBeSigned>\n       </NotToBeSigned>\n     </ToBeSigned>\n     <ToBeSigned>\n       <Data />\n       <NotToBeSigned>\n         <Data />\n       </NotToBeSigned>\n     </ToBeSigned>\n</Document>" >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r95 = new java.io.ByteArrayInputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r95 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r96 = virtualinvoke r94.<java.lang.String: byte[] getBytes()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r96 = virtualinvoke r94.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r95.<java.io.ByteArrayInputStream: void <init>(byte[])>($r96)
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r95.<java.io.ByteArrayInputStream: void <init>(byte[])>($r96) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r97 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r95)
org.apache.xml.security.samples.TransformPerformanceTester.main : r97 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r95) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l26 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l26 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r98 = (byte[][]) null
org.apache.xml.security.samples.TransformPerformanceTester.main : r98 = (byte[][]) null >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i27 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : i27 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i27 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : if i27 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r98 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] xfilter2spec_xfilter2_2(org.w3c.dom.Document)>(r97)
org.apache.xml.security.samples.TransformPerformanceTester.main : if i27 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l29 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l29 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $l30 = l29 - l26
org.apache.xml.security.samples.TransformPerformanceTester.main : $l30 = l29 - l26 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : d10 = (double) $l30
org.apache.xml.security.samples.TransformPerformanceTester.main : d10 = (double) $l30 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r99 = <java.lang.System: java.io.PrintStream out>
org.apache.xml.security.samples.TransformPerformanceTester.main : $r99 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r100 = new java.lang.StringBuilder
org.apache.xml.security.samples.TransformPerformanceTester.main : $r100 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r100.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r100.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * xfilter2spec_xfilter2_2 took ")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * xfilter2spec_xfilter2_2 took ") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r103 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r103 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $d11 = d10 / 1000.0
org.apache.xml.security.samples.TransformPerformanceTester.main : $d11 = d10 / 1000.0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r104 = virtualinvoke $r103.<java.text.NumberFormat: java.lang.String format(double)>($d11)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r104 = virtualinvoke $r103.<java.text.NumberFormat: java.lang.String format(double)>($d11) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r105 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r104)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r105 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r104) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r99.<java.io.PrintStream: void println(java.lang.String)>($r107)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r99.<java.io.PrintStream: void println(java.lang.String)>($r107) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r108 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r108 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r108.<java.io.FileOutputStream: void <init>(java.lang.String)>("xfilter2spec_xfilter2_doc_2.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r108.<java.io.FileOutputStream: void <init>(java.lang.String)>("xfilter2spec_xfilter2_doc_2.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r109 = $r108
org.apache.xml.security.samples.TransformPerformanceTester.main : r109 = $r108 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r110 = r98[0]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r110 = r98[0] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r109.<java.io.FileOutputStream: void write(byte[])>($r110)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r109.<java.io.FileOutputStream: void write(byte[])>($r110) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r109.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r109.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r111 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r111 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r111.<java.io.FileOutputStream: void <init>(java.lang.String)>("xfilter2spec_xfilter2_ref_2.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r111.<java.io.FileOutputStream: void <init>(java.lang.String)>("xfilter2spec_xfilter2_ref_2.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r112 = $r111
org.apache.xml.security.samples.TransformPerformanceTester.main : r112 = $r111 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r113 = r98[1]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r113 = r98[1] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r112.<java.io.FileOutputStream: void write(byte[])>($r113)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r112.<java.io.FileOutputStream: void write(byte[])>($r113) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r112.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r112.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z6 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : r98 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] xfilter2spec_xfilter2_2(org.w3c.dom.Document)>(r97) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $i28 = i27 % 10
org.apache.xml.security.samples.TransformPerformanceTester.main : $i28 = i27 % 10 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if $i28 != 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if $i28 != 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i27 = i27 + 1
org.apache.xml.security.samples.TransformPerformanceTester.main : i27 = i27 + 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)]
org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i27 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : r75 = "<Document>\n     <ToBeSigned>\n       <!-- comment -->\n       <Data />\n       <NotToBeSigned>\n         <ReallyToBeSigned>\n           <!-- comment -->\n           <Data />\n         </ReallyToBeSigned>\n       </NotToBeSigned>\n     </ToBeSigned>\n     <ToBeSigned>\n       <Data />\n       <NotToBeSigned>\n         <Data />\n       </NotToBeSigned>\n     </ToBeSigned>\n</Document>" >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r76 = new java.io.ByteArrayInputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r76 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r77 = virtualinvoke r75.<java.lang.String: byte[] getBytes()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r77 = virtualinvoke r75.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r76.<java.io.ByteArrayInputStream: void <init>(byte[])>($r77)
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r76.<java.io.ByteArrayInputStream: void <init>(byte[])>($r77) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r78 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r76)
org.apache.xml.security.samples.TransformPerformanceTester.main : r78 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r76) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l3 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r79 = (byte[][]) null
org.apache.xml.security.samples.TransformPerformanceTester.main : r79 = (byte[][]) null >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i4 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : i4 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i4 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : if i4 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r79 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] xfilter2spec_xfilter2_1(org.w3c.dom.Document)>(r78)
org.apache.xml.security.samples.TransformPerformanceTester.main : if i4 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l24 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l24 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $l25 = l24 - l3
org.apache.xml.security.samples.TransformPerformanceTester.main : $l25 = l24 - l3 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : d1 = (double) $l25
org.apache.xml.security.samples.TransformPerformanceTester.main : d1 = (double) $l25 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r80 = <java.lang.System: java.io.PrintStream out>
org.apache.xml.security.samples.TransformPerformanceTester.main : $r80 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r81 = new java.lang.StringBuilder
org.apache.xml.security.samples.TransformPerformanceTester.main : $r81 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r81.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r81.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * xfilter2spec_xfilter2_1 took ")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * xfilter2spec_xfilter2_1 took ") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r84 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r84 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $d9 = d1 / 1000.0
org.apache.xml.security.samples.TransformPerformanceTester.main : $d9 = d1 / 1000.0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r85 = virtualinvoke $r84.<java.text.NumberFormat: java.lang.String format(double)>($d9)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r85 = virtualinvoke $r84.<java.text.NumberFormat: java.lang.String format(double)>($d9) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r86 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r86 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r80.<java.io.PrintStream: void println(java.lang.String)>($r88)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r80.<java.io.PrintStream: void println(java.lang.String)>($r88) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r89 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r89 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r89.<java.io.FileOutputStream: void <init>(java.lang.String)>("xfilter2spec_xfilter2_doc_1.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r89.<java.io.FileOutputStream: void <init>(java.lang.String)>("xfilter2spec_xfilter2_doc_1.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r6 = $r89
org.apache.xml.security.samples.TransformPerformanceTester.main : r6 = $r89 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r90 = r79[0]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r90 = r79[0] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r6.<java.io.FileOutputStream: void write(byte[])>($r90)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r6.<java.io.FileOutputStream: void write(byte[])>($r90) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r6.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r6.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r91 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r91 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r91.<java.io.FileOutputStream: void <init>(java.lang.String)>("xfilter2spec_xfilter2_ref_1.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r91.<java.io.FileOutputStream: void <init>(java.lang.String)>("xfilter2spec_xfilter2_ref_1.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r92 = $r91
org.apache.xml.security.samples.TransformPerformanceTester.main : r92 = $r91 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r93 = r79[1]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r93 = r79[1] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r92.<java.io.FileOutputStream: void write(byte[])>($r93)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r92.<java.io.FileOutputStream: void write(byte[])>($r93) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r92.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r92.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z5 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : r79 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] xfilter2spec_xfilter2_1(org.w3c.dom.Document)>(r78) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $i23 = i4 % 10
org.apache.xml.security.samples.TransformPerformanceTester.main : $i23 = i4 % 10 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if $i23 != 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if $i23 != 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i4 = i4 + 1
org.apache.xml.security.samples.TransformPerformanceTester.main : i4 = i4 + 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)]
org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i4 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : $r57 = new java.io.FileInputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r57.<java.io.FileInputStream: void <init>(java.lang.String)>("data/com/pureedge/LeaveRequest.xfd")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r57.<java.io.FileInputStream: void <init>(java.lang.String)>("data/com/pureedge/LeaveRequest.xfd") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r58 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r57)
org.apache.xml.security.samples.TransformPerformanceTester.main : r58 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r57) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l18 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l18 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r59 = (byte[][]) null
org.apache.xml.security.samples.TransformPerformanceTester.main : r59 = (byte[][]) null >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i19 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : i19 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i19 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : if i19 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r59 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] pureedge_apachefilter(org.w3c.dom.Document)>(r58)
org.apache.xml.security.samples.TransformPerformanceTester.main : if i19 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l21 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l21 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $l22 = l21 - l18
org.apache.xml.security.samples.TransformPerformanceTester.main : $l22 = l21 - l18 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : d7 = (double) $l22
org.apache.xml.security.samples.TransformPerformanceTester.main : d7 = (double) $l22 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r60 = <java.lang.System: java.io.PrintStream out>
org.apache.xml.security.samples.TransformPerformanceTester.main : $r60 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r61 = new java.lang.StringBuilder
org.apache.xml.security.samples.TransformPerformanceTester.main : $r61 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r61.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r61.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * pureedge_apachefilter took ")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * pureedge_apachefilter took ") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r64 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r64 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $d8 = d7 / 1000.0
org.apache.xml.security.samples.TransformPerformanceTester.main : $d8 = d7 / 1000.0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r65 = virtualinvoke $r64.<java.text.NumberFormat: java.lang.String format(double)>($d8)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r65 = virtualinvoke $r64.<java.text.NumberFormat: java.lang.String format(double)>($d8) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r66 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r66 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r60.<java.io.PrintStream: void println(java.lang.String)>($r68)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r60.<java.io.PrintStream: void println(java.lang.String)>($r68) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r69 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r69 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r69.<java.io.FileOutputStream: void <init>(java.lang.String)>("pureedge_apachefilter_doc.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r69.<java.io.FileOutputStream: void <init>(java.lang.String)>("pureedge_apachefilter_doc.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r70 = $r69
org.apache.xml.security.samples.TransformPerformanceTester.main : r70 = $r69 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r71 = r59[0]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r71 = r59[0] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r70.<java.io.FileOutputStream: void write(byte[])>($r71)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r70.<java.io.FileOutputStream: void write(byte[])>($r71) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r70.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r70.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r72 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r72 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r72.<java.io.FileOutputStream: void <init>(java.lang.String)>("pureedge_apachefilter_ref.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r72.<java.io.FileOutputStream: void <init>(java.lang.String)>("pureedge_apachefilter_ref.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r73 = $r72
org.apache.xml.security.samples.TransformPerformanceTester.main : r73 = $r72 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r74 = r59[1]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r74 = r59[1] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r73.<java.io.FileOutputStream: void write(byte[])>($r74)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r73.<java.io.FileOutputStream: void write(byte[])>($r74) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r73.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r73.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z4 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : r59 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] pureedge_apachefilter(org.w3c.dom.Document)>(r58) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $i20 = i19 % 10
org.apache.xml.security.samples.TransformPerformanceTester.main : $i20 = i19 % 10 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if $i20 != 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if $i20 != 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i19 = i19 + 1
org.apache.xml.security.samples.TransformPerformanceTester.main : i19 = i19 + 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)]
org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i19 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : $r39 = new java.io.FileInputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r39.<java.io.FileInputStream: void <init>(java.lang.String)>("data/com/pureedge/LeaveRequest.xfd")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r39.<java.io.FileInputStream: void <init>(java.lang.String)>("data/com/pureedge/LeaveRequest.xfd") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r40 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r39)
org.apache.xml.security.samples.TransformPerformanceTester.main : r40 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r39) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l13 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l13 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r41 = (byte[][]) null
org.apache.xml.security.samples.TransformPerformanceTester.main : r41 = (byte[][]) null >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i14 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : i14 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i14 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : if i14 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r41 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] pureedge_xfilter2_new(org.w3c.dom.Document)>(r40)
org.apache.xml.security.samples.TransformPerformanceTester.main : if i14 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l16 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l16 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $l17 = l16 - l13
org.apache.xml.security.samples.TransformPerformanceTester.main : $l17 = l16 - l13 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : d5 = (double) $l17
org.apache.xml.security.samples.TransformPerformanceTester.main : d5 = (double) $l17 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r42 = <java.lang.System: java.io.PrintStream out>
org.apache.xml.security.samples.TransformPerformanceTester.main : $r42 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r43 = new java.lang.StringBuilder
org.apache.xml.security.samples.TransformPerformanceTester.main : $r43 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r43.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r43.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * pureedge_xfilter2_new took ")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * pureedge_xfilter2_new took ") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r46 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r46 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $d6 = d5 / 1000.0
org.apache.xml.security.samples.TransformPerformanceTester.main : $d6 = d5 / 1000.0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r47 = virtualinvoke $r46.<java.text.NumberFormat: java.lang.String format(double)>($d6)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r47 = virtualinvoke $r46.<java.text.NumberFormat: java.lang.String format(double)>($d6) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r48 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r48 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r50)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r50) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r51 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r51 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r51.<java.io.FileOutputStream: void <init>(java.lang.String)>("pureedge_xfilter2_new_doc.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r51.<java.io.FileOutputStream: void <init>(java.lang.String)>("pureedge_xfilter2_new_doc.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r52 = $r51
org.apache.xml.security.samples.TransformPerformanceTester.main : r52 = $r51 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r53 = r41[0]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r53 = r41[0] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r52.<java.io.FileOutputStream: void write(byte[])>($r53)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r52.<java.io.FileOutputStream: void write(byte[])>($r53) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r52.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r52.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r54 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r54 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r54.<java.io.FileOutputStream: void <init>(java.lang.String)>("pureedge_xfilter2_new_ref.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r54.<java.io.FileOutputStream: void <init>(java.lang.String)>("pureedge_xfilter2_new_ref.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r55 = $r54
org.apache.xml.security.samples.TransformPerformanceTester.main : r55 = $r54 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r56 = r41[1]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r56 = r41[1] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r55.<java.io.FileOutputStream: void write(byte[])>($r56)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r55.<java.io.FileOutputStream: void write(byte[])>($r56) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r55.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r55.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z3 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : r41 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] pureedge_xfilter2_new(org.w3c.dom.Document)>(r40) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $i15 = i14 % 10
org.apache.xml.security.samples.TransformPerformanceTester.main : $i15 = i14 % 10 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if $i15 != 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if $i15 != 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i14 = i14 + 1
org.apache.xml.security.samples.TransformPerformanceTester.main : i14 = i14 + 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)]
org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i14 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : $r21 = new java.io.FileInputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r21.<java.io.FileInputStream: void <init>(java.lang.String)>("data/com/pureedge/LeaveRequest.xfd")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r21.<java.io.FileInputStream: void <init>(java.lang.String)>("data/com/pureedge/LeaveRequest.xfd") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r22 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r21)
org.apache.xml.security.samples.TransformPerformanceTester.main : r22 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r21) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l8 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l8 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r23 = (byte[][]) null
org.apache.xml.security.samples.TransformPerformanceTester.main : r23 = (byte[][]) null >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i9 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : i9 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i9 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : if i9 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r23 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] pureedge_xfilter2(org.w3c.dom.Document)>(r22)
org.apache.xml.security.samples.TransformPerformanceTester.main : if i9 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l11 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l11 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $l12 = l11 - l8
org.apache.xml.security.samples.TransformPerformanceTester.main : $l12 = l11 - l8 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : d3 = (double) $l12
org.apache.xml.security.samples.TransformPerformanceTester.main : d3 = (double) $l12 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r24 = <java.lang.System: java.io.PrintStream out>
org.apache.xml.security.samples.TransformPerformanceTester.main : $r24 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r25 = new java.lang.StringBuilder
org.apache.xml.security.samples.TransformPerformanceTester.main : $r25 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r25.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * pureedge_xfilter2 took ")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * pureedge_xfilter2 took ") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r28 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r28 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $d4 = d3 / 1000.0
org.apache.xml.security.samples.TransformPerformanceTester.main : $d4 = d3 / 1000.0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r29 = virtualinvoke $r28.<java.text.NumberFormat: java.lang.String format(double)>($d4)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r29 = virtualinvoke $r28.<java.text.NumberFormat: java.lang.String format(double)>($d4) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r32)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r32) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r33 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r33 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r33.<java.io.FileOutputStream: void <init>(java.lang.String)>("pureedge_xfilter2_doc.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r33.<java.io.FileOutputStream: void <init>(java.lang.String)>("pureedge_xfilter2_doc.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r34 = $r33
org.apache.xml.security.samples.TransformPerformanceTester.main : r34 = $r33 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r35 = r23[0]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r35 = r23[0] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r34.<java.io.FileOutputStream: void write(byte[])>($r35)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r34.<java.io.FileOutputStream: void write(byte[])>($r35) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r34.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r34.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r36 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r36 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r36.<java.io.FileOutputStream: void <init>(java.lang.String)>("pureedge_xfilter2_ref.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r36.<java.io.FileOutputStream: void <init>(java.lang.String)>("pureedge_xfilter2_ref.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r37 = $r36
org.apache.xml.security.samples.TransformPerformanceTester.main : r37 = $r36 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r38 = r23[1]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r38 = r23[1] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r37.<java.io.FileOutputStream: void write(byte[])>($r38)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r37.<java.io.FileOutputStream: void write(byte[])>($r38) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r37.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r37.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z2 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : r23 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] pureedge_xfilter2(org.w3c.dom.Document)>(r22) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $i10 = i9 % 10
org.apache.xml.security.samples.TransformPerformanceTester.main : $i10 = i9 % 10 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if $i10 != 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if $i10 != 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i9 = i9 + 1
org.apache.xml.security.samples.TransformPerformanceTester.main : i9 = i9 + 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)]
org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i9 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : r3 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l1 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r4 = (byte[][]) null
org.apache.xml.security.samples.TransformPerformanceTester.main : r4 = (byte[][]) null >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i2 = 0
org.apache.xml.security.samples.TransformPerformanceTester.main : i2 = 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i2 >= b0
org.apache.xml.security.samples.TransformPerformanceTester.main : if i2 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r4 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] simple_gif_detached(org.w3c.dom.Document)>(r3)
org.apache.xml.security.samples.TransformPerformanceTester.main : if i2 >= b0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : l6 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : l6 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $l7 = l6 - l1
org.apache.xml.security.samples.TransformPerformanceTester.main : $l7 = l6 - l1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : d0 = (double) $l7
org.apache.xml.security.samples.TransformPerformanceTester.main : d0 = (double) $l7 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r7 = <java.lang.System: java.io.PrintStream out>
org.apache.xml.security.samples.TransformPerformanceTester.main : $r7 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r8 = new java.lang.StringBuilder
org.apache.xml.security.samples.TransformPerformanceTester.main : $r8 = new java.lang.StringBuilder >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * simple_gif_detached took ")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" * simple_gif_detached took ") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r11 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r11 = staticinvoke <java.text.DecimalFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $d2 = d0 / 1000.0
org.apache.xml.security.samples.TransformPerformanceTester.main : $d2 = d0 / 1000.0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r12 = virtualinvoke $r11.<java.text.NumberFormat: java.lang.String format(double)>($d2)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r12 = virtualinvoke $r11.<java.text.NumberFormat: java.lang.String format(double)>($d2) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
org.apache.xml.security.samples.TransformPerformanceTester.main : $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
org.apache.xml.security.samples.TransformPerformanceTester.main : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r15)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r15) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r16 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r16 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r16.<java.io.FileOutputStream: void <init>(java.lang.String)>("simple_gif_detached.xml")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r16.<java.io.FileOutputStream: void <init>(java.lang.String)>("simple_gif_detached.xml") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r5 = $r16
org.apache.xml.security.samples.TransformPerformanceTester.main : r5 = $r16 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r17 = r4[0]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r17 = r4[0] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r5.<java.io.FileOutputStream: void write(byte[])>($r17)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r5.<java.io.FileOutputStream: void write(byte[])>($r17) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r5.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r5.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r18 = new java.io.FileOutputStream
org.apache.xml.security.samples.TransformPerformanceTester.main : $r18 = new java.io.FileOutputStream >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r18.<java.io.FileOutputStream: void <init>(java.lang.String)>("simple_gif_detached.gif")
org.apache.xml.security.samples.TransformPerformanceTester.main : specialinvoke $r18.<java.io.FileOutputStream: void <init>(java.lang.String)>("simple_gif_detached.gif") >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : r19 = $r18
org.apache.xml.security.samples.TransformPerformanceTester.main : r19 = $r18 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $r20 = r4[1]
org.apache.xml.security.samples.TransformPerformanceTester.main : $r20 = r4[1] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r19.<java.io.FileOutputStream: void write(byte[])>($r20)
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r19.<java.io.FileOutputStream: void write(byte[])>($r20) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r19.<java.io.FileOutputStream: void close()>()
org.apache.xml.security.samples.TransformPerformanceTester.main : virtualinvoke r19.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if z1 == 0
org.apache.xml.security.samples.TransformPerformanceTester.main : r4 = staticinvoke <org.apache.xml.security.samples.TransformPerformanceTester: byte[][] simple_gif_detached(org.w3c.dom.Document)>(r3) >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : $i5 = i2 % 10
org.apache.xml.security.samples.TransformPerformanceTester.main : $i5 = i2 % 10 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if $i5 != 0
org.apache.xml.security.samples.TransformPerformanceTester.main : if $i5 != 0 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : i2 = i2 + 1
org.apache.xml.security.samples.TransformPerformanceTester.main : i2 = i2 + 1 >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)]
org.apache.xml.security.samples.TransformPerformanceTester.main : goto [?= (branch)] >>>>>>>> org.apache.xml.security.samples.TransformPerformanceTester.main : if i2 >= b0
