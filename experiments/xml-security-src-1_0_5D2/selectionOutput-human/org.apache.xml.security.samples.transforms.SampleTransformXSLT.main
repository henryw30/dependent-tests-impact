org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : staticinvoke <org.apache.xml.security.Init: void init()>() >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : r1 = "<?xml version=\"1.0\"?>\n<ds:Transforms xmlns:ds=\'http://www.w3.org/2000/09/xmldsig#\'>\n<ds:Transform Algorithm=\'http://www.w3.org/TR/1999/REC-xslt-19991116\'>\n<xsl:stylesheet  version=\"1.0\"\n                 xmlns:xsl=\'http://www.w3.org/1999/XSL/Transform\'>\n<xsl:output method=\"xml\" indent=\"yes\"/>\n<xsl:template match=\"Class\">\n<BirdInfo>\n\t<xsl:apply-templates select=\"Order\"/>\n</BirdInfo>\n</xsl:template>\n<xsl:template match=\"Order\">\nOrder is:  <xsl:value-of select=\"@Name\"/>\n\t<xsl:apply-templates select=\"Family\"/><xsl:text>\n</xsl:text>\n</xsl:template>\n<xsl:template match=\"Family\">\n\tFamily is:  <xsl:value-of select=\"@Name\"/>\n\t<xsl:apply-templates select=\"Species | SubFamily | text()\"/>\n</xsl:template>\n<xsl:template match=\"SubFamily\">\n\t\tSubFamily is <xsl:value-of select=\"@Name\"/>\n    <xsl:apply-templates select=\"Species | text()\"/>\n</xsl:template>\n<xsl:template match=\"Species\">\n\t<xsl:choose>\n\t  <xsl:when test=\"name(..)=\'SubFamily\'\">\n\t\t<xsl:text>\t</xsl:text><xsl:value-of select=\".\"/><xsl:text> </xsl:text><xsl:value-of select=\"@Scientific_Name\"/>\n\t  </xsl:when>\n\t  <xsl:otherwise>\n\t\t<xsl:value-of select=\".\"/><xsl:text> </xsl:text><xsl:value-of select=\"@Scientific_Name\"/>\n\t  </xsl:otherwise>\n\t</xsl:choose>\n</xsl:template>\n</xsl:stylesheet>\n</ds:Transform>\n</ds:Transforms>\n"
org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : r1 = "<?xml version=\"1.0\"?>\n<ds:Transforms xmlns:ds=\'http://www.w3.org/2000/09/xmldsig#\'>\n<ds:Transform Algorithm=\'http://www.w3.org/TR/1999/REC-xslt-19991116\'>\n<xsl:stylesheet  version=\"1.0\"\n                 xmlns:xsl=\'http://www.w3.org/1999/XSL/Transform\'>\n<xsl:output method=\"xml\" indent=\"yes\"/>\n<xsl:template match=\"Class\">\n<BirdInfo>\n\t<xsl:apply-templates select=\"Order\"/>\n</BirdInfo>\n</xsl:template>\n<xsl:template match=\"Order\">\nOrder is:  <xsl:value-of select=\"@Name\"/>\n\t<xsl:apply-templates select=\"Family\"/><xsl:text>\n</xsl:text>\n</xsl:template>\n<xsl:template match=\"Family\">\n\tFamily is:  <xsl:value-of select=\"@Name\"/>\n\t<xsl:apply-templates select=\"Species | SubFamily | text()\"/>\n</xsl:template>\n<xsl:template match=\"SubFamily\">\n\t\tSubFamily is <xsl:value-of select=\"@Name\"/>\n    <xsl:apply-templates select=\"Species | text()\"/>\n</xsl:template>\n<xsl:template match=\"Species\">\n\t<xsl:choose>\n\t  <xsl:when test=\"name(..)=\'SubFamily\'\">\n\t\t<xsl:text>\t</xsl:text><xsl:value-of select=\".\"/><xsl:text> </xsl:text><xsl:value-of select=\"@Scientific_Name\"/>\n\t  </xsl:when>\n\t  <xsl:otherwise>\n\t\t<xsl:value-of select=\".\"/><xsl:text> </xsl:text><xsl:value-of select=\"@Scientific_Name\"/>\n\t  </xsl:otherwise>\n\t</xsl:choose>\n</xsl:template>\n</xsl:stylesheet>\n</ds:Transform>\n</ds:Transforms>\n" >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : r2 = "<?xml version=\"1.0\"?>\n<Class>\n<Order Name=\"TINAMIFORMES\">\n        <Family Name=\"TINAMIDAE\">\n            <Species Scientific_Name=\"Tinamus major\">  Great Tinamou.</Species>\n            <Species Scientific_Name=\"Nothocercus\">Highland Tinamou.</Species>\n            <Species Scientific_Name=\"Crypturellus soui\">Little Tinamou.</Species>\n            <Species Scientific_Name=\"Crypturellus cinnamomeus\">Thicket Tinamou.</Species>\n            <Species Scientific_Name=\"Crypturellus boucardi\">Slaty-breasted Tinamou.</Species>\n            <Species Scientific_Name=\"Crypturellus kerriae\">Choco Tinamou.</Species>\n        </Family>\n    </Order>\n    <Order Name=\"GAVIIFORMES\">\n        <Family Name=\"GAVIIDAE\">\n            <Species Scientific_Name=\"Gavia stellata\">Red-throated Loon.</Species>\n            <Species Scientific_Name=\"Gavia arctica\">Arctic Loon.</Species>\n            <Species Scientific_Name=\"Gavia pacifica\">Pacific Loon.</Species>\n            <Species Scientific_Name=\"Gavia immer\">Common Loon.</Species>\n            <Species Scientific_Name=\"Gavia adamsii\">Yellow-billed Loon.</Species>\n        </Family>\n    </Order>\n    <Order Name=\"PODICIPEDIFORMES\">\n        <Family Name=\"PODICIPEDIDAE\">\n            <Species Scientific_Name=\"Tachybaptus dominicus\">Least Grebe.</Species>\n            <Species Scientific_Name=\"Podilymbus podiceps\">Pied-billed Grebe.</Species>\n            <Species Scientific_Name=\"\">Atitlan Grebe.</Species>\n            <Species Scientific_Name=\"\">Horned Grebe.</Species>\n            <Species Scientific_Name=\"\">Red-necked Grebe.</Species>\n            <Species Scientific_Name=\"\">Eared Grebe.</Species>\n            <Species Scientific_Name=\"\">Western Grebe.</Species>\n            <Species Scientific_Name=\"\">Clark\'s Grebe.</Species>\n        </Family>\n    </Order>\n</Class>\n"
org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : r2 = "<?xml version=\"1.0\"?>\n<Class>\n<Order Name=\"TINAMIFORMES\">\n        <Family Name=\"TINAMIDAE\">\n            <Species Scientific_Name=\"Tinamus major\">  Great Tinamou.</Species>\n            <Species Scientific_Name=\"Nothocercus\">Highland Tinamou.</Species>\n            <Species Scientific_Name=\"Crypturellus soui\">Little Tinamou.</Species>\n            <Species Scientific_Name=\"Crypturellus cinnamomeus\">Thicket Tinamou.</Species>\n            <Species Scientific_Name=\"Crypturellus boucardi\">Slaty-breasted Tinamou.</Species>\n            <Species Scientific_Name=\"Crypturellus kerriae\">Choco Tinamou.</Species>\n        </Family>\n    </Order>\n    <Order Name=\"GAVIIFORMES\">\n        <Family Name=\"GAVIIDAE\">\n            <Species Scientific_Name=\"Gavia stellata\">Red-throated Loon.</Species>\n            <Species Scientific_Name=\"Gavia arctica\">Arctic Loon.</Species>\n            <Species Scientific_Name=\"Gavia pacifica\">Pacific Loon.</Species>\n            <Species Scientific_Name=\"Gavia immer\">Common Loon.</Species>\n            <Species Scientific_Name=\"Gavia adamsii\">Yellow-billed Loon.</Species>\n        </Family>\n    </Order>\n    <Order Name=\"PODICIPEDIFORMES\">\n        <Family Name=\"PODICIPEDIDAE\">\n            <Species Scientific_Name=\"Tachybaptus dominicus\">Least Grebe.</Species>\n            <Species Scientific_Name=\"Podilymbus podiceps\">Pied-billed Grebe.</Species>\n            <Species Scientific_Name=\"\">Atitlan Grebe.</Species>\n            <Species Scientific_Name=\"\">Horned Grebe.</Species>\n            <Species Scientific_Name=\"\">Red-necked Grebe.</Species>\n            <Species Scientific_Name=\"\">Eared Grebe.</Species>\n            <Species Scientific_Name=\"\">Western Grebe.</Species>\n            <Species Scientific_Name=\"\">Clark\'s Grebe.</Species>\n        </Family>\n    </Order>\n</Class>\n" >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : r3 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>()
org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : r3 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>() >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : virtualinvoke r3.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(1)
org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : virtualinvoke r3.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(1) >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : r4 = virtualinvoke r3.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>()
org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : r4 = virtualinvoke r3.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>() >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : $r8 = new java.io.ByteArrayInputStream
org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : $r8 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : $r9 = virtualinvoke r1.<java.lang.String: byte[] getBytes()>()
org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : $r9 = virtualinvoke r1.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : specialinvoke $r8.<java.io.ByteArrayInputStream: void <init>(byte[])>($r9)
org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : specialinvoke $r8.<java.io.ByteArrayInputStream: void <init>(byte[])>($r9) >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : r5 = virtualinvoke r4.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r8)
org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : r5 = virtualinvoke r4.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r8) >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : $r10 = new org.apache.xml.security.transforms.Transforms
org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : $r10 = new org.apache.xml.security.transforms.Transforms >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : $r11 = interfaceinvoke r5.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>()
org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : $r11 = interfaceinvoke r5.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>() >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : specialinvoke $r10.<org.apache.xml.security.transforms.Transforms: void <init>(org.w3c.dom.Element,java.lang.String)>($r11, "memory://")
org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : specialinvoke $r10.<org.apache.xml.security.transforms.Transforms: void <init>(org.w3c.dom.Element,java.lang.String)>($r11, "memory://") >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : r6 = $r10
org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : r6 = $r10 >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : $r12 = new org.apache.xml.security.signature.XMLSignatureInput
org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : $r12 = new org.apache.xml.security.signature.XMLSignatureInput >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : $r13 = virtualinvoke r2.<java.lang.String: byte[] getBytes()>()
org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : $r13 = virtualinvoke r2.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : specialinvoke $r12.<org.apache.xml.security.signature.XMLSignatureInput: void <init>(byte[])>($r13)
org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : specialinvoke $r12.<org.apache.xml.security.signature.XMLSignatureInput: void <init>(byte[])>($r13) >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : r7 = virtualinvoke r6.<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>($r12)
org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : r7 = virtualinvoke r6.<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>($r12) >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : $r14 = <java.lang.System: java.io.PrintStream out>
org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : $r14 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : $r15 = new java.lang.String
org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : $r15 = new java.lang.String >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : $r16 = virtualinvoke r7.<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>()
org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : $r16 = virtualinvoke r7.<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>() >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : specialinvoke $r15.<java.lang.String: void <init>(byte[])>($r16)
org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : specialinvoke $r15.<java.lang.String: void <init>(byte[])>($r16) >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r15)
org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r15) >>>>>>>> org.apache.xml.security.samples.transforms.SampleTransformXSLT.main : return
