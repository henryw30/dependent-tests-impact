org.apache.xml.security.utils.XMLUtils.getXalan20Version : r0 = newarray (java.lang.Class)[0] >>>>>>>> org.apache.xml.security.utils.XMLUtils.getXalan20Version : r1 = staticinvoke <org.apache.xml.security.utils.XMLUtils: java.lang.Class classForName(java.lang.String)>("org.apache.xalan.Version")
org.apache.xml.security.utils.XMLUtils.getXalan20Version : r0 = newarray (java.lang.Class)[0] >>>>>>>> org.apache.xml.security.utils.XMLUtils.getXalan20Version : $r7 := @caughtexception
org.apache.xml.security.utils.XMLUtils.getXalan20Version : r4 = $r7 >>>>>>>> org.apache.xml.security.utils.XMLUtils.getXalan20Version : return null
org.apache.xml.security.utils.XMLUtils.getXalan20Version : r1 = staticinvoke <org.apache.xml.security.utils.XMLUtils: java.lang.Class classForName(java.lang.String)>("org.apache.xalan.Version") >>>>>>>> org.apache.xml.security.utils.XMLUtils.getXalan20Version : r2 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getVersion", r0)
org.apache.xml.security.utils.XMLUtils.getXalan20Version : r1 = staticinvoke <org.apache.xml.security.utils.XMLUtils: java.lang.Class classForName(java.lang.String)>("org.apache.xalan.Version") >>>>>>>> org.apache.xml.security.utils.XMLUtils.getXalan20Version : $r7 := @caughtexception
org.apache.xml.security.utils.XMLUtils.getXalan20Version : r2 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getVersion", r0) >>>>>>>> org.apache.xml.security.utils.XMLUtils.getXalan20Version : $r5 = newarray (java.lang.Object)[0]
org.apache.xml.security.utils.XMLUtils.getXalan20Version : r2 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getVersion", r0) >>>>>>>> org.apache.xml.security.utils.XMLUtils.getXalan20Version : $r7 := @caughtexception
org.apache.xml.security.utils.XMLUtils.getXalan20Version : $r5 = newarray (java.lang.Object)[0] >>>>>>>> org.apache.xml.security.utils.XMLUtils.getXalan20Version : r3 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r5)
org.apache.xml.security.utils.XMLUtils.getXalan20Version : $r5 = newarray (java.lang.Object)[0] >>>>>>>> org.apache.xml.security.utils.XMLUtils.getXalan20Version : $r7 := @caughtexception
org.apache.xml.security.utils.XMLUtils.getXalan20Version : r3 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r5) >>>>>>>> org.apache.xml.security.utils.XMLUtils.getXalan20Version : $r6 = (java.lang.String) r3
org.apache.xml.security.utils.XMLUtils.getXalan20Version : r3 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r5) >>>>>>>> org.apache.xml.security.utils.XMLUtils.getXalan20Version : $r7 := @caughtexception
org.apache.xml.security.utils.XMLUtils.getXalan20Version : $r6 = (java.lang.String) r3 >>>>>>>> org.apache.xml.security.utils.XMLUtils.getXalan20Version : return $r6
org.apache.xml.security.utils.XMLUtils.getXalan20Version : $r6 = (java.lang.String) r3 >>>>>>>> org.apache.xml.security.utils.XMLUtils.getXalan20Version : $r7 := @caughtexception
