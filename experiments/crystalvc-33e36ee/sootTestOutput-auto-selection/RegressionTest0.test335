crystal.util.SetOperations.setDifference : $r2 = new java.util.HashSet >>>>>>>> crystal.util.SetOperations.setDifference : specialinvoke $r2.<java.util.HashSet: void <init>()>()
crystal.util.SetOperations.setDifference : specialinvoke $r2.<java.util.HashSet: void <init>()>() >>>>>>>> crystal.util.SetOperations.setDifference : r3 = $r2
crystal.util.SetOperations.setDifference : r3 = $r2 >>>>>>>> crystal.util.SetOperations.setDifference : interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>(r0)
crystal.util.SetOperations.setDifference : interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>(r0) >>>>>>>> crystal.util.SetOperations.setDifference : interfaceinvoke r3.<java.util.Set: boolean removeAll(java.util.Collection)>(r1)
crystal.util.SetOperations.setDifference : interfaceinvoke r3.<java.util.Set: boolean removeAll(java.util.Collection)>(r1) >>>>>>>> crystal.util.SetOperations.setDifference : return r3
crystal.util.SetOperations.setDifference : return r3 >>>>>>>> crystal.util.SetOperations.xor : $r2 = new java.util.HashSet
crystal.util.SetOperations.xor : $r2 = new java.util.HashSet >>>>>>>> crystal.util.SetOperations.xor : specialinvoke $r2.<java.util.HashSet: void <init>()>()
crystal.util.SetOperations.xor : specialinvoke $r2.<java.util.HashSet: void <init>()>() >>>>>>>> crystal.util.SetOperations.xor : r3 = $r2
crystal.util.SetOperations.xor : r3 = $r2 >>>>>>>> crystal.util.SetOperations.xor : $r4 = staticinvoke <crystal.util.SetOperations: java.util.Set setDifference(java.util.Set,java.util.Set)>(r0, r1)
crystal.util.SetOperations.xor : $r4 = staticinvoke <crystal.util.SetOperations: java.util.Set setDifference(java.util.Set,java.util.Set)>(r0, r1) >>>>>>>> crystal.util.SetOperations.xor : interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>($r4)
crystal.util.SetOperations.xor : interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>($r4) >>>>>>>> crystal.util.SetOperations.xor : $r5 = staticinvoke <crystal.util.SetOperations: java.util.Set setDifference(java.util.Set,java.util.Set)>(r1, r0)
crystal.util.SetOperations.xor : $r5 = staticinvoke <crystal.util.SetOperations: java.util.Set setDifference(java.util.Set,java.util.Set)>(r1, r0) >>>>>>>> crystal.util.SetOperations.xor : interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>($r5)
crystal.util.SetOperations.xor : interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>($r5) >>>>>>>> crystal.util.SetOperations.xor : return r3
crystal.util.SetOperations.xor : return r3 >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : if r0 == null
crystal.util.ValidInputChecker.checkStringInSet : if r0 == null >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : $z0 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>(r0)
crystal.util.ValidInputChecker.checkStringInSet : $z0 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>(r0) >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : if $z0 != 0
crystal.util.ValidInputChecker.checkStringInSet : if $z0 != 0 >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : $r3 = new java.lang.IllegalArgumentException
crystal.util.ValidInputChecker.checkStringInSet : $r3 = new java.lang.IllegalArgumentException >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : $r2 = new java.lang.StringBuilder
crystal.util.ValidInputChecker.checkStringInSet : $r2 = new java.lang.StringBuilder >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Input: ")
crystal.util.ValidInputChecker.checkStringInSet : specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Input: ") >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
crystal.util.ValidInputChecker.checkStringInSet : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not contained in the set.")
crystal.util.ValidInputChecker.checkStringInSet : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not contained in the set.") >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.ValidInputChecker.checkStringInSet : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6)
crystal.util.ValidInputChecker.checkStringInSet : specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6) >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : throw $r3
