crystal.model.DataSource.setParent : if r1 == null >>>>>>>> crystal.model.DataSource.setParent : $r2 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>()
crystal.model.DataSource.setParent : $r2 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>() >>>>>>>> crystal.model.DataSource.setParent : $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("")
crystal.model.DataSource.setParent : $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("") >>>>>>>> crystal.model.DataSource.setParent : if $z0 == 0
crystal.model.DataSource.setParent : if $z0 == 0 >>>>>>>> crystal.model.DataSource.setParent : r0.<crystal.model.DataSource: java.lang.String _parent> = r1
crystal.model.DataSource.setParent : r0.<crystal.model.DataSource: java.lang.String _parent> = r1 >>>>>>>> crystal.model.DataSource.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
crystal.model.DataSource.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> crystal.model.DataSource.clone : r1 = (crystal.model.DataSource) $r2
crystal.model.DataSource.clone : r1 = (crystal.model.DataSource) $r2 >>>>>>>> crystal.model.DataSource.clone : $r3 = r0.<crystal.model.DataSource: crystal.model.RevisionHistory _history>
crystal.model.DataSource.clone : $r3 = r0.<crystal.model.DataSource: crystal.model.RevisionHistory _history> >>>>>>>> crystal.model.DataSource.clone : if $r3 == null
crystal.model.DataSource.clone : if $r3 == null >>>>>>>> crystal.model.DataSource.clone : $r6 = r0.<crystal.model.DataSource: crystal.model.RevisionHistory _oldHistory>
crystal.model.DataSource.clone : $r6 = r0.<crystal.model.DataSource: crystal.model.RevisionHistory _oldHistory> >>>>>>>> crystal.model.DataSource.clone : if $r6 == null
crystal.model.DataSource.clone : if $r6 == null >>>>>>>> crystal.model.DataSource.clone : return r1
crystal.model.DataSource.clone : return r1 >>>>>>>> crystal.model.DataSource.toString : $r1 = new java.lang.StringBuilder
crystal.model.DataSource.toString : $r1 = new java.lang.StringBuilder >>>>>>>> crystal.model.DataSource.toString : $r2 = virtualinvoke r0.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.model.DataSource.toString : $r2 = virtualinvoke r0.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.model.DataSource.getShortName : $r1 = r0.<crystal.model.DataSource: java.lang.String _shortName>
crystal.model.DataSource.getShortName : $r1 = r0.<crystal.model.DataSource: java.lang.String _shortName> >>>>>>>> crystal.model.DataSource.getShortName : return $r1
crystal.model.DataSource.getShortName : return $r1 >>>>>>>> crystal.model.DataSource.toString : $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2)
crystal.model.DataSource.toString : $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2) >>>>>>>> crystal.model.DataSource.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3)
crystal.model.DataSource.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3) >>>>>>>> crystal.model.DataSource.toString : $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_")
crystal.model.DataSource.toString : $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_") >>>>>>>> crystal.model.DataSource.toString : $r5 = virtualinvoke r0.<crystal.model.DataSource: crystal.model.DataSource$RepoKind getKind()>()
crystal.model.DataSource.toString : $r5 = virtualinvoke r0.<crystal.model.DataSource: crystal.model.DataSource$RepoKind getKind()>() >>>>>>>> crystal.model.DataSource.getKind : $r1 = r0.<crystal.model.DataSource: crystal.model.DataSource$RepoKind _repoKind>
crystal.model.DataSource.getKind : $r1 = r0.<crystal.model.DataSource: crystal.model.DataSource$RepoKind _repoKind> >>>>>>>> crystal.model.DataSource.getKind : return $r1
crystal.model.DataSource.getKind : return $r1 >>>>>>>> crystal.model.DataSource.toString : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5)
crystal.model.DataSource.toString : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5) >>>>>>>> crystal.model.DataSource.toString : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_")
crystal.model.DataSource.toString : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_") >>>>>>>> crystal.model.DataSource.toString : $r8 = virtualinvoke r0.<crystal.model.DataSource: java.lang.String getCloneString()>()
crystal.model.DataSource.toString : $r8 = virtualinvoke r0.<crystal.model.DataSource: java.lang.String getCloneString()>() >>>>>>>> crystal.model.DataSource.getCloneString : $r1 = r0.<crystal.model.DataSource: java.lang.String _cloneString>
crystal.model.DataSource.getCloneString : $r1 = r0.<crystal.model.DataSource: java.lang.String _cloneString> >>>>>>>> crystal.model.DataSource.getCloneString : return $r1
crystal.model.DataSource.getCloneString : return $r1 >>>>>>>> crystal.model.DataSource.toString : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
crystal.model.DataSource.toString : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> crystal.model.DataSource.toString : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.model.DataSource.toString : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.model.DataSource.toString : return $r10
crystal.model.DataSource.toString : return $r10 >>>>>>>> crystal.model.DataSource.setCompileCommand : r0.<crystal.model.DataSource: java.lang.String _compileCommand> = r1
