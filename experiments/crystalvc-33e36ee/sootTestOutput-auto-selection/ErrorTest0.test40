crystal.util.ValidInputChecker.checkValidStringInput : if r0 == null >>>>>>>> crystal.util.ValidInputChecker.checkValidStringInput : $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()
crystal.util.ValidInputChecker.checkValidStringInput : $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>() >>>>>>>> crystal.util.ValidInputChecker.checkValidStringInput : $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("")
crystal.util.ValidInputChecker.checkValidStringInput : $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("") >>>>>>>> crystal.util.ValidInputChecker.checkValidStringInput : if $z0 == 0
crystal.util.ValidInputChecker.checkValidStringInput : if $z0 == 0 >>>>>>>> crystal.util.JMultiLineToolTip.updateUI : $r1 = staticinvoke <crystal.util.MultiLineToolTipUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)>(r0)
crystal.util.JMultiLineToolTip.updateUI : $r1 = staticinvoke <crystal.util.MultiLineToolTipUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)>(r0) >>>>>>>> crystal.util.MultiLineToolTipUI.createUI : $r1 = <crystal.util.MultiLineToolTipUI: crystal.util.MultiLineToolTipUI sharedInstance>
crystal.util.MultiLineToolTipUI.createUI : $r1 = <crystal.util.MultiLineToolTipUI: crystal.util.MultiLineToolTipUI sharedInstance> >>>>>>>> crystal.util.MultiLineToolTipUI.createUI : return $r1
crystal.util.MultiLineToolTipUI.createUI : return $r1 >>>>>>>> crystal.util.JMultiLineToolTip.updateUI : virtualinvoke r0.<crystal.util.JMultiLineToolTip: void setUI(javax.swing.plaf.ComponentUI)>($r1)
crystal.util.JMultiLineToolTip.updateUI : virtualinvoke r0.<crystal.util.JMultiLineToolTip: void setUI(javax.swing.plaf.ComponentUI)>($r1) >>>>>>>> crystal.util.MultiLineToolTipUI.installUI : specialinvoke r0.<javax.swing.plaf.basic.BasicToolTipUI: void installUI(javax.swing.JComponent)>(r1)
crystal.util.MultiLineToolTipUI.installUI : specialinvoke r0.<javax.swing.plaf.basic.BasicToolTipUI: void installUI(javax.swing.JComponent)>(r1) >>>>>>>> crystal.util.MultiLineToolTipUI.installUI : $r2 = (javax.swing.JToolTip) r1
crystal.util.MultiLineToolTipUI.installUI : $r2 = (javax.swing.JToolTip) r1 >>>>>>>> crystal.util.MultiLineToolTipUI.installUI : <crystal.util.MultiLineToolTipUI: javax.swing.JToolTip tip> = $r2
crystal.util.MultiLineToolTipUI.installUI : <crystal.util.MultiLineToolTipUI: javax.swing.JToolTip tip> = $r2 >>>>>>>> crystal.util.MultiLineToolTipUI.installUI : $r3 = new javax.swing.CellRendererPane
crystal.util.MultiLineToolTipUI.installUI : $r3 = new javax.swing.CellRendererPane >>>>>>>> crystal.util.MultiLineToolTipUI.installUI : specialinvoke $r3.<javax.swing.CellRendererPane: void <init>()>()
crystal.util.MultiLineToolTipUI.installUI : specialinvoke $r3.<javax.swing.CellRendererPane: void <init>()>() >>>>>>>> crystal.util.MultiLineToolTipUI.installUI : r0.<crystal.util.MultiLineToolTipUI: javax.swing.CellRendererPane rendererPane> = $r3
crystal.util.MultiLineToolTipUI.installUI : r0.<crystal.util.MultiLineToolTipUI: javax.swing.CellRendererPane rendererPane> = $r3 >>>>>>>> crystal.util.MultiLineToolTipUI.installUI : $r4 = r0.<crystal.util.MultiLineToolTipUI: javax.swing.CellRendererPane rendererPane>
crystal.util.MultiLineToolTipUI.installUI : $r4 = r0.<crystal.util.MultiLineToolTipUI: javax.swing.CellRendererPane rendererPane> >>>>>>>> crystal.util.MultiLineToolTipUI.installUI : virtualinvoke r1.<javax.swing.JComponent: java.awt.Component add(java.awt.Component)>($r4)
crystal.util.MultiLineToolTipUI.installUI : virtualinvoke r1.<javax.swing.JComponent: java.awt.Component add(java.awt.Component)>($r4) >>>>>>>> crystal.util.MultiLineToolTipUI.uninstallUI : specialinvoke r0.<javax.swing.plaf.basic.BasicToolTipUI: void uninstallUI(javax.swing.JComponent)>(r1)
crystal.util.MultiLineToolTipUI.uninstallUI : specialinvoke r0.<javax.swing.plaf.basic.BasicToolTipUI: void uninstallUI(javax.swing.JComponent)>(r1) >>>>>>>> crystal.util.MultiLineToolTipUI.uninstallUI : $r2 = r0.<crystal.util.MultiLineToolTipUI: javax.swing.CellRendererPane rendererPane>
crystal.util.MultiLineToolTipUI.uninstallUI : $r2 = r0.<crystal.util.MultiLineToolTipUI: javax.swing.CellRendererPane rendererPane> >>>>>>>> crystal.util.MultiLineToolTipUI.uninstallUI : virtualinvoke r1.<javax.swing.JComponent: void remove(java.awt.Component)>($r2)
crystal.util.MultiLineToolTipUI.uninstallUI : virtualinvoke r1.<javax.swing.JComponent: void remove(java.awt.Component)>($r2) >>>>>>>> crystal.util.MultiLineToolTipUI.uninstallUI : r0.<crystal.util.MultiLineToolTipUI: javax.swing.CellRendererPane rendererPane> = null
crystal.util.MultiLineToolTipUI.uninstallUI : r0.<crystal.util.MultiLineToolTipUI: javax.swing.CellRendererPane rendererPane> = null >>>>>>>> crystal.client.ClientPreferences.equals : if r1 == null
crystal.client.ClientPreferences.equals : if r1 == null >>>>>>>> crystal.client.ClientPreferences.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
crystal.client.ClientPreferences.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> crystal.client.ClientPreferences.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
crystal.client.ClientPreferences.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> crystal.client.ClientPreferences.equals : if $r3 != $r4
crystal.client.ClientPreferences.equals : if $r3 != $r4 >>>>>>>> crystal.client.ClientPreferences.equals : return 0
crystal.client.ClientPreferences.equals : return 0 >>>>>>>> crystal.client.ClientPreferences.getHgPath : $r1 = r0.<crystal.client.ClientPreferences: java.lang.String _hgPath>
crystal.client.ClientPreferences.getHgPath : $r1 = r0.<crystal.client.ClientPreferences: java.lang.String _hgPath> >>>>>>>> crystal.client.ClientPreferences.getHgPath : return $r1
crystal.client.ClientPreferences.getHgPath : return $r1 >>>>>>>> crystal.client.ClientPreferences.getRefresh : $l0 = r0.<crystal.client.ClientPreferences: long _refresh>
crystal.client.ClientPreferences.getRefresh : $l0 = r0.<crystal.client.ClientPreferences: long _refresh> >>>>>>>> crystal.client.ClientPreferences.getRefresh : return $l0
crystal.client.ClientPreferences.getRefresh : return $l0 >>>>>>>> crystal.model.DataSource.setParent : if r1 == null
crystal.model.DataSource.setParent : if r1 == null >>>>>>>> crystal.model.DataSource.setParent : $r2 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>()
crystal.model.DataSource.setParent : $r2 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>() >>>>>>>> crystal.model.DataSource.setParent : $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("")
crystal.model.DataSource.setParent : $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("") >>>>>>>> crystal.model.DataSource.setParent : if $z0 == 0
crystal.model.DataSource.setParent : if $z0 == 0 >>>>>>>> crystal.model.DataSource.setParent : r0.<crystal.model.DataSource: java.lang.String _parent> = r1
crystal.model.DataSource.setParent : r0.<crystal.model.DataSource: java.lang.String _parent> = r1 >>>>>>>> crystal.model.DataSource.setCompileCommand : r0.<crystal.model.DataSource: java.lang.String _compileCommand> = r1
crystal.model.DataSource.setCompileCommand : r0.<crystal.model.DataSource: java.lang.String _compileCommand> = r1 >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : $r5 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences>
crystal.client.ClientPreferences.addProjectPreferences : $r5 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences> >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : r2 = virtualinvoke $r5.<java.util.Vector: java.util.Iterator iterator()>()
crystal.client.ClientPreferences.addProjectPreferences : r2 = virtualinvoke $r5.<java.util.Vector: java.util.Iterator iterator()>() >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
crystal.client.ClientPreferences.addProjectPreferences : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
crystal.client.ClientPreferences.addProjectPreferences : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : if $z1 != 0
crystal.client.ClientPreferences.addProjectPreferences : if $z1 != 0 >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : $r16 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences>
crystal.client.ClientPreferences.addProjectPreferences : $r16 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences> >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : virtualinvoke $r16.<java.util.Vector: boolean add(java.lang.Object)>(r1)
crystal.client.ClientPreferences.addProjectPreferences : virtualinvoke $r16.<java.util.Vector: boolean add(java.lang.Object)>(r1) >>>>>>>> crystal.client.ClientPreferences.setGitPath : r0.<crystal.client.ClientPreferences: java.lang.String _gitPath> = r1
crystal.client.ClientPreferences.setGitPath : r0.<crystal.client.ClientPreferences: java.lang.String _gitPath> = r1 >>>>>>>> crystal.client.ClientPreferences.removeProjectPreferences : $r2 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences>
crystal.client.ClientPreferences.removeProjectPreferences : $r2 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences> >>>>>>>> crystal.client.ClientPreferences.removeProjectPreferences : virtualinvoke $r2.<java.util.Vector: boolean remove(java.lang.Object)>(r1)
crystal.client.ClientPreferences.removeProjectPreferences : virtualinvoke $r2.<java.util.Vector: boolean remove(java.lang.Object)>(r1) >>>>>>>> crystal.client.ClientPreferences.clone : $r5 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
crystal.client.ClientPreferences.clone : $r5 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> crystal.client.ClientPreferences.clone : r1 = (crystal.client.ClientPreferences) $r5
crystal.client.ClientPreferences.clone : r1 = (crystal.client.ClientPreferences) $r5 >>>>>>>> crystal.client.ClientPreferences.clone : $r6 = new java.util.Vector
crystal.client.ClientPreferences.clone : $r6 = new java.util.Vector >>>>>>>> crystal.client.ClientPreferences.clone : specialinvoke $r6.<java.util.Vector: void <init>()>()
crystal.client.ClientPreferences.clone : specialinvoke $r6.<java.util.Vector: void <init>()>() >>>>>>>> crystal.client.ClientPreferences.clone : r2 = $r6
crystal.client.ClientPreferences.clone : r2 = $r6 >>>>>>>> crystal.client.ClientPreferences.clone : $r7 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences>
crystal.client.ClientPreferences.clone : $r7 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences> >>>>>>>> crystal.client.ClientPreferences.clone : r3 = virtualinvoke $r7.<java.util.Vector: java.util.Iterator iterator()>()
crystal.client.ClientPreferences.clone : r3 = virtualinvoke $r7.<java.util.Vector: java.util.Iterator iterator()>() >>>>>>>> crystal.client.ClientPreferences.clone : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
crystal.client.ClientPreferences.clone : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> crystal.client.ClientPreferences.clone : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
crystal.client.ClientPreferences.clone : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> crystal.client.ClientPreferences.clone : if $z1 != 0
crystal.client.ClientPreferences.clone : if $z1 != 0 >>>>>>>> crystal.client.ClientPreferences.clone : r1.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences> = r2
crystal.client.ClientPreferences.clone : r1.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences> = r2 >>>>>>>> crystal.client.ClientPreferences.clone : return r1
crystal.client.ClientPreferences.clone : return r1 >>>>>>>> crystal.client.ConflictClient.createAndShowGUI : r0.<crystal.client.ConflictClient: crystal.client.ClientPreferences _preferences> = r1
crystal.client.ConflictClient.createAndShowGUI : r0.<crystal.client.ConflictClient: crystal.client.ClientPreferences _preferences> = r1 >>>>>>>> crystal.client.ConflictClient.createAndShowGUI : $r10 = new javax.swing.JFrame
crystal.client.ConflictClient.createAndShowGUI : $r10 = new javax.swing.JFrame >>>>>>>> crystal.client.ConflictClient.createAndShowGUI : specialinvoke $r10.<javax.swing.JFrame: void <init>(java.lang.String)>("Crystal")
crystal.client.ConflictClient.createAndShowGUI : specialinvoke $r10.<javax.swing.JFrame: void <init>(java.lang.String)>("Crystal") >>>>>>>> crystal.client.ConflictClient.createAndShowGUI : r0.<crystal.client.ConflictClient: javax.swing.JFrame _frame> = $r10
crystal.client.ConflictClient.createAndShowGUI : r0.<crystal.client.ConflictClient: javax.swing.JFrame _frame> = $r10 >>>>>>>> crystal.client.ConflictClient.createAndShowGUI : $r11 = r0.<crystal.client.ConflictClient: javax.swing.JFrame _frame>
crystal.client.ConflictClient.createAndShowGUI : $r11 = r0.<crystal.client.ConflictClient: javax.swing.JFrame _frame> >>>>>>>> crystal.client.ConflictClient.createAndShowGUI : $r12 = new javax.swing.ImageIcon
crystal.client.ConflictClient.createAndShowGUI : $r12 = new javax.swing.ImageIcon >>>>>>>> crystal.client.ConflictClient.createAndShowGUI : $r13 = class "crystal/Constants"
crystal.client.ConflictClient.createAndShowGUI : $r13 = class "crystal/Constants" >>>>>>>> crystal.client.ConflictClient.createAndShowGUI : $r14 = virtualinvoke $r13.<java.lang.Class: java.net.URL getResource(java.lang.String)>("/crystal/client/images/crystal-ball_blue_128.jpg")
crystal.client.ConflictClient.createAndShowGUI : $r14 = virtualinvoke $r13.<java.lang.Class: java.net.URL getResource(java.lang.String)>("/crystal/client/images/crystal-ball_blue_128.jpg") >>>>>>>> crystal.client.ConflictClient.createAndShowGUI : specialinvoke $r12.<javax.swing.ImageIcon: void <init>(java.net.URL)>($r14)
