crystal.model.DataSource.setParent : if r1 == null >>>>>>>> crystal.model.DataSource.setParent : $r2 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>()
crystal.model.DataSource.setParent : $r2 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>() >>>>>>>> crystal.model.DataSource.setParent : $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("")
crystal.model.DataSource.setParent : $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("") >>>>>>>> crystal.model.DataSource.setParent : if $z0 == 0
crystal.model.DataSource.setParent : if $z0 == 0 >>>>>>>> crystal.model.DataSource.setParent : r0.<crystal.model.DataSource: java.lang.String _parent> = r1
crystal.model.DataSource.setParent : r0.<crystal.model.DataSource: java.lang.String _parent> = r1 >>>>>>>> crystal.server.GitStateChecker.getRelationship : $r3 = <crystal.model.DataSource$RepoKind: crystal.model.DataSource$RepoKind GIT>
crystal.server.GitStateChecker.getRelationship : $r3 = <crystal.model.DataSource$RepoKind: crystal.model.DataSource$RepoKind GIT> >>>>>>>> crystal.server.GitStateChecker.getRelationship : $r4 = staticinvoke <crystal.server.GitStateChecker: java.lang.String getRelationship(crystal.client.ProjectPreferences,crystal.model.DataSource,java.lang.String,crystal.model.DataSource$RepoKind)>(r0, r1, r2, $r3)
crystal.server.GitStateChecker.getRelationship : $r4 = staticinvoke <crystal.server.GitStateChecker: java.lang.String getRelationship(crystal.client.ProjectPreferences,crystal.model.DataSource,java.lang.String,crystal.model.DataSource$RepoKind)>(r0, r1, r2, $r3) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r0)
