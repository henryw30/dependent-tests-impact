crystal.server.GuidanceChecker.getCapable : if z0 == 0 >>>>>>>> crystal.server.GuidanceChecker.getCapable : $r5 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>()
crystal.server.GuidanceChecker.getCapable : if z0 == 0 >>>>>>>> crystal.server.GuidanceChecker.getCapable : $r8 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>()
crystal.server.GuidanceChecker.getCapable : $r8 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>() >>>>>>>> crystal.server.GuidanceChecker.getCapable : $r9 = <crystal.model.Relationship: java.lang.String SAME>
crystal.server.GuidanceChecker.getCapable : $r9 = <crystal.model.Relationship: java.lang.String SAME> >>>>>>>> crystal.server.GuidanceChecker.getCapable : $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9)
crystal.server.GuidanceChecker.getCapable : $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9) >>>>>>>> crystal.server.GuidanceChecker.getCapable : if $z2 != 0
crystal.server.GuidanceChecker.getCapable : if $z2 != 0 >>>>>>>> crystal.server.GuidanceChecker.getCapable : $r10 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>()
crystal.server.GuidanceChecker.getCapable : if $z2 != 0 >>>>>>>> crystal.server.GuidanceChecker.getCapable : $r14 = <crystal.model.RevisionHistory$Capable: crystal.model.RevisionHistory$Capable NOTHING>
crystal.server.GuidanceChecker.getCapable : $r14 = <crystal.model.RevisionHistory$Capable: crystal.model.RevisionHistory$Capable NOTHING> >>>>>>>> crystal.server.GuidanceChecker.getCapable : return $r14
crystal.server.GuidanceChecker.getCapable : $r10 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>() >>>>>>>> crystal.server.GuidanceChecker.getCapable : $r11 = <crystal.model.Relationship: java.lang.String AHEAD>
crystal.server.GuidanceChecker.getCapable : $r11 = <crystal.model.Relationship: java.lang.String AHEAD> >>>>>>>> crystal.server.GuidanceChecker.getCapable : $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11)
crystal.server.GuidanceChecker.getCapable : $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11) >>>>>>>> crystal.server.GuidanceChecker.getCapable : if $z3 != 0
crystal.server.GuidanceChecker.getCapable : if $z3 != 0 >>>>>>>> crystal.server.GuidanceChecker.getCapable : $r12 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>()
crystal.server.GuidanceChecker.getCapable : if $z3 != 0 >>>>>>>> crystal.server.GuidanceChecker.getCapable : $r14 = <crystal.model.RevisionHistory$Capable: crystal.model.RevisionHistory$Capable NOTHING>
crystal.server.GuidanceChecker.getCapable : $r12 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>() >>>>>>>> crystal.server.GuidanceChecker.getCapable : $r13 = <crystal.model.Relationship: java.lang.String BEHIND>
crystal.server.GuidanceChecker.getCapable : $r13 = <crystal.model.Relationship: java.lang.String BEHIND> >>>>>>>> crystal.server.GuidanceChecker.getCapable : $z4 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13)
crystal.server.GuidanceChecker.getCapable : $z4 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13) >>>>>>>> crystal.server.GuidanceChecker.getCapable : if $z4 == 0
crystal.server.GuidanceChecker.getCapable : if $z4 == 0 >>>>>>>> crystal.server.GuidanceChecker.getCapable : $r14 = <crystal.model.RevisionHistory$Capable: crystal.model.RevisionHistory$Capable NOTHING>
crystal.server.GuidanceChecker.getCapable : if $z4 == 0 >>>>>>>> crystal.server.GuidanceChecker.getCapable : $r15 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>()
crystal.server.GuidanceChecker.getCapable : $r15 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>() >>>>>>>> crystal.server.GuidanceChecker.getCapable : $r16 = <crystal.model.Relationship: java.lang.String MERGECLEAN>
crystal.server.GuidanceChecker.getCapable : $r16 = <crystal.model.Relationship: java.lang.String MERGECLEAN> >>>>>>>> crystal.server.GuidanceChecker.getCapable : $z5 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16)
crystal.server.GuidanceChecker.getCapable : $z5 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16) >>>>>>>> crystal.server.GuidanceChecker.getCapable : if $z5 != 0
crystal.server.GuidanceChecker.getCapable : if $z5 != 0 >>>>>>>> crystal.server.GuidanceChecker.getCapable : $r17 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>()
crystal.server.GuidanceChecker.getCapable : if $z5 != 0 >>>>>>>> crystal.server.GuidanceChecker.getCapable : $r19 = staticinvoke <crystal.util.SetOperations: java.util.Set setDifference(java.util.Set,java.util.Set)>(r2, r0)
crystal.server.GuidanceChecker.getCapable : $r19 = staticinvoke <crystal.util.SetOperations: java.util.Set setDifference(java.util.Set,java.util.Set)>(r2, r0) >>>>>>>> crystal.server.GuidanceChecker.getCapable : $r20 = staticinvoke <crystal.util.SetOperations: java.util.Set intersection(java.util.Set,java.util.Set)>(r1, $r19)
crystal.server.GuidanceChecker.getCapable : $r20 = staticinvoke <crystal.util.SetOperations: java.util.Set intersection(java.util.Set,java.util.Set)>(r1, $r19) >>>>>>>> crystal.server.GuidanceChecker.getCapable : $z7 = interfaceinvoke $r20.<java.util.Set: boolean isEmpty()>()
crystal.server.GuidanceChecker.getCapable : $z7 = interfaceinvoke $r20.<java.util.Set: boolean isEmpty()>() >>>>>>>> crystal.server.GuidanceChecker.getCapable : if $z7 != 0
crystal.server.GuidanceChecker.getCapable : if $z7 != 0 >>>>>>>> crystal.server.GuidanceChecker.getCapable : $r21 = <crystal.model.RevisionHistory$Capable: crystal.model.RevisionHistory$Capable MUST>
crystal.server.GuidanceChecker.getCapable : if $z7 != 0 >>>>>>>> crystal.server.GuidanceChecker.getCapable : $r22 = staticinvoke <crystal.util.SetOperations: java.util.Set setDifference(java.util.Set,java.util.Set)>(r2, r1)
crystal.server.GuidanceChecker.getCapable : $r22 = staticinvoke <crystal.util.SetOperations: java.util.Set setDifference(java.util.Set,java.util.Set)>(r2, r1) >>>>>>>> crystal.server.GuidanceChecker.getCapable : $r23 = staticinvoke <crystal.util.SetOperations: java.util.Set intersection(java.util.Set,java.util.Set)>(r0, $r22)
crystal.server.GuidanceChecker.getCapable : $r23 = staticinvoke <crystal.util.SetOperations: java.util.Set intersection(java.util.Set,java.util.Set)>(r0, $r22) >>>>>>>> crystal.server.GuidanceChecker.getCapable : $z8 = interfaceinvoke $r23.<java.util.Set: boolean isEmpty()>()
crystal.server.GuidanceChecker.getCapable : $z8 = interfaceinvoke $r23.<java.util.Set: boolean isEmpty()>() >>>>>>>> crystal.server.GuidanceChecker.getCapable : if $z8 != 0
crystal.server.GuidanceChecker.getCapable : if $z8 != 0 >>>>>>>> crystal.server.GuidanceChecker.getCapable : $r24 = <crystal.model.RevisionHistory$Capable: crystal.model.RevisionHistory$Capable CANNOT>
crystal.server.GuidanceChecker.getCapable : if $z8 != 0 >>>>>>>> crystal.server.GuidanceChecker.getCapable : $r25 = staticinvoke <crystal.util.SetOperations: java.util.Set setDifference(java.util.Set,java.util.Set)>(r0, r2)
crystal.server.GuidanceChecker.getCapable : $r25 = staticinvoke <crystal.util.SetOperations: java.util.Set setDifference(java.util.Set,java.util.Set)>(r0, r2) >>>>>>>> crystal.server.GuidanceChecker.getCapable : $z9 = interfaceinvoke $r25.<java.util.Set: boolean isEmpty()>()
crystal.server.GuidanceChecker.getCapable : $z9 = interfaceinvoke $r25.<java.util.Set: boolean isEmpty()>() >>>>>>>> crystal.server.GuidanceChecker.getCapable : if $z9 != 0
crystal.server.GuidanceChecker.getCapable : if $z9 != 0 >>>>>>>> crystal.server.GuidanceChecker.getCapable : $r26 = staticinvoke <crystal.util.SetOperations: java.util.Set setDifference(java.util.Set,java.util.Set)>(r1, r2)
crystal.server.GuidanceChecker.getCapable : if $z9 != 0 >>>>>>>> crystal.server.GuidanceChecker.getCapable : $r28 = <crystal.model.RevisionHistory$Capable: crystal.model.RevisionHistory$Capable NOTHING>
crystal.server.GuidanceChecker.getCapable : $r28 = <crystal.model.RevisionHistory$Capable: crystal.model.RevisionHistory$Capable NOTHING> >>>>>>>> crystal.server.GuidanceChecker.getCapable : return $r28
crystal.server.GuidanceChecker.getCapable : $r26 = staticinvoke <crystal.util.SetOperations: java.util.Set setDifference(java.util.Set,java.util.Set)>(r1, r2) >>>>>>>> crystal.server.GuidanceChecker.getCapable : $z10 = interfaceinvoke $r26.<java.util.Set: boolean isEmpty()>()
crystal.server.GuidanceChecker.getCapable : $z10 = interfaceinvoke $r26.<java.util.Set: boolean isEmpty()>() >>>>>>>> crystal.server.GuidanceChecker.getCapable : if $z10 != 0
crystal.server.GuidanceChecker.getCapable : if $z10 != 0 >>>>>>>> crystal.server.GuidanceChecker.getCapable : $r27 = <crystal.model.RevisionHistory$Capable: crystal.model.RevisionHistory$Capable MIGHT>
crystal.server.GuidanceChecker.getCapable : if $z10 != 0 >>>>>>>> crystal.server.GuidanceChecker.getCapable : $r28 = <crystal.model.RevisionHistory$Capable: crystal.model.RevisionHistory$Capable NOTHING>
crystal.server.GuidanceChecker.getCapable : $r27 = <crystal.model.RevisionHistory$Capable: crystal.model.RevisionHistory$Capable MIGHT> >>>>>>>> crystal.server.GuidanceChecker.getCapable : return $r27
crystal.server.GuidanceChecker.getCapable : $r24 = <crystal.model.RevisionHistory$Capable: crystal.model.RevisionHistory$Capable CANNOT> >>>>>>>> crystal.server.GuidanceChecker.getCapable : return $r24
crystal.server.GuidanceChecker.getCapable : $r21 = <crystal.model.RevisionHistory$Capable: crystal.model.RevisionHistory$Capable MUST> >>>>>>>> crystal.server.GuidanceChecker.getCapable : return $r21
crystal.server.GuidanceChecker.getCapable : $r17 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>() >>>>>>>> crystal.server.GuidanceChecker.getCapable : $r18 = <crystal.model.Relationship: java.lang.String MERGECONFLICT>
crystal.server.GuidanceChecker.getCapable : $r18 = <crystal.model.Relationship: java.lang.String MERGECONFLICT> >>>>>>>> crystal.server.GuidanceChecker.getCapable : $z6 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18)
crystal.server.GuidanceChecker.getCapable : $z6 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18) >>>>>>>> crystal.server.GuidanceChecker.getCapable : if $z6 == 0
crystal.server.GuidanceChecker.getCapable : if $z6 == 0 >>>>>>>> crystal.server.GuidanceChecker.getCapable : $r19 = staticinvoke <crystal.util.SetOperations: java.util.Set setDifference(java.util.Set,java.util.Set)>(r2, r0)
crystal.server.GuidanceChecker.getCapable : if $z6 == 0 >>>>>>>> crystal.server.GuidanceChecker.getCapable : $r28 = <crystal.model.RevisionHistory$Capable: crystal.model.RevisionHistory$Capable NOTHING>
crystal.server.GuidanceChecker.getCapable : $r5 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>() >>>>>>>> crystal.server.GuidanceChecker.getCapable : $r4 = <crystal.model.Relationship: java.lang.String SAME>
crystal.server.GuidanceChecker.getCapable : $r4 = <crystal.model.Relationship: java.lang.String SAME> >>>>>>>> crystal.server.GuidanceChecker.getCapable : $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4)
crystal.server.GuidanceChecker.getCapable : $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> crystal.server.GuidanceChecker.getCapable : if $z1 == 0
crystal.server.GuidanceChecker.getCapable : if $z1 == 0 >>>>>>>> crystal.server.GuidanceChecker.getCapable : $r6 = <crystal.model.RevisionHistory$Capable: crystal.model.RevisionHistory$Capable CANNOT>
crystal.server.GuidanceChecker.getCapable : if $z1 == 0 >>>>>>>> crystal.server.GuidanceChecker.getCapable : $r7 = <crystal.model.RevisionHistory$Capable: crystal.model.RevisionHistory$Capable MUST>
crystal.server.GuidanceChecker.getCapable : $r7 = <crystal.model.RevisionHistory$Capable: crystal.model.RevisionHistory$Capable MUST> >>>>>>>> crystal.server.GuidanceChecker.getCapable : return $r7
crystal.server.GuidanceChecker.getCapable : $r6 = <crystal.model.RevisionHistory$Capable: crystal.model.RevisionHistory$Capable CANNOT> >>>>>>>> crystal.server.GuidanceChecker.getCapable : return $r6
