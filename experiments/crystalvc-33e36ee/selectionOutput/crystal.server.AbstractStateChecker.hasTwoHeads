crystal.server.AbstractStateChecker.hasTwoHeads : $r2 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.hasTwoHeads : specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(".*^")
crystal.server.AbstractStateChecker.hasTwoHeads : specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(".*^") >>>>>>>> crystal.server.AbstractStateChecker.hasTwoHeads : $r5 = <crystal.server.AbstractLogParser$CheckpointLabels: crystal.server.AbstractLogParser$CheckpointLabels CHANGESET>
crystal.server.AbstractStateChecker.hasTwoHeads : $r5 = <crystal.server.AbstractLogParser$CheckpointLabels: crystal.server.AbstractLogParser$CheckpointLabels CHANGESET> >>>>>>>> crystal.server.AbstractStateChecker.hasTwoHeads : $r6 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5)
crystal.server.AbstractStateChecker.hasTwoHeads : $r6 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5) >>>>>>>> crystal.server.AbstractStateChecker.hasTwoHeads : $r7 = (java.lang.String) $r6
crystal.server.AbstractStateChecker.hasTwoHeads : $r7 = (java.lang.String) $r6 >>>>>>>> crystal.server.AbstractStateChecker.hasTwoHeads : $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)
crystal.server.AbstractStateChecker.hasTwoHeads : $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) >>>>>>>> crystal.server.AbstractStateChecker.hasTwoHeads : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" .*^")
crystal.server.AbstractStateChecker.hasTwoHeads : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" .*^") >>>>>>>> crystal.server.AbstractStateChecker.hasTwoHeads : $r10 = <crystal.server.AbstractLogParser$CheckpointLabels: crystal.server.AbstractLogParser$CheckpointLabels CHANGESET>
crystal.server.AbstractStateChecker.hasTwoHeads : $r10 = <crystal.server.AbstractLogParser$CheckpointLabels: crystal.server.AbstractLogParser$CheckpointLabels CHANGESET> >>>>>>>> crystal.server.AbstractStateChecker.hasTwoHeads : $r11 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10)
crystal.server.AbstractStateChecker.hasTwoHeads : $r11 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10) >>>>>>>> crystal.server.AbstractStateChecker.hasTwoHeads : $r12 = (java.lang.String) $r11
crystal.server.AbstractStateChecker.hasTwoHeads : $r12 = (java.lang.String) $r11 >>>>>>>> crystal.server.AbstractStateChecker.hasTwoHeads : $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
crystal.server.AbstractStateChecker.hasTwoHeads : $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> crystal.server.AbstractStateChecker.hasTwoHeads : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" .*")
crystal.server.AbstractStateChecker.hasTwoHeads : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" .*") >>>>>>>> crystal.server.AbstractStateChecker.hasTwoHeads : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.hasTwoHeads : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.hasTwoHeads : r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>($r15, 40)
crystal.server.AbstractStateChecker.hasTwoHeads : r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>($r15, 40) >>>>>>>> crystal.server.AbstractStateChecker.hasTwoHeads : $r16 = virtualinvoke r0.<crystal.util.RunIt$Output: java.lang.String getOutput()>()
crystal.server.AbstractStateChecker.hasTwoHeads : $r16 = virtualinvoke r0.<crystal.util.RunIt$Output: java.lang.String getOutput()>() >>>>>>>> crystal.server.AbstractStateChecker.hasTwoHeads : r4 = virtualinvoke r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r16)
crystal.server.AbstractStateChecker.hasTwoHeads : r4 = virtualinvoke r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r16) >>>>>>>> crystal.server.AbstractStateChecker.hasTwoHeads : $z0 = virtualinvoke r4.<java.util.regex.Matcher: boolean matches()>()
crystal.server.AbstractStateChecker.hasTwoHeads : $z0 = virtualinvoke r4.<java.util.regex.Matcher: boolean matches()>() >>>>>>>> crystal.server.AbstractStateChecker.hasTwoHeads : return $z0
