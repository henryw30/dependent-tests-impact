crystal.server.AbstractStateChecker.getRelationship : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r0) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r1)
crystal.server.AbstractStateChecker.getRelationship : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r1) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r4 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>(class "crystal/server/AbstractStateChecker")
crystal.server.AbstractStateChecker.getRelationship : r4 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>(class "crystal/server/AbstractStateChecker") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r22 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getRelationship : $r22 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $z0 = virtualinvoke $r22.<crystal.model.DataSource: boolean isEnabled()>()
crystal.server.AbstractStateChecker.getRelationship : $z0 = virtualinvoke $r22.<crystal.model.DataSource: boolean isEnabled()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $z0 == 0
crystal.server.AbstractStateChecker.getRelationship : if $z0 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $z1 = virtualinvoke r1.<crystal.model.DataSource: boolean isEnabled()>()
crystal.server.AbstractStateChecker.getRelationship : if $z0 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return null
crystal.server.AbstractStateChecker.getRelationship : $z1 = virtualinvoke r1.<crystal.model.DataSource: boolean isEnabled()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $z1 != 0
crystal.server.AbstractStateChecker.getRelationship : if $z1 != 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return null
crystal.server.AbstractStateChecker.getRelationship : if $z1 != 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r23 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getRelationship : $r23 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r5 = virtualinvoke r0.<crystal.client.ProjectPreferences: java.lang.String getProjectCheckoutLocation(crystal.model.DataSource)>($r23)
crystal.server.AbstractStateChecker.getRelationship : r5 = virtualinvoke r0.<crystal.client.ProjectPreferences: java.lang.String getProjectCheckoutLocation(crystal.model.DataSource)>($r23) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r6 = virtualinvoke r0.<crystal.client.ProjectPreferences: java.lang.String getProjectCheckoutLocation(crystal.model.DataSource)>(r1)
crystal.server.AbstractStateChecker.getRelationship : r6 = virtualinvoke r0.<crystal.client.ProjectPreferences: java.lang.String getProjectCheckoutLocation(crystal.model.DataSource)>(r1) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : n0 = null
crystal.server.AbstractStateChecker.getRelationship : n0 = null >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r24 = <crystal.model.DataSource$RepoKind: crystal.model.DataSource$RepoKind HG>
crystal.server.AbstractStateChecker.getRelationship : $r24 = <crystal.model.DataSource$RepoKind: crystal.model.DataSource$RepoKind HG> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $z2 = virtualinvoke r3.<crystal.model.DataSource$RepoKind: boolean equals(java.lang.Object)>($r24)
crystal.server.AbstractStateChecker.getRelationship : $z2 = virtualinvoke r3.<crystal.model.DataSource$RepoKind: boolean equals(java.lang.Object)>($r24) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $z2 == 0
crystal.server.AbstractStateChecker.getRelationship : if $z2 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r25 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>()
crystal.server.AbstractStateChecker.getRelationship : if $z2 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r27 = <crystal.model.DataSource$RepoKind: crystal.model.DataSource$RepoKind GIT>
crystal.server.AbstractStateChecker.getRelationship : $r27 = <crystal.model.DataSource$RepoKind: crystal.model.DataSource$RepoKind GIT> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $z3 = virtualinvoke r3.<crystal.model.DataSource$RepoKind: boolean equals(java.lang.Object)>($r27)
crystal.server.AbstractStateChecker.getRelationship : $z3 = virtualinvoke r3.<crystal.model.DataSource$RepoKind: boolean equals(java.lang.Object)>($r27) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $z3 == 0
crystal.server.AbstractStateChecker.getRelationship : if $z3 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r28 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>()
crystal.server.AbstractStateChecker.getRelationship : if $z3 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return null
crystal.server.AbstractStateChecker.getRelationship : $r28 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r26 = virtualinvoke $r28.<crystal.client.ClientPreferences: java.lang.String getGitPath()>()
crystal.server.AbstractStateChecker.getRelationship : r26 = virtualinvoke $r28.<crystal.client.ClientPreferences: java.lang.String getGitPath()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= $r29 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>()]
crystal.server.AbstractStateChecker.getRelationship : goto [?= $r29 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>()] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r29 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>()
crystal.server.AbstractStateChecker.getRelationship : $r29 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r7 = virtualinvoke $r29.<crystal.client.ClientPreferences: java.lang.String getTempDirectory()>()
crystal.server.AbstractStateChecker.getRelationship : r7 = virtualinvoke $r29.<crystal.client.ClientPreferences: java.lang.String getTempDirectory()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r30 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r30 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>("tempMine_")
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>("tempMine_") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r31 = staticinvoke <crystal.util.TimeUtility: java.lang.String getCurrentLSMRDateString()>()
crystal.server.AbstractStateChecker.getRelationship : $r31 = staticinvoke <crystal.util.TimeUtility: java.lang.String getCurrentLSMRDateString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31)
crystal.server.AbstractStateChecker.getRelationship : $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r8 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : r8 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r37 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r8 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r45 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r8 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r33 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getRemoteCmd()>()
crystal.server.AbstractStateChecker.getRelationship : $r33 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getRemoteCmd()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r37 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r33 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getRemoteCmd()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r45 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r33 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getRemoteCmd()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r34 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.server.AbstractStateChecker.getRelationship : $r34 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r37 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r34 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r45 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r34 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r35 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getRelationship : $r35 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r37 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r35 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r45 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r35 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r36 = virtualinvoke $r35.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.server.AbstractStateChecker.getRelationship : $r36 = virtualinvoke $r35.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r37 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r36 = virtualinvoke $r35.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r45 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r36 = virtualinvoke $r35.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : staticinvoke <crystal.server.AbstractStateChecker: void updateLocalRepositoryAndCheckCacheError(crystal.model.DataSource,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r26, r6, r7, $r33, $r34, $r36)
crystal.server.AbstractStateChecker.getRelationship : staticinvoke <crystal.server.AbstractStateChecker: void updateLocalRepositoryAndCheckCacheError(crystal.model.DataSource,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r26, r6, r7, $r33, $r34, $r36) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r37 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : staticinvoke <crystal.server.AbstractStateChecker: void updateLocalRepositoryAndCheckCacheError(crystal.model.DataSource,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r26, r6, r7, $r33, $r34, $r36) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r45 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : staticinvoke <crystal.server.AbstractStateChecker: void updateLocalRepositoryAndCheckCacheError(crystal.model.DataSource,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r26, r6, r7, $r33, $r34, $r36) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= $r54 = newarray (java.lang.String)[1]]
crystal.server.AbstractStateChecker.getRelationship : goto [?= $r54 = newarray (java.lang.String)[1]] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r54 = newarray (java.lang.String)[1]
crystal.server.AbstractStateChecker.getRelationship : $r54 = newarray (java.lang.String)[1] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r54[0] = "log"
crystal.server.AbstractStateChecker.getRelationship : $r54[0] = "log" >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r55 = $r54
crystal.server.AbstractStateChecker.getRelationship : r55 = $r54 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r10 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r26, r55, r6, 0)
crystal.server.AbstractStateChecker.getRelationship : r55 = $r54 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r56 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r11 = $r56 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r57 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r57 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r58 = <crystal.model.Relationship: java.lang.String ERROR>
crystal.server.AbstractStateChecker.getRelationship : $r58 = <crystal.model.Relationship: java.lang.String ERROR> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r59 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r58)
crystal.server.AbstractStateChecker.getRelationship : $r59 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r58) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r57.<java.lang.StringBuilder: void <init>(java.lang.String)>($r59)
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r57.<java.lang.StringBuilder: void <init>(java.lang.String)>($r59) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r60 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Couldn\'t get the log: ")
crystal.server.AbstractStateChecker.getRelationship : $r60 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Couldn\'t get the log: ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r61 = virtualinvoke r11.<java.io.IOException: java.lang.String getMessage()>()
crystal.server.AbstractStateChecker.getRelationship : $r61 = virtualinvoke r11.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61)
crystal.server.AbstractStateChecker.getRelationship : $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r63
crystal.server.AbstractStateChecker.getRelationship : r10 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r26, r55, r6, 0) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= $r64 = new crystal.model.RevisionHistory]
crystal.server.AbstractStateChecker.getRelationship : r10 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r26, r55, r6, 0) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r56 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : goto [?= $r64 = new crystal.model.RevisionHistory] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r64 = new crystal.model.RevisionHistory
crystal.server.AbstractStateChecker.getRelationship : $r64 = new crystal.model.RevisionHistory >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r65 = virtualinvoke r10.<crystal.util.RunIt$Output: java.lang.String getOutput()>()
crystal.server.AbstractStateChecker.getRelationship : $r65 = virtualinvoke r10.<crystal.util.RunIt$Output: java.lang.String getOutput()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r64.<crystal.model.RevisionHistory: void <init>(java.lang.String,crystal.model.DataSource$RepoKind)>($r65, r3)
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r64.<crystal.model.RevisionHistory: void <init>(java.lang.String,crystal.model.DataSource$RepoKind)>($r65, r3) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r66 = $r64
crystal.server.AbstractStateChecker.getRelationship : r66 = $r64 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : virtualinvoke r1.<crystal.model.DataSource: void setHistory(crystal.model.RevisionHistory)>(r66)
crystal.server.AbstractStateChecker.getRelationship : virtualinvoke r1.<crystal.model.DataSource: void setHistory(crystal.model.RevisionHistory)>(r66) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r67 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getRelationship : $r67 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r12 = virtualinvoke $r67.<crystal.model.DataSource: crystal.model.RevisionHistory getHistory()>()
crystal.server.AbstractStateChecker.getRelationship : r12 = virtualinvoke $r67.<crystal.model.DataSource: crystal.model.RevisionHistory getHistory()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if r12 != null
crystal.server.AbstractStateChecker.getRelationship : if r12 != null >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r68 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : if r12 != null >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $z4 = virtualinvoke r12.<crystal.model.RevisionHistory: boolean equals(java.lang.Object)>(r66)
crystal.server.AbstractStateChecker.getRelationship : $z4 = virtualinvoke r12.<crystal.model.RevisionHistory: boolean equals(java.lang.Object)>(r66) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $z4 == 0
crystal.server.AbstractStateChecker.getRelationship : if $z4 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r73 = <crystal.model.Relationship: java.lang.String SAME>
crystal.server.AbstractStateChecker.getRelationship : if $z4 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $z5 = virtualinvoke r12.<crystal.model.RevisionHistory: boolean superHistory(crystal.model.RevisionHistory)>(r66)
crystal.server.AbstractStateChecker.getRelationship : $z5 = virtualinvoke r12.<crystal.model.RevisionHistory: boolean superHistory(crystal.model.RevisionHistory)>(r66) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $z5 == 0
crystal.server.AbstractStateChecker.getRelationship : if $z5 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r74 = <crystal.model.Relationship: java.lang.String AHEAD>
crystal.server.AbstractStateChecker.getRelationship : if $z5 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $z6 = virtualinvoke r12.<crystal.model.RevisionHistory: boolean subHistory(crystal.model.RevisionHistory)>(r66)
crystal.server.AbstractStateChecker.getRelationship : $z6 = virtualinvoke r12.<crystal.model.RevisionHistory: boolean subHistory(crystal.model.RevisionHistory)>(r66) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $z6 == 0
crystal.server.AbstractStateChecker.getRelationship : if $z6 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r75 = <crystal.model.Relationship: java.lang.String BEHIND>
crystal.server.AbstractStateChecker.getRelationship : if $z6 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r76 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getRelationship : $r76 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $z7 = virtualinvoke $r76.<crystal.model.DataSource: boolean hasHistoryChanged()>()
crystal.server.AbstractStateChecker.getRelationship : $z7 = virtualinvoke $r76.<crystal.model.DataSource: boolean hasHistoryChanged()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $z7 != 0
crystal.server.AbstractStateChecker.getRelationship : if $z7 != 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $z8 = virtualinvoke r1.<crystal.model.DataSource: boolean hasHistoryChanged()>()
crystal.server.AbstractStateChecker.getRelationship : if $z7 != 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r77 = newarray (java.lang.String)[3]
crystal.server.AbstractStateChecker.getRelationship : $r77 = newarray (java.lang.String)[3] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r77[0] = "clone"
crystal.server.AbstractStateChecker.getRelationship : $r77[0] = "clone" >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r77[1] = r5
crystal.server.AbstractStateChecker.getRelationship : $r77[1] = r5 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r77[2] = r8
crystal.server.AbstractStateChecker.getRelationship : $r77[2] = r8 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r13 = $r77
crystal.server.AbstractStateChecker.getRelationship : r13 = $r77 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r26, r13, r7, 0)
crystal.server.AbstractStateChecker.getRelationship : r13 = $r77 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r78 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r15 = $r78 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r79 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r79 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r80 = <crystal.model.Relationship: java.lang.String ERROR>
crystal.server.AbstractStateChecker.getRelationship : $r80 = <crystal.model.Relationship: java.lang.String ERROR> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r81 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r80)
crystal.server.AbstractStateChecker.getRelationship : $r81 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r80) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r79.<java.lang.StringBuilder: void <init>(java.lang.String)>($r81)
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r79.<java.lang.StringBuilder: void <init>(java.lang.String)>($r81) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r82 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Couldn\'t make a temp clone: ")
crystal.server.AbstractStateChecker.getRelationship : $r82 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Couldn\'t make a temp clone: ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r83 = virtualinvoke r15.<java.io.IOException: java.lang.String getMessage()>()
crystal.server.AbstractStateChecker.getRelationship : $r83 = virtualinvoke r15.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r84 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r83)
crystal.server.AbstractStateChecker.getRelationship : $r84 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r83) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r85
crystal.server.AbstractStateChecker.getRelationship : staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r26, r13, r7, 0) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= $r86 = newarray (java.lang.String)[2]]
crystal.server.AbstractStateChecker.getRelationship : staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r26, r13, r7, 0) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r78 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : goto [?= $r86 = newarray (java.lang.String)[2]] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r86 = newarray (java.lang.String)[2]
crystal.server.AbstractStateChecker.getRelationship : $r86 = newarray (java.lang.String)[2] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r86[0] = "pull"
crystal.server.AbstractStateChecker.getRelationship : $r86[0] = "pull" >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r86[1] = r6
crystal.server.AbstractStateChecker.getRelationship : $r86[1] = r6 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r87 = $r86
crystal.server.AbstractStateChecker.getRelationship : r87 = $r86 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r88 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : r87 = $r86 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r93 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r16 = $r93 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r94 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r94 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r95 = <crystal.model.Relationship: java.lang.String ERROR>
crystal.server.AbstractStateChecker.getRelationship : $r95 = <crystal.model.Relationship: java.lang.String ERROR> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r96 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r95)
crystal.server.AbstractStateChecker.getRelationship : $r96 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r95) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r94.<java.lang.StringBuilder: void <init>(java.lang.String)>($r96)
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r94.<java.lang.StringBuilder: void <init>(java.lang.String)>($r96) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r97 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Couldn\'t pull into my temp clone: ")
crystal.server.AbstractStateChecker.getRelationship : $r97 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Couldn\'t pull into my temp clone: ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r98 = virtualinvoke r16.<java.io.IOException: java.lang.String getMessage()>()
crystal.server.AbstractStateChecker.getRelationship : $r98 = virtualinvoke r16.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r99 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r98)
crystal.server.AbstractStateChecker.getRelationship : $r99 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r98) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r100
crystal.server.AbstractStateChecker.getRelationship : $r88 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r89 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r7)
crystal.server.AbstractStateChecker.getRelationship : $r88 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r93 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r89 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r7) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r88.<java.lang.StringBuilder: void <init>(java.lang.String)>($r89)
crystal.server.AbstractStateChecker.getRelationship : $r89 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r7) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r93 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r88.<java.lang.StringBuilder: void <init>(java.lang.String)>($r89) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r90 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r88.<java.lang.StringBuilder: void <init>(java.lang.String)>($r89) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r93 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r90 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r90 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r93 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r92 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r26, r87, $r91, 0)
crystal.server.AbstractStateChecker.getRelationship : $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r93 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r92 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r26, r87, $r91, 0) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= $r101 = virtualinvoke r92.<crystal.util.RunIt$Output: java.lang.String getOutput()>()]
crystal.server.AbstractStateChecker.getRelationship : r92 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r26, r87, $r91, 0) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r93 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : goto [?= $r101 = virtualinvoke r92.<crystal.util.RunIt$Output: java.lang.String getOutput()>()] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r101 = virtualinvoke r92.<crystal.util.RunIt$Output: java.lang.String getOutput()>()
crystal.server.AbstractStateChecker.getRelationship : $r101 = virtualinvoke r92.<crystal.util.RunIt$Output: java.lang.String getOutput()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r102 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r102 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r102.<java.lang.StringBuilder: void <init>(java.lang.String)>("(run \'")
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r102.<java.lang.StringBuilder: void <init>(java.lang.String)>("(run \'") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r103 = virtualinvoke r3.<crystal.model.DataSource$RepoKind: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r103 = virtualinvoke r3.<crystal.model.DataSource$RepoKind: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r104 = virtualinvoke $r103.<java.lang.String: java.lang.String toLowerCase()>()
crystal.server.AbstractStateChecker.getRelationship : $r104 = virtualinvoke $r103.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r105 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r104)
crystal.server.AbstractStateChecker.getRelationship : $r105 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r104) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" heads\' to see heads, \'")
crystal.server.AbstractStateChecker.getRelationship : $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" heads\' to see heads, \'") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r107 = virtualinvoke r3.<crystal.model.DataSource$RepoKind: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r107 = virtualinvoke r3.<crystal.model.DataSource$RepoKind: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r108 = virtualinvoke $r107.<java.lang.String: java.lang.String toLowerCase()>()
crystal.server.AbstractStateChecker.getRelationship : $r108 = virtualinvoke $r107.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r109 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r108)
crystal.server.AbstractStateChecker.getRelationship : $r109 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r108) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" merge\' to merge)")
crystal.server.AbstractStateChecker.getRelationship : $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" merge\' to merge)") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $i0 = virtualinvoke $r101.<java.lang.String: int indexOf(java.lang.String)>($r111)
crystal.server.AbstractStateChecker.getRelationship : $i0 = virtualinvoke $r101.<java.lang.String: int indexOf(java.lang.String)>($r111) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $i0 < 0
crystal.server.AbstractStateChecker.getRelationship : if $i0 < 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r112 = newarray (java.lang.String)[2]
crystal.server.AbstractStateChecker.getRelationship : if $i0 < 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r148 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r148 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r148.<java.lang.StringBuilder: void <init>(java.lang.String)>("Crystal is having trouble comparing")
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r148.<java.lang.StringBuilder: void <init>(java.lang.String)>("Crystal is having trouble comparing") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r149 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)
crystal.server.AbstractStateChecker.getRelationship : $r149 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r150 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ")
crystal.server.AbstractStateChecker.getRelationship : $r150 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r151 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)
crystal.server.AbstractStateChecker.getRelationship : $r151 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r152 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
crystal.server.AbstractStateChecker.getRelationship : $r152 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r153 = virtualinvoke r92.<crystal.util.RunIt$Output: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r153 = virtualinvoke r92.<crystal.util.RunIt$Output: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r154 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r153)
crystal.server.AbstractStateChecker.getRelationship : $r154 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r153) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r155 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r155 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : virtualinvoke r4.<org.apache.log4j.Logger: void error(java.lang.Object)>($r155)
crystal.server.AbstractStateChecker.getRelationship : virtualinvoke r4.<org.apache.log4j.Logger: void error(java.lang.Object)>($r155) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r156 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r156 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r156.<java.lang.StringBuilder: void <init>(java.lang.String)>("Crystal is having trouble comparing\n")
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r156.<java.lang.StringBuilder: void <init>(java.lang.String)>("Crystal is having trouble comparing\n") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r157 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)
crystal.server.AbstractStateChecker.getRelationship : $r157 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r158 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ")
crystal.server.AbstractStateChecker.getRelationship : $r158 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r159 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)
crystal.server.AbstractStateChecker.getRelationship : $r159 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r160 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
crystal.server.AbstractStateChecker.getRelationship : $r160 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r161 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("for the repository ")
crystal.server.AbstractStateChecker.getRelationship : $r161 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("for the repository ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r162 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.server.AbstractStateChecker.getRelationship : $r162 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r163 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r162)
crystal.server.AbstractStateChecker.getRelationship : $r163 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r162) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r164 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in project ")
crystal.server.AbstractStateChecker.getRelationship : $r164 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in project ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r165 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getRelationship : $r165 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r166 = virtualinvoke $r165.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.server.AbstractStateChecker.getRelationship : $r166 = virtualinvoke $r165.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r167 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r166)
crystal.server.AbstractStateChecker.getRelationship : $r167 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r166) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r168 = virtualinvoke $r167.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".\n")
crystal.server.AbstractStateChecker.getRelationship : $r168 = virtualinvoke $r167.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".\n") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r169 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : r169 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r170 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r170 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r171 = <crystal.model.Relationship: java.lang.String ERROR>
crystal.server.AbstractStateChecker.getRelationship : $r171 = <crystal.model.Relationship: java.lang.String ERROR> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r172 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r171)
crystal.server.AbstractStateChecker.getRelationship : $r172 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r171) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r170.<java.lang.StringBuilder: void <init>(java.lang.String)>($r172)
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r170.<java.lang.StringBuilder: void <init>(java.lang.String)>($r172) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r173 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
crystal.server.AbstractStateChecker.getRelationship : $r173 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r174 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r169)
crystal.server.AbstractStateChecker.getRelationship : $r174 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r169) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r175 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r175 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r175
crystal.server.AbstractStateChecker.getRelationship : $r112 = newarray (java.lang.String)[2] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r112[0] = "merge"
crystal.server.AbstractStateChecker.getRelationship : $r112[0] = "merge" >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r112[1] = "--noninteractive"
crystal.server.AbstractStateChecker.getRelationship : $r112[1] = "--noninteractive" >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r113 = $r112
crystal.server.AbstractStateChecker.getRelationship : r113 = $r112 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r114 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : r113 = $r112 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r119 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r17 = $r119 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r120 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r120 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r121 = <crystal.model.Relationship: java.lang.String ERROR>
crystal.server.AbstractStateChecker.getRelationship : $r121 = <crystal.model.Relationship: java.lang.String ERROR> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r122 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r121)
crystal.server.AbstractStateChecker.getRelationship : $r122 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r121) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r120.<java.lang.StringBuilder: void <init>(java.lang.String)>($r122)
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r120.<java.lang.StringBuilder: void <init>(java.lang.String)>($r122) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r123 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Couldn\'t execute merge: ")
crystal.server.AbstractStateChecker.getRelationship : $r123 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Couldn\'t execute merge: ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r124 = virtualinvoke r17.<java.io.IOException: java.lang.String getMessage()>()
crystal.server.AbstractStateChecker.getRelationship : $r124 = virtualinvoke r17.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r125 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r124)
crystal.server.AbstractStateChecker.getRelationship : $r125 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r124) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r126
crystal.server.AbstractStateChecker.getRelationship : $r114 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r115 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r7)
crystal.server.AbstractStateChecker.getRelationship : $r114 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r119 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r115 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r7) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r114.<java.lang.StringBuilder: void <init>(java.lang.String)>($r115)
crystal.server.AbstractStateChecker.getRelationship : $r115 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r7) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r119 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r114.<java.lang.StringBuilder: void <init>(java.lang.String)>($r115) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r116 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r114.<java.lang.StringBuilder: void <init>(java.lang.String)>($r115) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r119 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r116 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r116 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r119 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r118 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r26, r113, $r117, 0)
crystal.server.AbstractStateChecker.getRelationship : $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r119 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r118 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r26, r113, $r117, 0) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= $r127 = virtualinvoke r118.<crystal.util.RunIt$Output: java.lang.String getOutput()>()]
crystal.server.AbstractStateChecker.getRelationship : r118 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r26, r113, $r117, 0) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r119 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : goto [?= $r127 = virtualinvoke r118.<crystal.util.RunIt$Output: java.lang.String getOutput()>()] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r127 = virtualinvoke r118.<crystal.util.RunIt$Output: java.lang.String getOutput()>()
crystal.server.AbstractStateChecker.getRelationship : $r127 = virtualinvoke r118.<crystal.util.RunIt$Output: java.lang.String getOutput()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $i1 = virtualinvoke $r127.<java.lang.String: int indexOf(java.lang.String)>("(branch merge, don\'t forget to commit)")
crystal.server.AbstractStateChecker.getRelationship : $i1 = virtualinvoke $r127.<java.lang.String: int indexOf(java.lang.String)>("(branch merge, don\'t forget to commit)") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $i1 < 0
crystal.server.AbstractStateChecker.getRelationship : if $i1 < 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r128 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getRelationship : if $i1 < 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String MERGECONFLICT>
crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String MERGECONFLICT> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= $r176 = new java.io.File]
crystal.server.AbstractStateChecker.getRelationship : goto [?= $r176 = new java.io.File] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r176 = new java.io.File
crystal.server.AbstractStateChecker.getRelationship : $r176 = new java.io.File >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r177 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r177 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r178 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r7)
crystal.server.AbstractStateChecker.getRelationship : $r178 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r7) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r177.<java.lang.StringBuilder: void <init>(java.lang.String)>($r178)
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r177.<java.lang.StringBuilder: void <init>(java.lang.String)>($r178) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r179 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)
crystal.server.AbstractStateChecker.getRelationship : $r179 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r180 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r180 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r176.<java.io.File: void <init>(java.lang.String)>($r180)
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r176.<java.io.File: void <init>(java.lang.String)>($r180) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : staticinvoke <crystal.util.RunIt: boolean deleteDirectory(java.io.File)>($r176)
crystal.server.AbstractStateChecker.getRelationship : staticinvoke <crystal.util.RunIt: boolean deleteDirectory(java.io.File)>($r176) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return r19
crystal.server.AbstractStateChecker.getRelationship : $r128 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r129 = virtualinvoke $r128.<crystal.model.DataSource: java.lang.String getCompileCommand()>()
crystal.server.AbstractStateChecker.getRelationship : r129 = virtualinvoke $r128.<crystal.model.DataSource: java.lang.String getCompileCommand()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if r129 == null
crystal.server.AbstractStateChecker.getRelationship : if r129 == null >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r130 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : if r129 == null >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String MERGECLEAN>
crystal.server.AbstractStateChecker.getRelationship : if r129 == null >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r139 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r140 = $r139 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r141 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r141 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r142 = <crystal.model.Relationship: java.lang.String ERROR>
crystal.server.AbstractStateChecker.getRelationship : $r142 = <crystal.model.Relationship: java.lang.String ERROR> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r143 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r142)
crystal.server.AbstractStateChecker.getRelationship : $r143 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r142) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r141.<java.lang.StringBuilder: void <init>(java.lang.String)>($r143)
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r141.<java.lang.StringBuilder: void <init>(java.lang.String)>($r143) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r144 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Had and IO error trying to either compile or run tests: ")
crystal.server.AbstractStateChecker.getRelationship : $r144 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Had and IO error trying to either compile or run tests: ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r145 = virtualinvoke r140.<java.io.IOException: java.lang.String getMessage()>()
crystal.server.AbstractStateChecker.getRelationship : $r145 = virtualinvoke r140.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r146 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r145)
crystal.server.AbstractStateChecker.getRelationship : $r146 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r145) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r147 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r147 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r147
crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String MERGECLEAN> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= $r176 = new java.io.File]
crystal.server.AbstractStateChecker.getRelationship : goto [?= $r176 = new java.io.File] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r176 = new java.io.File
crystal.server.AbstractStateChecker.getRelationship : $r130 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r131 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r7)
crystal.server.AbstractStateChecker.getRelationship : $r130 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r139 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r131 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r7) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r130.<java.lang.StringBuilder: void <init>(java.lang.String)>($r131)
crystal.server.AbstractStateChecker.getRelationship : $r131 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r7) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r139 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r130.<java.lang.StringBuilder: void <init>(java.lang.String)>($r131) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r132 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r130.<java.lang.StringBuilder: void <init>(java.lang.String)>($r131) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r139 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r132 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r132 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r139 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r18 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output tryCommand(java.lang.String,java.lang.String)>(r129, $r133)
crystal.server.AbstractStateChecker.getRelationship : $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r139 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r18 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output tryCommand(java.lang.String,java.lang.String)>(r129, $r133) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $i2 = virtualinvoke r18.<crystal.util.RunIt$Output: int getStatus()>()
crystal.server.AbstractStateChecker.getRelationship : r18 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output tryCommand(java.lang.String,java.lang.String)>(r129, $r133) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r139 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $i2 = virtualinvoke r18.<crystal.util.RunIt$Output: int getStatus()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $i2 == 0
crystal.server.AbstractStateChecker.getRelationship : $i2 = virtualinvoke r18.<crystal.util.RunIt$Output: int getStatus()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r139 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : if $i2 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String COMPILECONFLICT>
crystal.server.AbstractStateChecker.getRelationship : if $i2 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r134 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getRelationship : if $i2 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r139 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r134 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r20 = virtualinvoke $r134.<crystal.model.DataSource: java.lang.String getTestCommand()>()
crystal.server.AbstractStateChecker.getRelationship : $r134 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r139 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r20 = virtualinvoke $r134.<crystal.model.DataSource: java.lang.String getTestCommand()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if r20 == null
crystal.server.AbstractStateChecker.getRelationship : r20 = virtualinvoke $r134.<crystal.model.DataSource: java.lang.String getTestCommand()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r139 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : if r20 == null >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r135 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : if r20 == null >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String MERGECLEAN>
crystal.server.AbstractStateChecker.getRelationship : if r20 == null >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r139 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String MERGECLEAN> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= $r176 = new java.io.File]
crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String MERGECLEAN> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r139 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : goto [?= $r176 = new java.io.File] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r176 = new java.io.File
crystal.server.AbstractStateChecker.getRelationship : $r135 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r136 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r7)
crystal.server.AbstractStateChecker.getRelationship : $r135 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r139 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r136 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r7) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r135.<java.lang.StringBuilder: void <init>(java.lang.String)>($r136)
crystal.server.AbstractStateChecker.getRelationship : $r136 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r7) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r139 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r135.<java.lang.StringBuilder: void <init>(java.lang.String)>($r136) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r137 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r135.<java.lang.StringBuilder: void <init>(java.lang.String)>($r136) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r139 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r137 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r138 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r137 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r139 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r138 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r21 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output tryCommand(java.lang.String,java.lang.String)>(r20, $r138)
crystal.server.AbstractStateChecker.getRelationship : $r138 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r139 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r21 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output tryCommand(java.lang.String,java.lang.String)>(r20, $r138) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $i3 = virtualinvoke r21.<crystal.util.RunIt$Output: int getStatus()>()
crystal.server.AbstractStateChecker.getRelationship : r21 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output tryCommand(java.lang.String,java.lang.String)>(r20, $r138) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r139 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $i3 = virtualinvoke r21.<crystal.util.RunIt$Output: int getStatus()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $i3 == 0
crystal.server.AbstractStateChecker.getRelationship : $i3 = virtualinvoke r21.<crystal.util.RunIt$Output: int getStatus()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r139 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : if $i3 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String TESTCONFLICT>
crystal.server.AbstractStateChecker.getRelationship : if $i3 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String MERGECLEAN>
crystal.server.AbstractStateChecker.getRelationship : if $i3 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r139 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String MERGECLEAN> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= $r176 = new java.io.File]
crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String MERGECLEAN> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r139 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : goto [?= $r176 = new java.io.File] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r176 = new java.io.File
crystal.server.AbstractStateChecker.getRelationship : goto [?= $r176 = new java.io.File] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r139 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String TESTCONFLICT> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= $r176 = new java.io.File]
crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String TESTCONFLICT> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r139 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : goto [?= $r176 = new java.io.File] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r176 = new java.io.File
crystal.server.AbstractStateChecker.getRelationship : goto [?= $r176 = new java.io.File] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r139 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String COMPILECONFLICT> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= $r176 = new java.io.File]
crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String COMPILECONFLICT> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r139 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : goto [?= $r176 = new java.io.File] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r176 = new java.io.File
crystal.server.AbstractStateChecker.getRelationship : goto [?= $r176 = new java.io.File] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r139 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $z8 = virtualinvoke r1.<crystal.model.DataSource: boolean hasHistoryChanged()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $z8 != 0
crystal.server.AbstractStateChecker.getRelationship : if $z8 != 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return r2
crystal.server.AbstractStateChecker.getRelationship : if $z8 != 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r77 = newarray (java.lang.String)[3]
crystal.server.AbstractStateChecker.getRelationship : $r75 = <crystal.model.Relationship: java.lang.String BEHIND> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r75
crystal.server.AbstractStateChecker.getRelationship : $r74 = <crystal.model.Relationship: java.lang.String AHEAD> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r74
crystal.server.AbstractStateChecker.getRelationship : $r73 = <crystal.model.Relationship: java.lang.String SAME> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r73
crystal.server.AbstractStateChecker.getRelationship : $r68 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r69 = <crystal.model.Relationship: java.lang.String ERROR>
crystal.server.AbstractStateChecker.getRelationship : $r69 = <crystal.model.Relationship: java.lang.String ERROR> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r70 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r69)
crystal.server.AbstractStateChecker.getRelationship : $r70 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r69) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r68.<java.lang.StringBuilder: void <init>(java.lang.String)>($r70)
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r68.<java.lang.StringBuilder: void <init>(java.lang.String)>($r70) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r71 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Could not parse the history of your repository.")
crystal.server.AbstractStateChecker.getRelationship : $r71 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Could not parse the history of your repository.") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r72
crystal.server.AbstractStateChecker.getRelationship : r46 = $r45 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r47 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r47 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r48 = <crystal.model.Relationship: java.lang.String ERROR>
crystal.server.AbstractStateChecker.getRelationship : $r48 = <crystal.model.Relationship: java.lang.String ERROR> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r49 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r48)
crystal.server.AbstractStateChecker.getRelationship : $r49 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r48) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r47.<java.lang.StringBuilder: void <init>(java.lang.String)>($r49)
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r47.<java.lang.StringBuilder: void <init>(java.lang.String)>($r49) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r50 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
crystal.server.AbstractStateChecker.getRelationship : $r50 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r51 = virtualinvoke r46.<java.io.IOException: java.lang.String getMessage()>()
crystal.server.AbstractStateChecker.getRelationship : $r51 = virtualinvoke r46.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51)
crystal.server.AbstractStateChecker.getRelationship : $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r53
crystal.server.AbstractStateChecker.getRelationship : r9 = $r37 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r38 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r38 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r39 = <crystal.model.Relationship: java.lang.String ERROR>
crystal.server.AbstractStateChecker.getRelationship : $r39 = <crystal.model.Relationship: java.lang.String ERROR> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r40 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r39)
crystal.server.AbstractStateChecker.getRelationship : $r40 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r39) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r38.<java.lang.StringBuilder: void <init>(java.lang.String)>($r40)
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r38.<java.lang.StringBuilder: void <init>(java.lang.String)>($r40) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
crystal.server.AbstractStateChecker.getRelationship : $r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r42 = virtualinvoke r9.<crystal.server.AbstractStateChecker$OperationException: java.lang.String getMessage()>()
crystal.server.AbstractStateChecker.getRelationship : $r42 = virtualinvoke r9.<crystal.server.AbstractStateChecker$OperationException: java.lang.String getMessage()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42)
crystal.server.AbstractStateChecker.getRelationship : $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r44
crystal.server.AbstractStateChecker.getRelationship : $r25 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r26 = virtualinvoke $r25.<crystal.client.ClientPreferences: java.lang.String getHgPath()>()
crystal.server.AbstractStateChecker.getRelationship : r26 = virtualinvoke $r25.<crystal.client.ClientPreferences: java.lang.String getHgPath()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= $r29 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>()]
crystal.server.AbstractStateChecker.getRelationship : goto [?= $r29 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>()] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r29 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>()
