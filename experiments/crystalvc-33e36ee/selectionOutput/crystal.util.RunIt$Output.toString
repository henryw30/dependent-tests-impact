crystal.util.RunIt$Output.toString : $r1 = new java.lang.StringBuilder >>>>>>>> crystal.util.RunIt$Output.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("Exit status: ")
crystal.util.RunIt$Output.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("Exit status: ") >>>>>>>> crystal.util.RunIt$Output.toString : $i0 = r0.<crystal.util.RunIt$Output: int _status>
crystal.util.RunIt$Output.toString : $i0 = r0.<crystal.util.RunIt$Output: int _status> >>>>>>>> crystal.util.RunIt$Output.toString : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)
crystal.util.RunIt$Output.toString : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0) >>>>>>>> crystal.util.RunIt$Output.toString : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
crystal.util.RunIt$Output.toString : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n") >>>>>>>> crystal.util.RunIt$Output.toString : r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.RunIt$Output.toString : r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.RunIt$Output.toString : $r5 = r0.<crystal.util.RunIt$Output: java.lang.String _error>
crystal.util.RunIt$Output.toString : $r5 = r0.<crystal.util.RunIt$Output: java.lang.String _error> >>>>>>>> crystal.util.RunIt$Output.toString : $i1 = virtualinvoke $r5.<java.lang.String: int length()>()
crystal.util.RunIt$Output.toString : $i1 = virtualinvoke $r5.<java.lang.String: int length()>() >>>>>>>> crystal.util.RunIt$Output.toString : if $i1 <= 0
crystal.util.RunIt$Output.toString : if $i1 <= 0 >>>>>>>> crystal.util.RunIt$Output.toString : $r6 = new java.lang.StringBuilder
crystal.util.RunIt$Output.toString : if $i1 <= 0 >>>>>>>> crystal.util.RunIt$Output.toString : $r18 = new java.lang.StringBuilder
crystal.util.RunIt$Output.toString : $r18 = new java.lang.StringBuilder >>>>>>>> crystal.util.RunIt$Output.toString : $r19 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2)
crystal.util.RunIt$Output.toString : $r19 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2) >>>>>>>> crystal.util.RunIt$Output.toString : specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>($r19)
crystal.util.RunIt$Output.toString : specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>($r19) >>>>>>>> crystal.util.RunIt$Output.toString : $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*****-START-OUTPUT-*****\n")
crystal.util.RunIt$Output.toString : $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*****-START-OUTPUT-*****\n") >>>>>>>> crystal.util.RunIt$Output.toString : r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.RunIt$Output.toString : r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.RunIt$Output.toString : $r22 = new java.lang.StringBuilder
crystal.util.RunIt$Output.toString : $r22 = new java.lang.StringBuilder >>>>>>>> crystal.util.RunIt$Output.toString : $r23 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r21)
crystal.util.RunIt$Output.toString : $r23 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r21) >>>>>>>> crystal.util.RunIt$Output.toString : specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>($r23)
crystal.util.RunIt$Output.toString : specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>($r23) >>>>>>>> crystal.util.RunIt$Output.toString : $r24 = r0.<crystal.util.RunIt$Output: java.lang.String _output>
crystal.util.RunIt$Output.toString : $r24 = r0.<crystal.util.RunIt$Output: java.lang.String _output> >>>>>>>> crystal.util.RunIt$Output.toString : $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24)
crystal.util.RunIt$Output.toString : $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24) >>>>>>>> crystal.util.RunIt$Output.toString : r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.RunIt$Output.toString : r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.RunIt$Output.toString : $r27 = new java.lang.StringBuilder
crystal.util.RunIt$Output.toString : $r27 = new java.lang.StringBuilder >>>>>>>> crystal.util.RunIt$Output.toString : $r28 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r26)
crystal.util.RunIt$Output.toString : $r28 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r26) >>>>>>>> crystal.util.RunIt$Output.toString : specialinvoke $r27.<java.lang.StringBuilder: void <init>(java.lang.String)>($r28)
crystal.util.RunIt$Output.toString : specialinvoke $r27.<java.lang.StringBuilder: void <init>(java.lang.String)>($r28) >>>>>>>> crystal.util.RunIt$Output.toString : $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*****-END-OUTPUT-*****\n")
crystal.util.RunIt$Output.toString : $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*****-END-OUTPUT-*****\n") >>>>>>>> crystal.util.RunIt$Output.toString : r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.RunIt$Output.toString : r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.RunIt$Output.toString : return r30
crystal.util.RunIt$Output.toString : $r6 = new java.lang.StringBuilder >>>>>>>> crystal.util.RunIt$Output.toString : $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2)
crystal.util.RunIt$Output.toString : $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2) >>>>>>>> crystal.util.RunIt$Output.toString : specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7)
crystal.util.RunIt$Output.toString : specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7) >>>>>>>> crystal.util.RunIt$Output.toString : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*****-START-ERROR-*****\n")
crystal.util.RunIt$Output.toString : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*****-START-ERROR-*****\n") >>>>>>>> crystal.util.RunIt$Output.toString : r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.RunIt$Output.toString : r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.RunIt$Output.toString : $r10 = new java.lang.StringBuilder
crystal.util.RunIt$Output.toString : $r10 = new java.lang.StringBuilder >>>>>>>> crystal.util.RunIt$Output.toString : $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r9)
crystal.util.RunIt$Output.toString : $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r9) >>>>>>>> crystal.util.RunIt$Output.toString : specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>($r11)
crystal.util.RunIt$Output.toString : specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>($r11) >>>>>>>> crystal.util.RunIt$Output.toString : $r12 = r0.<crystal.util.RunIt$Output: java.lang.String _error>
crystal.util.RunIt$Output.toString : $r12 = r0.<crystal.util.RunIt$Output: java.lang.String _error> >>>>>>>> crystal.util.RunIt$Output.toString : $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
crystal.util.RunIt$Output.toString : $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> crystal.util.RunIt$Output.toString : r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.RunIt$Output.toString : r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.RunIt$Output.toString : $r15 = new java.lang.StringBuilder
crystal.util.RunIt$Output.toString : $r15 = new java.lang.StringBuilder >>>>>>>> crystal.util.RunIt$Output.toString : $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r14)
crystal.util.RunIt$Output.toString : $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r14) >>>>>>>> crystal.util.RunIt$Output.toString : specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>($r16)
crystal.util.RunIt$Output.toString : specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>($r16) >>>>>>>> crystal.util.RunIt$Output.toString : $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*****-END-ERROR-*****\n")
crystal.util.RunIt$Output.toString : $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*****-END-ERROR-*****\n") >>>>>>>> crystal.util.RunIt$Output.toString : r2 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.RunIt$Output.toString : r2 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.RunIt$Output.toString : $r18 = new java.lang.StringBuilder
