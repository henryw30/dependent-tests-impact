crystal.model.RevisionHistory.getCommitters : staticinvoke <crystal.util.ValidInputChecker: void checkNullInput(java.lang.Object)>(r1) >>>>>>>> crystal.model.RevisionHistory.getCommitters : $r6 = new java.util.HashSet
crystal.model.RevisionHistory.getCommitters : $r6 = new java.util.HashSet >>>>>>>> crystal.model.RevisionHistory.getCommitters : specialinvoke $r6.<java.util.HashSet: void <init>()>()
crystal.model.RevisionHistory.getCommitters : specialinvoke $r6.<java.util.HashSet: void <init>()>() >>>>>>>> crystal.model.RevisionHistory.getCommitters : r2 = $r6
crystal.model.RevisionHistory.getCommitters : r2 = $r6 >>>>>>>> crystal.model.RevisionHistory.getCommitters : $r7 = r0.<crystal.model.RevisionHistory: java.util.HashMap _changesets>
crystal.model.RevisionHistory.getCommitters : $r7 = r0.<crystal.model.RevisionHistory: java.util.HashMap _changesets> >>>>>>>> crystal.model.RevisionHistory.getCommitters : $r8 = virtualinvoke $r7.<java.util.HashMap: java.util.Set keySet()>()
crystal.model.RevisionHistory.getCommitters : $r8 = virtualinvoke $r7.<java.util.HashMap: java.util.Set keySet()>() >>>>>>>> crystal.model.RevisionHistory.getCommitters : $r9 = r1.<crystal.model.RevisionHistory: java.util.HashMap _changesets>
crystal.model.RevisionHistory.getCommitters : $r9 = r1.<crystal.model.RevisionHistory: java.util.HashMap _changesets> >>>>>>>> crystal.model.RevisionHistory.getCommitters : $r10 = virtualinvoke $r9.<java.util.HashMap: java.util.Set keySet()>()
crystal.model.RevisionHistory.getCommitters : $r10 = virtualinvoke $r9.<java.util.HashMap: java.util.Set keySet()>() >>>>>>>> crystal.model.RevisionHistory.getCommitters : r11 = staticinvoke <crystal.util.SetOperations: java.util.Set xor(java.util.Set,java.util.Set)>($r8, $r10)
crystal.model.RevisionHistory.getCommitters : r11 = staticinvoke <crystal.util.SetOperations: java.util.Set xor(java.util.Set,java.util.Set)>($r8, $r10) >>>>>>>> crystal.model.RevisionHistory.getCommitters : $r12 = new java.util.HashSet
crystal.model.RevisionHistory.getCommitters : $r12 = new java.util.HashSet >>>>>>>> crystal.model.RevisionHistory.getCommitters : specialinvoke $r12.<java.util.HashSet: void <init>()>()
crystal.model.RevisionHistory.getCommitters : specialinvoke $r12.<java.util.HashSet: void <init>()>() >>>>>>>> crystal.model.RevisionHistory.getCommitters : r3 = $r12
crystal.model.RevisionHistory.getCommitters : r3 = $r12 >>>>>>>> crystal.model.RevisionHistory.getCommitters : r4 = interfaceinvoke r11.<java.util.Set: java.util.Iterator iterator()>()
crystal.model.RevisionHistory.getCommitters : r4 = interfaceinvoke r11.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> crystal.model.RevisionHistory.getCommitters : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
crystal.model.RevisionHistory.getCommitters : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> crystal.model.RevisionHistory.getCommitters : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
crystal.model.RevisionHistory.getCommitters : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> crystal.model.RevisionHistory.getCommitters : if $z2 != 0
crystal.model.RevisionHistory.getCommitters : if $z2 != 0 >>>>>>>> crystal.model.RevisionHistory.getCommitters : $r22 = staticinvoke <crystal.server.GuidanceChecker: java.lang.String getCommitters(java.util.Set)>(r3)
crystal.model.RevisionHistory.getCommitters : if $z2 != 0 >>>>>>>> crystal.model.RevisionHistory.getCommitters : $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
crystal.model.RevisionHistory.getCommitters : $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> crystal.model.RevisionHistory.getCommitters : r5 = (java.lang.String) $r13
crystal.model.RevisionHistory.getCommitters : r5 = (java.lang.String) $r13 >>>>>>>> crystal.model.RevisionHistory.getCommitters : $r14 = r0.<crystal.model.RevisionHistory: java.util.HashMap _changesets>
crystal.model.RevisionHistory.getCommitters : $r14 = r0.<crystal.model.RevisionHistory: java.util.HashMap _changesets> >>>>>>>> crystal.model.RevisionHistory.getCommitters : $r15 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5)
crystal.model.RevisionHistory.getCommitters : $r15 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5) >>>>>>>> crystal.model.RevisionHistory.getCommitters : if $r15 == null
crystal.model.RevisionHistory.getCommitters : if $r15 == null >>>>>>>> crystal.model.RevisionHistory.getCommitters : $r16 = r0.<crystal.model.RevisionHistory: java.util.HashMap _changesets>
crystal.model.RevisionHistory.getCommitters : if $r15 == null >>>>>>>> crystal.model.RevisionHistory.getCommitters : $r19 = r1.<crystal.model.RevisionHistory: java.util.HashMap _changesets>
crystal.model.RevisionHistory.getCommitters : $r19 = r1.<crystal.model.RevisionHistory: java.util.HashMap _changesets> >>>>>>>> crystal.model.RevisionHistory.getCommitters : $r20 = virtualinvoke $r19.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5)
crystal.model.RevisionHistory.getCommitters : $r20 = virtualinvoke $r19.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5) >>>>>>>> crystal.model.RevisionHistory.getCommitters : $r21 = (crystal.server.AbstractLogParser$Checkpoint) $r20
crystal.model.RevisionHistory.getCommitters : $r21 = (crystal.server.AbstractLogParser$Checkpoint) $r20 >>>>>>>> crystal.model.RevisionHistory.getCommitters : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r21)
crystal.model.RevisionHistory.getCommitters : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r21) >>>>>>>> crystal.model.RevisionHistory.getCommitters : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
crystal.model.RevisionHistory.getCommitters : $r16 = r0.<crystal.model.RevisionHistory: java.util.HashMap _changesets> >>>>>>>> crystal.model.RevisionHistory.getCommitters : $r17 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5)
crystal.model.RevisionHistory.getCommitters : $r17 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5) >>>>>>>> crystal.model.RevisionHistory.getCommitters : $r18 = (crystal.server.AbstractLogParser$Checkpoint) $r17
crystal.model.RevisionHistory.getCommitters : $r18 = (crystal.server.AbstractLogParser$Checkpoint) $r17 >>>>>>>> crystal.model.RevisionHistory.getCommitters : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r18)
crystal.model.RevisionHistory.getCommitters : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r18) >>>>>>>> crystal.model.RevisionHistory.getCommitters : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
crystal.model.RevisionHistory.getCommitters : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> crystal.model.RevisionHistory.getCommitters : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
crystal.model.RevisionHistory.getCommitters : $r22 = staticinvoke <crystal.server.GuidanceChecker: java.lang.String getCommitters(java.util.Set)>(r3) >>>>>>>> crystal.model.RevisionHistory.getCommitters : return $r22
