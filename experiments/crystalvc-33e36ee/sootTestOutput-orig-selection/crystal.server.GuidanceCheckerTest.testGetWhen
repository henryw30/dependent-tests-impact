crystal.server.GuidanceChecker.getWhen : staticinvoke <crystal.util.ValidInputChecker: void checkNullInput(java.lang.Object)>(r3) >>>>>>>> crystal.util.ValidInputChecker.checkNullInput : if r0 != null
crystal.util.ValidInputChecker.checkNullInput : if r0 != null >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r5 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>()
crystal.server.GuidanceChecker.getWhen : $r5 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>() >>>>>>>> crystal.model.Relationship.getName : $r1 = r0.<crystal.model.Relationship: java.lang.String _name>
crystal.model.Relationship.getName : $r1 = r0.<crystal.model.Relationship: java.lang.String _name> >>>>>>>> crystal.model.Relationship.getName : return $r1
crystal.model.Relationship.getName : return $r1 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r4 = <crystal.model.Relationship: java.lang.String SAME>
crystal.server.GuidanceChecker.getWhen : $r4 = <crystal.model.Relationship: java.lang.String SAME> >>>>>>>> crystal.server.GuidanceChecker.getWhen : $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4)
crystal.server.GuidanceChecker.getWhen : $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> crystal.server.GuidanceChecker.getWhen : if $z0 != 0
crystal.server.GuidanceChecker.getWhen : if $z0 != 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r10 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When NOTHING>
crystal.server.GuidanceChecker.getWhen : $r10 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When NOTHING> >>>>>>>> crystal.server.GuidanceChecker.getWhen : return $r10
crystal.server.GuidanceChecker.getWhen : return $r10 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r6 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>()
crystal.server.GuidanceChecker.getWhen : $r6 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>() >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r7 = <crystal.model.Relationship: java.lang.String MERGECLEAN>
crystal.server.GuidanceChecker.getWhen : $r7 = <crystal.model.Relationship: java.lang.String MERGECLEAN> >>>>>>>> crystal.server.GuidanceChecker.getWhen : $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7)
crystal.server.GuidanceChecker.getWhen : $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7) >>>>>>>> crystal.server.GuidanceChecker.getWhen : if $z1 != 0
crystal.server.GuidanceChecker.getWhen : if $z1 != 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r8 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>()
crystal.server.GuidanceChecker.getWhen : $r8 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>() >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r9 = <crystal.model.Relationship: java.lang.String MERGECONFLICT>
crystal.server.GuidanceChecker.getWhen : $r9 = <crystal.model.Relationship: java.lang.String MERGECONFLICT> >>>>>>>> crystal.server.GuidanceChecker.getWhen : $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9)
crystal.server.GuidanceChecker.getWhen : $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9) >>>>>>>> crystal.server.GuidanceChecker.getWhen : if $z2 == 0
crystal.server.GuidanceChecker.getWhen : if $z2 == 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r11 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>()
crystal.server.GuidanceChecker.getWhen : $r11 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>() >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r12 = <crystal.model.Relationship: java.lang.String BEHIND>
crystal.server.GuidanceChecker.getWhen : $r12 = <crystal.model.Relationship: java.lang.String BEHIND> >>>>>>>> crystal.server.GuidanceChecker.getWhen : $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12)
crystal.server.GuidanceChecker.getWhen : $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12) >>>>>>>> crystal.server.GuidanceChecker.getWhen : if $z3 == 0
crystal.server.GuidanceChecker.getWhen : if $z3 == 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r13 = staticinvoke <crystal.util.SetOperations: java.util.Set setDifference(java.util.Set,java.util.Set)>(r2, r0)
crystal.server.GuidanceChecker.getWhen : $r13 = staticinvoke <crystal.util.SetOperations: java.util.Set setDifference(java.util.Set,java.util.Set)>(r2, r0) >>>>>>>> crystal.util.SetOperations.setDifference : $r2 = new java.util.HashSet
crystal.util.SetOperations.setDifference : $r2 = new java.util.HashSet >>>>>>>> crystal.util.SetOperations.setDifference : specialinvoke $r2.<java.util.HashSet: void <init>()>()
crystal.util.SetOperations.setDifference : specialinvoke $r2.<java.util.HashSet: void <init>()>() >>>>>>>> crystal.util.SetOperations.setDifference : r3 = $r2
crystal.util.SetOperations.setDifference : r3 = $r2 >>>>>>>> crystal.util.SetOperations.setDifference : interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>(r0)
crystal.util.SetOperations.setDifference : interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>(r0) >>>>>>>> crystal.util.SetOperations.setDifference : interfaceinvoke r3.<java.util.Set: boolean removeAll(java.util.Collection)>(r1)
crystal.util.SetOperations.setDifference : interfaceinvoke r3.<java.util.Set: boolean removeAll(java.util.Collection)>(r1) >>>>>>>> crystal.util.SetOperations.setDifference : return r3
crystal.util.SetOperations.setDifference : return r3 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r14 = staticinvoke <crystal.util.SetOperations: java.util.Set intersection(java.util.Set,java.util.Set)>(r1, $r13)
crystal.server.GuidanceChecker.getWhen : $r14 = staticinvoke <crystal.util.SetOperations: java.util.Set intersection(java.util.Set,java.util.Set)>(r1, $r13) >>>>>>>> crystal.util.SetOperations.intersection : staticinvoke <crystal.util.ValidInputChecker: void checkNullInput(java.lang.Object)>(r0)
crystal.util.SetOperations.intersection : staticinvoke <crystal.util.ValidInputChecker: void checkNullInput(java.lang.Object)>(r0) >>>>>>>> crystal.util.SetOperations.intersection : staticinvoke <crystal.util.ValidInputChecker: void checkNullInput(java.lang.Object)>(r1)
crystal.util.SetOperations.intersection : staticinvoke <crystal.util.ValidInputChecker: void checkNullInput(java.lang.Object)>(r1) >>>>>>>> crystal.util.SetOperations.intersection : $r6 = new java.util.HashSet
crystal.util.SetOperations.intersection : $r6 = new java.util.HashSet >>>>>>>> crystal.util.SetOperations.intersection : specialinvoke $r6.<java.util.HashSet: void <init>()>()
crystal.util.SetOperations.intersection : specialinvoke $r6.<java.util.HashSet: void <init>()>() >>>>>>>> crystal.util.SetOperations.intersection : r2 = $r6
crystal.util.SetOperations.intersection : r2 = $r6 >>>>>>>> crystal.util.SetOperations.intersection : interfaceinvoke r2.<java.util.Set: boolean addAll(java.util.Collection)>(r0)
crystal.util.SetOperations.intersection : interfaceinvoke r2.<java.util.Set: boolean addAll(java.util.Collection)>(r0) >>>>>>>> crystal.util.SetOperations.intersection : interfaceinvoke r2.<java.util.Set: boolean addAll(java.util.Collection)>(r1)
crystal.util.SetOperations.intersection : interfaceinvoke r2.<java.util.Set: boolean addAll(java.util.Collection)>(r1) >>>>>>>> crystal.util.SetOperations.intersection : $r7 = new java.util.HashSet
crystal.util.SetOperations.intersection : $r7 = new java.util.HashSet >>>>>>>> crystal.util.SetOperations.intersection : specialinvoke $r7.<java.util.HashSet: void <init>()>()
crystal.util.SetOperations.intersection : specialinvoke $r7.<java.util.HashSet: void <init>()>() >>>>>>>> crystal.util.SetOperations.intersection : r3 = $r7
crystal.util.SetOperations.intersection : r3 = $r7 >>>>>>>> crystal.util.SetOperations.intersection : r4 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
crystal.util.SetOperations.intersection : r4 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> crystal.util.SetOperations.intersection : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
crystal.util.SetOperations.intersection : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> crystal.util.SetOperations.intersection : if $z2 == 0
crystal.util.SetOperations.intersection : if $z2 == 0 >>>>>>>> crystal.util.SetOperations.intersection : $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
crystal.util.SetOperations.intersection : $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> crystal.util.SetOperations.intersection : r5 = (java.lang.String) $r8
crystal.util.SetOperations.intersection : r5 = (java.lang.String) $r8 >>>>>>>> crystal.util.SetOperations.intersection : $z3 = interfaceinvoke r0.<java.util.Set: boolean contains(java.lang.Object)>(r5)
crystal.util.SetOperations.intersection : $z3 = interfaceinvoke r0.<java.util.Set: boolean contains(java.lang.Object)>(r5) >>>>>>>> crystal.util.SetOperations.intersection : if $z3 == 0
crystal.util.SetOperations.intersection : if $z3 == 0 >>>>>>>> crystal.util.SetOperations.intersection : $z4 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>(r5)
crystal.util.SetOperations.intersection : $z4 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>(r5) >>>>>>>> crystal.util.SetOperations.intersection : if $z4 == 0
crystal.util.SetOperations.intersection : if $z4 == 0 >>>>>>>> crystal.util.SetOperations.intersection : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r5)
crystal.util.SetOperations.intersection : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r5) >>>>>>>> crystal.util.SetOperations.intersection : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
crystal.util.SetOperations.intersection : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> crystal.util.SetOperations.intersection : return r3
crystal.util.SetOperations.intersection : return r3 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $z4 = interfaceinvoke $r14.<java.util.Set: boolean isEmpty()>()
crystal.server.GuidanceChecker.getWhen : $z4 = interfaceinvoke $r14.<java.util.Set: boolean isEmpty()>() >>>>>>>> crystal.server.GuidanceChecker.getWhen : if $z4 != 0
crystal.server.GuidanceChecker.getWhen : if $z4 != 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r15 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When NOW>
crystal.server.GuidanceChecker.getWhen : $r15 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When NOW> >>>>>>>> crystal.server.GuidanceChecker.getWhen : return $r15
crystal.server.GuidanceChecker.getWhen : return $r15 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r17 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>()
crystal.server.GuidanceChecker.getWhen : $r17 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>() >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r18 = <crystal.model.Relationship: java.lang.String AHEAD>
crystal.server.GuidanceChecker.getWhen : $r18 = <crystal.model.Relationship: java.lang.String AHEAD> >>>>>>>> crystal.server.GuidanceChecker.getWhen : $z5 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18)
crystal.server.GuidanceChecker.getWhen : $z5 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18) >>>>>>>> crystal.server.GuidanceChecker.getWhen : if $z5 == 0
crystal.server.GuidanceChecker.getWhen : if $z5 == 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r19 = staticinvoke <crystal.util.SetOperations: java.util.Set setDifference(java.util.Set,java.util.Set)>(r0, r2)
crystal.server.GuidanceChecker.getWhen : $r19 = staticinvoke <crystal.util.SetOperations: java.util.Set setDifference(java.util.Set,java.util.Set)>(r0, r2) >>>>>>>> crystal.server.GuidanceChecker.getWhen : $z6 = interfaceinvoke $r19.<java.util.Set: boolean isEmpty()>()
crystal.server.GuidanceChecker.getWhen : $z6 = interfaceinvoke $r19.<java.util.Set: boolean isEmpty()>() >>>>>>>> crystal.server.GuidanceChecker.getWhen : if $z6 != 0
crystal.server.GuidanceChecker.getWhen : if $z6 != 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r20 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When NOW>
crystal.server.GuidanceChecker.getWhen : $r20 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When NOW> >>>>>>>> crystal.server.GuidanceChecker.getWhen : return $r20
