crystal.client.PreferencesGUIEditorFrame.getPreferencesGUIEditorFrame : $r0 = <crystal.client.PreferencesGUIEditorFrame: crystal.client.PreferencesGUIEditorFrame editorFrame> >>>>>>>> crystal.client.PreferencesGUIEditorFrame.getPreferencesGUIEditorFrame : if $r0 == null
crystal.client.PreferencesGUIEditorFrame.getPreferencesGUIEditorFrame : if $r0 == null >>>>>>>> crystal.client.PreferencesGUIEditorFrame.getPreferencesGUIEditorFrame : $r2 = <crystal.client.PreferencesGUIEditorFrame: crystal.client.PreferencesGUIEditorFrame editorFrame>
crystal.client.PreferencesGUIEditorFrame.getPreferencesGUIEditorFrame : $r2 = <crystal.client.PreferencesGUIEditorFrame: crystal.client.PreferencesGUIEditorFrame editorFrame> >>>>>>>> crystal.client.PreferencesGUIEditorFrame.getPreferencesGUIEditorFrame : return $r2
crystal.client.PreferencesGUIEditorFrame.getPreferencesGUIEditorFrame : return $r2 >>>>>>>> crystal.client.PreferencesGUIEditorFrame.getPreferencesGUIEditorFrame : $r1 = <crystal.client.PreferencesGUIEditorFrame: crystal.client.PreferencesGUIEditorFrame editorFrame>
crystal.client.PreferencesGUIEditorFrame.getPreferencesGUIEditorFrame : $r1 = <crystal.client.PreferencesGUIEditorFrame: crystal.client.PreferencesGUIEditorFrame editorFrame> >>>>>>>> crystal.client.PreferencesGUIEditorFrame.getPreferencesGUIEditorFrame : if $r1 != null
crystal.client.PreferencesGUIEditorFrame.getPreferencesGUIEditorFrame : if $r1 != null >>>>>>>> crystal.client.PreferencesGUIEditorFrame.getPreferencesGUIEditorFrame : $r2 = new crystal.client.PreferencesGUIEditorFrame
crystal.client.PreferencesGUIEditorFrame.getPreferencesGUIEditorFrame : $r2 = new crystal.client.PreferencesGUIEditorFrame >>>>>>>> crystal.client.PreferencesGUIEditorFrame.getPreferencesGUIEditorFrame : specialinvoke $r2.<crystal.client.PreferencesGUIEditorFrame: void <init>(crystal.client.ClientPreferences)>(r0)
crystal.client.PreferencesGUIEditorFrame.getPreferencesGUIEditorFrame : specialinvoke $r2.<crystal.client.PreferencesGUIEditorFrame: void <init>(crystal.client.ClientPreferences)>(r0) >>>>>>>> crystal.client.ClientPreferences.clone : $r5 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
crystal.client.ClientPreferences.clone : $r5 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> crystal.client.ClientPreferences.clone : r1 = (crystal.client.ClientPreferences) $r5
crystal.client.ClientPreferences.clone : r1 = (crystal.client.ClientPreferences) $r5 >>>>>>>> crystal.client.ClientPreferences.clone : $r6 = new java.util.Vector
crystal.client.ClientPreferences.clone : $r6 = new java.util.Vector >>>>>>>> crystal.client.ClientPreferences.clone : specialinvoke $r6.<java.util.Vector: void <init>()>()
crystal.client.ClientPreferences.clone : specialinvoke $r6.<java.util.Vector: void <init>()>() >>>>>>>> crystal.client.ClientPreferences.clone : r2 = $r6
crystal.client.ClientPreferences.clone : r2 = $r6 >>>>>>>> crystal.client.ClientPreferences.clone : $r7 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences>
crystal.client.ClientPreferences.clone : $r7 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences> >>>>>>>> crystal.client.ClientPreferences.clone : r3 = virtualinvoke $r7.<java.util.Vector: java.util.Iterator iterator()>()
crystal.client.ClientPreferences.clone : r3 = virtualinvoke $r7.<java.util.Vector: java.util.Iterator iterator()>() >>>>>>>> crystal.client.ClientPreferences.clone : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
crystal.client.ClientPreferences.clone : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> crystal.client.ClientPreferences.clone : if $z0 == 0
crystal.client.ClientPreferences.clone : if $z0 == 0 >>>>>>>> crystal.client.ClientPreferences.clone : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
crystal.client.ClientPreferences.clone : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> crystal.client.ClientPreferences.clone : r4 = (crystal.client.ProjectPreferences) $r8
crystal.client.ClientPreferences.clone : r4 = (crystal.client.ProjectPreferences) $r8 >>>>>>>> crystal.client.ClientPreferences.clone : $r9 = virtualinvoke r4.<crystal.client.ProjectPreferences: crystal.client.ProjectPreferences clone()>()
crystal.client.ClientPreferences.clone : $r9 = virtualinvoke r4.<crystal.client.ProjectPreferences: crystal.client.ProjectPreferences clone()>() >>>>>>>> crystal.client.ProjectPreferences.clone : $r5 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
crystal.client.ProjectPreferences.clone : $r5 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> crystal.client.ProjectPreferences.clone : r1 = (crystal.client.ProjectPreferences) $r5
crystal.client.ProjectPreferences.clone : r1 = (crystal.client.ProjectPreferences) $r5 >>>>>>>> crystal.client.ProjectPreferences.clone : $r6 = new java.util.Vector
crystal.client.ProjectPreferences.clone : $r6 = new java.util.Vector >>>>>>>> crystal.client.ProjectPreferences.clone : specialinvoke $r6.<java.util.Vector: void <init>()>()
crystal.client.ProjectPreferences.clone : specialinvoke $r6.<java.util.Vector: void <init>()>() >>>>>>>> crystal.client.ProjectPreferences.clone : r2 = $r6
crystal.client.ProjectPreferences.clone : r2 = $r6 >>>>>>>> crystal.client.ProjectPreferences.clone : $r7 = r0.<crystal.client.ProjectPreferences: java.util.Vector _dataSources>
crystal.client.ProjectPreferences.clone : $r7 = r0.<crystal.client.ProjectPreferences: java.util.Vector _dataSources> >>>>>>>> crystal.client.ProjectPreferences.clone : r3 = virtualinvoke $r7.<java.util.Vector: java.util.Iterator iterator()>()
crystal.client.ProjectPreferences.clone : r3 = virtualinvoke $r7.<java.util.Vector: java.util.Iterator iterator()>() >>>>>>>> crystal.client.ProjectPreferences.clone : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
crystal.client.ProjectPreferences.clone : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> crystal.client.ProjectPreferences.clone : if $z0 == 0
crystal.client.ProjectPreferences.clone : if $z0 == 0 >>>>>>>> crystal.client.ProjectPreferences.clone : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
crystal.client.ProjectPreferences.clone : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> crystal.client.ProjectPreferences.clone : r4 = (crystal.model.DataSource) $r8
crystal.client.ProjectPreferences.clone : r4 = (crystal.model.DataSource) $r8 >>>>>>>> crystal.client.ProjectPreferences.clone : $r9 = virtualinvoke r4.<crystal.model.DataSource: crystal.model.DataSource clone()>()
crystal.client.ProjectPreferences.clone : $r9 = virtualinvoke r4.<crystal.model.DataSource: crystal.model.DataSource clone()>() >>>>>>>> crystal.model.DataSource.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
crystal.model.DataSource.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> crystal.model.DataSource.clone : r1 = (crystal.model.DataSource) $r2
crystal.model.DataSource.clone : r1 = (crystal.model.DataSource) $r2 >>>>>>>> crystal.model.DataSource.clone : $r3 = r0.<crystal.model.DataSource: crystal.model.RevisionHistory _history>
crystal.model.DataSource.clone : $r3 = r0.<crystal.model.DataSource: crystal.model.RevisionHistory _history> >>>>>>>> crystal.model.DataSource.clone : if $r3 == null
crystal.model.DataSource.clone : if $r3 == null >>>>>>>> crystal.model.DataSource.clone : $r6 = r0.<crystal.model.DataSource: crystal.model.RevisionHistory _oldHistory>
crystal.model.DataSource.clone : $r6 = r0.<crystal.model.DataSource: crystal.model.RevisionHistory _oldHistory> >>>>>>>> crystal.model.DataSource.clone : if $r6 == null
crystal.model.DataSource.clone : if $r6 == null >>>>>>>> crystal.model.DataSource.clone : return r1
crystal.model.DataSource.clone : return r1 >>>>>>>> crystal.client.ProjectPreferences.clone : virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>($r9)
crystal.client.ProjectPreferences.clone : virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>($r9) >>>>>>>> crystal.client.ProjectPreferences.clone : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
crystal.client.ProjectPreferences.clone : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> crystal.client.ProjectPreferences.clone : r1.<crystal.client.ProjectPreferences: java.util.Vector _dataSources> = r2
crystal.client.ProjectPreferences.clone : r1.<crystal.client.ProjectPreferences: java.util.Vector _dataSources> = r2 >>>>>>>> crystal.client.ProjectPreferences.clone : $r10 = r0.<crystal.client.ProjectPreferences: crystal.model.DataSource _myEnvironment>
crystal.client.ProjectPreferences.clone : $r10 = r0.<crystal.client.ProjectPreferences: crystal.model.DataSource _myEnvironment> >>>>>>>> crystal.client.ProjectPreferences.clone : $r11 = virtualinvoke $r10.<crystal.model.DataSource: crystal.model.DataSource clone()>()
crystal.client.ProjectPreferences.clone : $r11 = virtualinvoke $r10.<crystal.model.DataSource: crystal.model.DataSource clone()>() >>>>>>>> crystal.client.ProjectPreferences.clone : r1.<crystal.client.ProjectPreferences: crystal.model.DataSource _myEnvironment> = $r11
crystal.client.ProjectPreferences.clone : r1.<crystal.client.ProjectPreferences: crystal.model.DataSource _myEnvironment> = $r11 >>>>>>>> crystal.client.ProjectPreferences.clone : $r12 = r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences _clientPreferences>
crystal.client.ProjectPreferences.clone : $r12 = r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences _clientPreferences> >>>>>>>> crystal.client.ProjectPreferences.clone : r1.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences _clientPreferences> = $r12
crystal.client.ProjectPreferences.clone : r1.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences _clientPreferences> = $r12 >>>>>>>> crystal.client.ProjectPreferences.clone : return r1
crystal.client.ProjectPreferences.clone : return r1 >>>>>>>> crystal.client.ClientPreferences.clone : virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>($r9)
crystal.client.ClientPreferences.clone : virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>($r9) >>>>>>>> crystal.client.ClientPreferences.clone : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
crystal.client.ClientPreferences.clone : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> crystal.client.ClientPreferences.clone : r1.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences> = r2
crystal.client.ClientPreferences.clone : r1.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences> = r2 >>>>>>>> crystal.client.ClientPreferences.clone : return r1
crystal.client.ClientPreferences.clone : return r1 >>>>>>>> crystal.client.ClientPreferences.getProjectPreference : $r1 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences>
crystal.client.ClientPreferences.getProjectPreference : $r1 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences> >>>>>>>> crystal.client.ClientPreferences.getProjectPreference : return $r1
crystal.client.ClientPreferences.getProjectPreference : return $r1 >>>>>>>> crystal.client.ClientPreferences.getTempDirectory : $r1 = r0.<crystal.client.ClientPreferences: java.lang.String _tempDirectory>
crystal.client.ClientPreferences.getTempDirectory : $r1 = r0.<crystal.client.ClientPreferences: java.lang.String _tempDirectory> >>>>>>>> crystal.client.ClientPreferences.getTempDirectory : return $r1
crystal.client.ClientPreferences.getTempDirectory : return $r1 >>>>>>>> crystal.util.ValidInputChecker.checkDirectoryPath : $r1 = new java.io.File
crystal.util.ValidInputChecker.checkDirectoryPath : $r1 = new java.io.File >>>>>>>> crystal.util.ValidInputChecker.checkDirectoryPath : specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(r0)
crystal.util.ValidInputChecker.checkDirectoryPath : specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(r0) >>>>>>>> crystal.util.ValidInputChecker.checkDirectoryPath : $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>()
crystal.util.ValidInputChecker.checkDirectoryPath : $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>() >>>>>>>> crystal.util.ValidInputChecker.checkDirectoryPath : if $z0 == 0
crystal.util.ValidInputChecker.checkDirectoryPath : if $z0 == 0 >>>>>>>> crystal.util.ValidInputChecker.checkDirectoryPath : $z2 = 0
crystal.util.ValidInputChecker.checkDirectoryPath : $z2 = 0 >>>>>>>> crystal.util.ValidInputChecker.checkDirectoryPath : return $z2
crystal.util.ValidInputChecker.checkDirectoryPath : return $z2 >>>>>>>> crystal.util.ValidInputChecker.checkUrl : $r1 = new java.net.URL
crystal.util.ValidInputChecker.checkUrl : $r1 = new java.net.URL >>>>>>>> crystal.util.ValidInputChecker.checkUrl : specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>(r0)
crystal.util.ValidInputChecker.checkUrl : specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>(r0) >>>>>>>> crystal.util.ValidInputChecker.checkUrl : r5 = $r4
crystal.util.ValidInputChecker.checkUrl : r5 = $r4 >>>>>>>> crystal.util.ValidInputChecker.checkUrl : return 0
crystal.util.ValidInputChecker.checkUrl : return 0 >>>>>>>> crystal.client.ClientPreferences.getRefresh : $l0 = r0.<crystal.client.ClientPreferences: long _refresh>
crystal.client.ClientPreferences.getRefresh : $l0 = r0.<crystal.client.ClientPreferences: long _refresh> >>>>>>>> crystal.client.ClientPreferences.getRefresh : return $l0
crystal.client.ClientPreferences.getRefresh : return $l0 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : if r0 == null
crystal.util.SpringLayoutUtility.formGridInColumn : if r0 == null >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : $r6 = virtualinvoke r0.<javax.swing.JPanel: java.awt.LayoutManager getLayout()>()
crystal.util.SpringLayoutUtility.formGridInColumn : $r6 = virtualinvoke r0.<javax.swing.JPanel: java.awt.LayoutManager getLayout()>() >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>()
crystal.util.SpringLayoutUtility.formGridInColumn : $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : if $r7 == class "javax/swing/SpringLayout"
crystal.util.SpringLayoutUtility.formGridInColumn : if $r7 == class "javax/swing/SpringLayout" >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : $r9 = virtualinvoke r0.<javax.swing.JPanel: java.awt.LayoutManager getLayout()>()
crystal.util.SpringLayoutUtility.formGridInColumn : $r9 = virtualinvoke r0.<javax.swing.JPanel: java.awt.LayoutManager getLayout()>() >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : r1 = (javax.swing.SpringLayout) $r9
crystal.util.SpringLayoutUtility.formGridInColumn : r1 = (javax.swing.SpringLayout) $r9 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : r2 = staticinvoke <javax.swing.Spring: javax.swing.Spring constant(int)>(3)
crystal.util.SpringLayoutUtility.formGridInColumn : r2 = staticinvoke <javax.swing.Spring: javax.swing.Spring constant(int)>(3) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : i2 = 0
crystal.util.SpringLayoutUtility.formGridInColumn : i2 = 0 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : if i2 >= i1
crystal.util.SpringLayoutUtility.formGridInColumn : if i2 >= i1 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : r3 = staticinvoke <javax.swing.Spring: javax.swing.Spring constant(int)>(0)
crystal.util.SpringLayoutUtility.formGridInColumn : r3 = staticinvoke <javax.swing.Spring: javax.swing.Spring constant(int)>(0) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : i3 = 0
crystal.util.SpringLayoutUtility.formGridInColumn : i3 = 0 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : if i3 >= i0
crystal.util.SpringLayoutUtility.formGridInColumn : if i3 >= i0 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : $r10 = staticinvoke <crystal.util.SpringLayoutUtility: javax.swing.SpringLayout$Constraints getConstraintsForCell(int,int,int,javax.swing.JPanel)>(i3, i2, i1, r0)
crystal.util.SpringLayoutUtility.formGridInColumn : $r10 = staticinvoke <crystal.util.SpringLayoutUtility: javax.swing.SpringLayout$Constraints getConstraintsForCell(int,int,int,javax.swing.JPanel)>(i3, i2, i1, r0) >>>>>>>> crystal.util.SpringLayoutUtility.getConstraintsForCell : $r3 = virtualinvoke r0.<javax.swing.JPanel: java.awt.LayoutManager getLayout()>()
crystal.util.SpringLayoutUtility.getConstraintsForCell : $r3 = virtualinvoke r0.<javax.swing.JPanel: java.awt.LayoutManager getLayout()>() >>>>>>>> crystal.util.SpringLayoutUtility.getConstraintsForCell : r1 = (javax.swing.SpringLayout) $r3
crystal.util.SpringLayoutUtility.getConstraintsForCell : r1 = (javax.swing.SpringLayout) $r3 >>>>>>>> crystal.util.SpringLayoutUtility.getConstraintsForCell : $i3 = i0 * i2
crystal.util.SpringLayoutUtility.getConstraintsForCell : $i3 = i0 * i2 >>>>>>>> crystal.util.SpringLayoutUtility.getConstraintsForCell : $i4 = $i3 + i1
crystal.util.SpringLayoutUtility.getConstraintsForCell : $i4 = $i3 + i1 >>>>>>>> crystal.util.SpringLayoutUtility.getConstraintsForCell : r2 = virtualinvoke r0.<javax.swing.JPanel: java.awt.Component getComponent(int)>($i4)
crystal.util.SpringLayoutUtility.getConstraintsForCell : r2 = virtualinvoke r0.<javax.swing.JPanel: java.awt.Component getComponent(int)>($i4) >>>>>>>> crystal.util.SpringLayoutUtility.getConstraintsForCell : $r4 = virtualinvoke r1.<javax.swing.SpringLayout: javax.swing.SpringLayout$Constraints getConstraints(java.awt.Component)>(r2)
crystal.util.SpringLayoutUtility.getConstraintsForCell : $r4 = virtualinvoke r1.<javax.swing.SpringLayout: javax.swing.SpringLayout$Constraints getConstraints(java.awt.Component)>(r2) >>>>>>>> crystal.util.SpringLayoutUtility.getConstraintsForCell : return $r4
crystal.util.SpringLayoutUtility.getConstraintsForCell : return $r4 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : $r11 = virtualinvoke $r10.<javax.swing.SpringLayout$Constraints: javax.swing.Spring getWidth()>()
crystal.util.SpringLayoutUtility.formGridInColumn : $r11 = virtualinvoke $r10.<javax.swing.SpringLayout$Constraints: javax.swing.Spring getWidth()>() >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : r3 = staticinvoke <javax.swing.Spring: javax.swing.Spring max(javax.swing.Spring,javax.swing.Spring)>(r3, $r11)
crystal.util.SpringLayoutUtility.formGridInColumn : r3 = staticinvoke <javax.swing.Spring: javax.swing.Spring max(javax.swing.Spring,javax.swing.Spring)>(r3, $r11) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : i3 = i3 + 1
crystal.util.SpringLayoutUtility.formGridInColumn : i3 = i3 + 1 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : goto [?= (branch)]
crystal.util.SpringLayoutUtility.formGridInColumn : goto [?= (branch)] >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : i4 = 0
crystal.util.SpringLayoutUtility.formGridInColumn : i4 = 0 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : if i4 >= i0
crystal.util.SpringLayoutUtility.formGridInColumn : if i4 >= i0 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : r4 = staticinvoke <crystal.util.SpringLayoutUtility: javax.swing.SpringLayout$Constraints getConstraintsForCell(int,int,int,javax.swing.JPanel)>(i4, i2, i1, r0)
crystal.util.SpringLayoutUtility.formGridInColumn : r4 = staticinvoke <crystal.util.SpringLayoutUtility: javax.swing.SpringLayout$Constraints getConstraintsForCell(int,int,int,javax.swing.JPanel)>(i4, i2, i1, r0) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : virtualinvoke r4.<javax.swing.SpringLayout$Constraints: void setX(javax.swing.Spring)>(r2)
crystal.util.SpringLayoutUtility.formGridInColumn : virtualinvoke r4.<javax.swing.SpringLayout$Constraints: void setX(javax.swing.Spring)>(r2) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : virtualinvoke r4.<javax.swing.SpringLayout$Constraints: void setWidth(javax.swing.Spring)>(r3)
crystal.util.SpringLayoutUtility.formGridInColumn : virtualinvoke r4.<javax.swing.SpringLayout$Constraints: void setWidth(javax.swing.Spring)>(r3) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : i4 = i4 + 1
crystal.util.SpringLayoutUtility.formGridInColumn : i4 = i4 + 1 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : $r12 = staticinvoke <javax.swing.Spring: javax.swing.Spring constant(int)>(3)
crystal.util.SpringLayoutUtility.formGridInColumn : $r12 = staticinvoke <javax.swing.Spring: javax.swing.Spring constant(int)>(3) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : $r13 = staticinvoke <javax.swing.Spring: javax.swing.Spring sum(javax.swing.Spring,javax.swing.Spring)>(r3, $r12)
crystal.util.SpringLayoutUtility.formGridInColumn : $r13 = staticinvoke <javax.swing.Spring: javax.swing.Spring sum(javax.swing.Spring,javax.swing.Spring)>(r3, $r12) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : r2 = staticinvoke <javax.swing.Spring: javax.swing.Spring sum(javax.swing.Spring,javax.swing.Spring)>(r2, $r13)
crystal.util.SpringLayoutUtility.formGridInColumn : r2 = staticinvoke <javax.swing.Spring: javax.swing.Spring sum(javax.swing.Spring,javax.swing.Spring)>(r2, $r13) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : i2 = i2 + 1
crystal.util.SpringLayoutUtility.formGridInColumn : i2 = i2 + 1 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : r14 = staticinvoke <javax.swing.Spring: javax.swing.Spring constant(int)>(3)
crystal.util.SpringLayoutUtility.formGridInColumn : r14 = staticinvoke <javax.swing.Spring: javax.swing.Spring constant(int)>(3) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : i5 = 0
crystal.util.SpringLayoutUtility.formGridInColumn : i5 = 0 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : if i5 >= i0
crystal.util.SpringLayoutUtility.formGridInColumn : if i5 >= i0 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : r15 = staticinvoke <javax.swing.Spring: javax.swing.Spring constant(int)>(0)
crystal.util.SpringLayoutUtility.formGridInColumn : r15 = staticinvoke <javax.swing.Spring: javax.swing.Spring constant(int)>(0) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : i6 = 0
crystal.util.SpringLayoutUtility.formGridInColumn : i6 = 0 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : if i6 >= i1
crystal.util.SpringLayoutUtility.formGridInColumn : if i6 >= i1 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : $r16 = staticinvoke <crystal.util.SpringLayoutUtility: javax.swing.SpringLayout$Constraints getConstraintsForCell(int,int,int,javax.swing.JPanel)>(i5, i6, i1, r0)
crystal.util.SpringLayoutUtility.formGridInColumn : $r16 = staticinvoke <crystal.util.SpringLayoutUtility: javax.swing.SpringLayout$Constraints getConstraintsForCell(int,int,int,javax.swing.JPanel)>(i5, i6, i1, r0) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : $r17 = virtualinvoke $r16.<javax.swing.SpringLayout$Constraints: javax.swing.Spring getHeight()>()
crystal.util.SpringLayoutUtility.formGridInColumn : $r17 = virtualinvoke $r16.<javax.swing.SpringLayout$Constraints: javax.swing.Spring getHeight()>() >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : r15 = staticinvoke <javax.swing.Spring: javax.swing.Spring max(javax.swing.Spring,javax.swing.Spring)>(r15, $r17)
crystal.util.SpringLayoutUtility.formGridInColumn : r15 = staticinvoke <javax.swing.Spring: javax.swing.Spring max(javax.swing.Spring,javax.swing.Spring)>(r15, $r17) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : i6 = i6 + 1
crystal.util.SpringLayoutUtility.formGridInColumn : i6 = i6 + 1 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : i7 = 0
crystal.util.SpringLayoutUtility.formGridInColumn : i7 = 0 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : if i7 >= i1
crystal.util.SpringLayoutUtility.formGridInColumn : if i7 >= i1 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : r5 = staticinvoke <crystal.util.SpringLayoutUtility: javax.swing.SpringLayout$Constraints getConstraintsForCell(int,int,int,javax.swing.JPanel)>(i5, i7, i1, r0)
crystal.util.SpringLayoutUtility.formGridInColumn : r5 = staticinvoke <crystal.util.SpringLayoutUtility: javax.swing.SpringLayout$Constraints getConstraintsForCell(int,int,int,javax.swing.JPanel)>(i5, i7, i1, r0) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : virtualinvoke r5.<javax.swing.SpringLayout$Constraints: void setY(javax.swing.Spring)>(r14)
crystal.util.SpringLayoutUtility.formGridInColumn : virtualinvoke r5.<javax.swing.SpringLayout$Constraints: void setY(javax.swing.Spring)>(r14) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : virtualinvoke r5.<javax.swing.SpringLayout$Constraints: void setHeight(javax.swing.Spring)>(r15)
crystal.util.SpringLayoutUtility.formGridInColumn : virtualinvoke r5.<javax.swing.SpringLayout$Constraints: void setHeight(javax.swing.Spring)>(r15) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : i7 = i7 + 1
crystal.util.SpringLayoutUtility.formGridInColumn : i7 = i7 + 1 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : $r18 = staticinvoke <javax.swing.Spring: javax.swing.Spring constant(int)>(3)
crystal.util.SpringLayoutUtility.formGridInColumn : $r18 = staticinvoke <javax.swing.Spring: javax.swing.Spring constant(int)>(3) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : $r19 = staticinvoke <javax.swing.Spring: javax.swing.Spring sum(javax.swing.Spring,javax.swing.Spring)>(r15, $r18)
crystal.util.SpringLayoutUtility.formGridInColumn : $r19 = staticinvoke <javax.swing.Spring: javax.swing.Spring sum(javax.swing.Spring,javax.swing.Spring)>(r15, $r18) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : r14 = staticinvoke <javax.swing.Spring: javax.swing.Spring sum(javax.swing.Spring,javax.swing.Spring)>(r14, $r19)
crystal.util.SpringLayoutUtility.formGridInColumn : r14 = staticinvoke <javax.swing.Spring: javax.swing.Spring sum(javax.swing.Spring,javax.swing.Spring)>(r14, $r19) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : i5 = i5 + 1
crystal.util.SpringLayoutUtility.formGridInColumn : i5 = i5 + 1 >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : r20 = virtualinvoke r1.<javax.swing.SpringLayout: javax.swing.SpringLayout$Constraints getConstraints(java.awt.Component)>(r0)
crystal.util.SpringLayoutUtility.formGridInColumn : r20 = virtualinvoke r1.<javax.swing.SpringLayout: javax.swing.SpringLayout$Constraints getConstraints(java.awt.Component)>(r0) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : virtualinvoke r20.<javax.swing.SpringLayout$Constraints: void setConstraint(java.lang.String,javax.swing.Spring)>("South", r14)
crystal.util.SpringLayoutUtility.formGridInColumn : virtualinvoke r20.<javax.swing.SpringLayout$Constraints: void setConstraint(java.lang.String,javax.swing.Spring)>("South", r14) >>>>>>>> crystal.util.SpringLayoutUtility.formGridInColumn : virtualinvoke r20.<javax.swing.SpringLayout$Constraints: void setConstraint(java.lang.String,javax.swing.Spring)>("East", r2)
crystal.util.SpringLayoutUtility.formGridInColumn : virtualinvoke r20.<javax.swing.SpringLayout$Constraints: void setConstraint(java.lang.String,javax.swing.Spring)>("East", r2) >>>>>>>> crystal.client.ProjectPreferences.getEnvironment : $r1 = r0.<crystal.client.ProjectPreferences: crystal.model.DataSource _myEnvironment>
crystal.client.ProjectPreferences.getEnvironment : $r1 = r0.<crystal.client.ProjectPreferences: crystal.model.DataSource _myEnvironment> >>>>>>>> crystal.client.ProjectPreferences.getEnvironment : return $r1
crystal.client.ProjectPreferences.getEnvironment : return $r1 >>>>>>>> crystal.model.DataSource.getShortName : $r1 = r0.<crystal.model.DataSource: java.lang.String _shortName>
crystal.model.DataSource.getShortName : $r1 = r0.<crystal.model.DataSource: java.lang.String _shortName> >>>>>>>> crystal.model.DataSource.getShortName : return $r1
crystal.model.DataSource.getShortName : return $r1 >>>>>>>> crystal.client.ClientPreferences.getProjectPreferences : $r5 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences>
crystal.client.ClientPreferences.getProjectPreferences : $r5 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences> >>>>>>>> crystal.client.ClientPreferences.getProjectPreferences : r2 = virtualinvoke $r5.<java.util.Vector: java.util.Iterator iterator()>()
crystal.client.ClientPreferences.getProjectPreferences : r2 = virtualinvoke $r5.<java.util.Vector: java.util.Iterator iterator()>() >>>>>>>> crystal.client.ClientPreferences.getProjectPreferences : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
crystal.client.ClientPreferences.getProjectPreferences : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> crystal.client.ClientPreferences.getProjectPreferences : if $z0 == 0
crystal.client.ClientPreferences.getProjectPreferences : if $z0 == 0 >>>>>>>> crystal.client.ClientPreferences.getProjectPreferences : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
crystal.client.ClientPreferences.getProjectPreferences : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> crystal.client.ClientPreferences.getProjectPreferences : r3 = (crystal.client.ProjectPreferences) $r6
crystal.client.ClientPreferences.getProjectPreferences : r3 = (crystal.client.ProjectPreferences) $r6 >>>>>>>> crystal.client.ClientPreferences.getProjectPreferences : $r7 = virtualinvoke r3.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.client.ClientPreferences.getProjectPreferences : $r7 = virtualinvoke r3.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.client.ClientPreferences.getProjectPreferences : $r8 = virtualinvoke $r7.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.client.ClientPreferences.getProjectPreferences : $r8 = virtualinvoke $r7.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.client.ClientPreferences.getProjectPreferences : $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1)
crystal.client.ClientPreferences.getProjectPreferences : $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> crystal.client.ClientPreferences.getProjectPreferences : if $z1 == 0
crystal.client.ClientPreferences.getProjectPreferences : if $z1 == 0 >>>>>>>> crystal.client.ClientPreferences.getProjectPreferences : return r3
crystal.client.ClientPreferences.getProjectPreferences : return r3 >>>>>>>> crystal.model.DataSource.getParent : $r1 = r0.<crystal.model.DataSource: java.lang.String _parent>
crystal.model.DataSource.getParent : $r1 = r0.<crystal.model.DataSource: java.lang.String _parent> >>>>>>>> crystal.model.DataSource.getParent : if $r1 != null
crystal.model.DataSource.getParent : if $r1 != null >>>>>>>> crystal.model.DataSource.getParent : $r2 = r0.<crystal.model.DataSource: java.lang.String _parent>
crystal.model.DataSource.getParent : $r2 = r0.<crystal.model.DataSource: java.lang.String _parent> >>>>>>>> crystal.model.DataSource.getParent : return $r2
crystal.model.DataSource.getParent : return $r2 >>>>>>>> crystal.model.DataSource.getKind : $r1 = r0.<crystal.model.DataSource: crystal.model.DataSource$RepoKind _repoKind>
crystal.model.DataSource.getKind : $r1 = r0.<crystal.model.DataSource: crystal.model.DataSource$RepoKind _repoKind> >>>>>>>> crystal.model.DataSource.getKind : return $r1
crystal.model.DataSource.getKind : return $r1 >>>>>>>> crystal.model.DataSource.getCloneString : $r1 = r0.<crystal.model.DataSource: java.lang.String _cloneString>
crystal.model.DataSource.getCloneString : $r1 = r0.<crystal.model.DataSource: java.lang.String _cloneString> >>>>>>>> crystal.model.DataSource.getCloneString : return $r1
crystal.model.DataSource.getCloneString : return $r1 >>>>>>>> crystal.client.ProjectPanel.setState : if z0 == 0
crystal.client.ProjectPanel.setState : if z0 == 0 >>>>>>>> crystal.client.ProjectPanel.setState : virtualinvoke r1.<javax.swing.JLabel: void setText(java.lang.String)>("invalid")
crystal.client.ProjectPanel.setState : virtualinvoke r1.<javax.swing.JLabel: void setText(java.lang.String)>("invalid") >>>>>>>> crystal.client.ProjectPanel.setState : $r4 = <java.awt.Color: java.awt.Color RED>
crystal.client.ProjectPanel.setState : $r4 = <java.awt.Color: java.awt.Color RED> >>>>>>>> crystal.client.ProjectPanel.setState : $r5 = virtualinvoke $r4.<java.awt.Color: java.awt.Color darker()>()
crystal.client.ProjectPanel.setState : $r5 = virtualinvoke $r4.<java.awt.Color: java.awt.Color darker()>() >>>>>>>> crystal.client.ProjectPanel.setState : virtualinvoke r1.<javax.swing.JLabel: void setForeground(java.awt.Color)>($r5)
crystal.client.ProjectPanel.setState : virtualinvoke r1.<javax.swing.JLabel: void setForeground(java.awt.Color)>($r5) >>>>>>>> crystal.model.DataSource.getCompileCommand : $r1 = r0.<crystal.model.DataSource: java.lang.String _compileCommand>
crystal.model.DataSource.getCompileCommand : $r1 = r0.<crystal.model.DataSource: java.lang.String _compileCommand> >>>>>>>> crystal.model.DataSource.getCompileCommand : return $r1
crystal.model.DataSource.getCompileCommand : return $r1 >>>>>>>> crystal.util.ValidInputChecker.checkCommand : if r0 == null
crystal.util.ValidInputChecker.checkCommand : if r0 == null >>>>>>>> crystal.util.ValidInputChecker.checkCommand : $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()
crystal.util.ValidInputChecker.checkCommand : $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>() >>>>>>>> crystal.util.ValidInputChecker.checkCommand : $z0 = virtualinvoke $r1.<java.lang.String: boolean isEmpty()>()
crystal.util.ValidInputChecker.checkCommand : $z0 = virtualinvoke $r1.<java.lang.String: boolean isEmpty()>() >>>>>>>> crystal.util.ValidInputChecker.checkCommand : if $z0 != 0
crystal.util.ValidInputChecker.checkCommand : if $z0 != 0 >>>>>>>> crystal.util.ValidInputChecker.checkCommand : $z1 = 1
crystal.util.ValidInputChecker.checkCommand : $z1 = 1 >>>>>>>> crystal.util.ValidInputChecker.checkCommand : goto [?= return $z1]
crystal.util.ValidInputChecker.checkCommand : goto [?= return $z1] >>>>>>>> crystal.util.ValidInputChecker.checkCommand : return $z1
crystal.util.ValidInputChecker.checkCommand : return $z1 >>>>>>>> crystal.client.ProjectPanel.setState : virtualinvoke r1.<javax.swing.JLabel: void setText(java.lang.String)>("  valid")
crystal.client.ProjectPanel.setState : virtualinvoke r1.<javax.swing.JLabel: void setText(java.lang.String)>("  valid") >>>>>>>> crystal.client.ProjectPanel.setState : $r2 = <java.awt.Color: java.awt.Color GREEN>
crystal.client.ProjectPanel.setState : $r2 = <java.awt.Color: java.awt.Color GREEN> >>>>>>>> crystal.client.ProjectPanel.setState : $r3 = virtualinvoke $r2.<java.awt.Color: java.awt.Color darker()>()
crystal.client.ProjectPanel.setState : $r3 = virtualinvoke $r2.<java.awt.Color: java.awt.Color darker()>() >>>>>>>> crystal.client.ProjectPanel.setState : virtualinvoke r1.<javax.swing.JLabel: void setForeground(java.awt.Color)>($r3)
crystal.client.ProjectPanel.setState : virtualinvoke r1.<javax.swing.JLabel: void setForeground(java.awt.Color)>($r3) >>>>>>>> crystal.client.ProjectPanel.setState : goto [?= return]
crystal.client.ProjectPanel.setState : goto [?= return] >>>>>>>> crystal.model.DataSource.getTestCommand : $r1 = r0.<crystal.model.DataSource: java.lang.String _testCommand>
crystal.model.DataSource.getTestCommand : $r1 = r0.<crystal.model.DataSource: java.lang.String _testCommand> >>>>>>>> crystal.model.DataSource.getTestCommand : return $r1
crystal.model.DataSource.getTestCommand : return $r1 >>>>>>>> crystal.client.ProjectPreferences.getDataSources : $r1 = r0.<crystal.client.ProjectPreferences: java.util.Vector _dataSources>
crystal.client.ProjectPreferences.getDataSources : $r1 = r0.<crystal.client.ProjectPreferences: java.util.Vector _dataSources> >>>>>>>> crystal.client.ProjectPreferences.getDataSources : return $r1
crystal.client.ProjectPreferences.getDataSources : return $r1 >>>>>>>> crystal.client.ProjectPreferences.getDataSource : $r4 = r0.<crystal.client.ProjectPreferences: java.util.Vector _dataSources>
crystal.client.ProjectPreferences.getDataSource : $r4 = r0.<crystal.client.ProjectPreferences: java.util.Vector _dataSources> >>>>>>>> crystal.client.ProjectPreferences.getDataSource : r2 = virtualinvoke $r4.<java.util.Vector: java.util.Iterator iterator()>()
crystal.client.ProjectPreferences.getDataSource : r2 = virtualinvoke $r4.<java.util.Vector: java.util.Iterator iterator()>() >>>>>>>> crystal.client.ProjectPreferences.getDataSource : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
crystal.client.ProjectPreferences.getDataSource : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> crystal.client.ProjectPreferences.getDataSource : if $z0 == 0
crystal.client.ProjectPreferences.getDataSource : if $z0 == 0 >>>>>>>> crystal.client.ProjectPreferences.getDataSource : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
crystal.client.ProjectPreferences.getDataSource : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> crystal.client.ProjectPreferences.getDataSource : r3 = (crystal.model.DataSource) $r5
crystal.client.ProjectPreferences.getDataSource : r3 = (crystal.model.DataSource) $r5 >>>>>>>> crystal.client.ProjectPreferences.getDataSource : $r6 = virtualinvoke r3.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.client.ProjectPreferences.getDataSource : $r6 = virtualinvoke r3.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.client.ProjectPreferences.getDataSource : $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>()
crystal.client.ProjectPreferences.getDataSource : $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> crystal.client.ProjectPreferences.getDataSource : $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>()
crystal.client.ProjectPreferences.getDataSource : $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>() >>>>>>>> crystal.client.ProjectPreferences.getDataSource : $r9 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>()
crystal.client.ProjectPreferences.getDataSource : $r9 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> crystal.client.ProjectPreferences.getDataSource : $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>()
crystal.client.ProjectPreferences.getDataSource : $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>() >>>>>>>> crystal.client.ProjectPreferences.getDataSource : $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r10)
crystal.client.ProjectPreferences.getDataSource : $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r10) >>>>>>>> crystal.client.ProjectPreferences.getDataSource : if $z1 == 0
crystal.client.ProjectPreferences.getDataSource : if $z1 == 0 >>>>>>>> crystal.client.ProjectPreferences.getDataSource : return r3
crystal.client.ProjectPreferences.getDataSource : return r3 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r10 = new javax.swing.JLabel
crystal.client.ProjectPanel.addRepoPanel : $r10 = new javax.swing.JLabel >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r10.<javax.swing.JLabel: void <init>()>()
crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r10.<javax.swing.JLabel: void <init>()>() >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : r11 = $r10
crystal.client.ProjectPanel.addRepoPanel : r11 = $r10 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : r12 = newarray (boolean)[3]
crystal.client.ProjectPanel.addRepoPanel : r12 = newarray (boolean)[3] >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r20 = new javax.swing.JTextField
crystal.client.ProjectPanel.addRepoPanel : $r20 = new javax.swing.JTextField >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r21 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.client.ProjectPanel.addRepoPanel : $r21 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r20.<javax.swing.JTextField: void <init>(java.lang.String)>($r21)
crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r20.<javax.swing.JTextField: void <init>(java.lang.String)>($r21) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : r13 = $r20
crystal.client.ProjectPanel.addRepoPanel : r13 = $r20 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
crystal.client.ProjectPanel.addRepoPanel : $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, $r22)
crystal.client.ProjectPanel.addRepoPanel : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, $r22) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
crystal.client.ProjectPanel.addRepoPanel : $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, $r24)
crystal.client.ProjectPanel.addRepoPanel : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, $r24) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : r12[0] = 1
crystal.client.ProjectPanel.addRepoPanel : r12[0] = 1 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r26 = new crystal.client.ProjectPanel$9
crystal.client.ProjectPanel.addRepoPanel : $r26 = new crystal.client.ProjectPanel$9 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r26.<crystal.client.ProjectPanel$9: void <init>(crystal.client.ProjectPanel,crystal.model.DataSource,javax.swing.JTextField,crystal.model.DataSource,java.util.Map,crystal.client.ProjectPreferences,java.util.Map,boolean[],javax.swing.JLabel)>(r0, r1, r13, r8, r7, r2, r9, r12, r11)
crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r26.<crystal.client.ProjectPanel$9: void <init>(crystal.client.ProjectPanel,crystal.model.DataSource,javax.swing.JTextField,crystal.model.DataSource,java.util.Map,crystal.client.ProjectPreferences,java.util.Map,boolean[],javax.swing.JLabel)>(r0, r1, r13, r8, r7, r2, r9, r12, r11) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r13.<javax.swing.JTextField: void addKeyListener(java.awt.event.KeyListener)>($r26)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r13.<javax.swing.JTextField: void addKeyListener(java.awt.event.KeyListener)>($r26) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r27 = new javax.swing.JCheckBox
crystal.client.ProjectPanel.addRepoPanel : $r27 = new javax.swing.JCheckBox >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r27.<javax.swing.JCheckBox: void <init>()>()
crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r27.<javax.swing.JCheckBox: void <init>()>() >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : r14 = $r27
crystal.client.ProjectPanel.addRepoPanel : r14 = $r27 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $z1 = virtualinvoke r1.<crystal.model.DataSource: boolean isHidden()>()
crystal.client.ProjectPanel.addRepoPanel : $z1 = virtualinvoke r1.<crystal.model.DataSource: boolean isHidden()>() >>>>>>>> crystal.model.DataSource.isHidden : $z0 = r0.<crystal.model.DataSource: boolean _hide>
crystal.model.DataSource.isHidden : $z0 = r0.<crystal.model.DataSource: boolean _hide> >>>>>>>> crystal.model.DataSource.isHidden : return $z0
crystal.model.DataSource.isHidden : return $z0 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : if $z1 == 0
crystal.client.ProjectPanel.addRepoPanel : if $z1 == 0 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r28 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
crystal.client.ProjectPanel.addRepoPanel : $r28 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r14, $r28)
crystal.client.ProjectPanel.addRepoPanel : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r14, $r28) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r30 = new crystal.client.ProjectPanel$10
crystal.client.ProjectPanel.addRepoPanel : $r30 = new crystal.client.ProjectPanel$10 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r30.<crystal.client.ProjectPanel$10: void <init>(crystal.client.ProjectPanel,crystal.model.DataSource,javax.swing.JCheckBox,crystal.model.DataSource,java.util.Map)>(r0, r1, r14, r8, r7)
crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r30.<crystal.client.ProjectPanel$10: void <init>(crystal.client.ProjectPanel,crystal.model.DataSource,javax.swing.JCheckBox,crystal.model.DataSource,java.util.Map)>(r0, r1, r14, r8, r7) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r14.<javax.swing.JCheckBox: void addActionListener(java.awt.event.ActionListener)>($r30)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r14.<javax.swing.JCheckBox: void addActionListener(java.awt.event.ActionListener)>($r30) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r31 = new javax.swing.JTextField
crystal.client.ProjectPanel.addRepoPanel : $r31 = new javax.swing.JTextField >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r32 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getParent()>()
crystal.client.ProjectPanel.addRepoPanel : $r32 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getParent()>() >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r31.<javax.swing.JTextField: void <init>(java.lang.String)>($r32)
crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r31.<javax.swing.JTextField: void <init>(java.lang.String)>($r32) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : r15 = $r31
crystal.client.ProjectPanel.addRepoPanel : r15 = $r31 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r33 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
crystal.client.ProjectPanel.addRepoPanel : $r33 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r15, $r33)
crystal.client.ProjectPanel.addRepoPanel : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r15, $r33) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r35 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
crystal.client.ProjectPanel.addRepoPanel : $r35 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r15, $r35)
crystal.client.ProjectPanel.addRepoPanel : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r15, $r35) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : r12[1] = 1
crystal.client.ProjectPanel.addRepoPanel : r12[1] = 1 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r37 = new crystal.client.ProjectPanel$11
crystal.client.ProjectPanel.addRepoPanel : $r37 = new crystal.client.ProjectPanel$11 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r37.<crystal.client.ProjectPanel$11: void <init>(crystal.client.ProjectPanel,crystal.model.DataSource,javax.swing.JTextField,crystal.model.DataSource,java.util.Map,javax.swing.JPanel,javax.swing.JFrame)>(r0, r1, r15, r8, r7, r4, r5)
crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r37.<crystal.client.ProjectPanel$11: void <init>(crystal.client.ProjectPanel,crystal.model.DataSource,javax.swing.JTextField,crystal.model.DataSource,java.util.Map,javax.swing.JPanel,javax.swing.JFrame)>(r0, r1, r15, r8, r7, r4, r5) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r15.<javax.swing.JTextField: void addKeyListener(java.awt.event.KeyListener)>($r37)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r15.<javax.swing.JTextField: void addKeyListener(java.awt.event.KeyListener)>($r37) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r38 = new javax.swing.JTextField
crystal.client.ProjectPanel.addRepoPanel : $r38 = new javax.swing.JTextField >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r39 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getCloneString()>()
crystal.client.ProjectPanel.addRepoPanel : $r39 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getCloneString()>() >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r38.<javax.swing.JTextField: void <init>(java.lang.String)>($r39)
crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r38.<javax.swing.JTextField: void <init>(java.lang.String)>($r39) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : r16 = $r38
crystal.client.ProjectPanel.addRepoPanel : r16 = $r38 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r40 = new javax.swing.JPanel
crystal.client.ProjectPanel.addRepoPanel : $r40 = new javax.swing.JPanel >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r40.<javax.swing.JPanel: void <init>()>()
crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r40.<javax.swing.JPanel: void <init>()>() >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : r17 = $r40
crystal.client.ProjectPanel.addRepoPanel : r17 = $r40 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r41 = new javax.swing.BoxLayout
crystal.client.ProjectPanel.addRepoPanel : $r41 = new javax.swing.BoxLayout >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r41.<javax.swing.BoxLayout: void <init>(java.awt.Container,int)>(r17, 0)
crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r41.<javax.swing.BoxLayout: void <init>(java.awt.Container,int)>(r17, 0) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r17.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r41)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r17.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r41) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r17.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r16)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r17.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r16) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r43 = new javax.swing.JButton
crystal.client.ProjectPanel.addRepoPanel : $r43 = new javax.swing.JButton >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r43.<javax.swing.JButton: void <init>(java.lang.String)>("find")
crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r43.<javax.swing.JButton: void <init>(java.lang.String)>("find") >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : r18 = $r43
crystal.client.ProjectPanel.addRepoPanel : r18 = $r43 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r17.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r18)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r17.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r18) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r45 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
crystal.client.ProjectPanel.addRepoPanel : $r45 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r16, $r45)
crystal.client.ProjectPanel.addRepoPanel : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r16, $r45) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r47 = virtualinvoke r16.<javax.swing.JTextField: java.lang.String getText()>()
crystal.client.ProjectPanel.addRepoPanel : $r47 = virtualinvoke r16.<javax.swing.JTextField: java.lang.String getText()>() >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $z2 = staticinvoke <crystal.util.ValidInputChecker: boolean checkDirectoryPath(java.lang.String)>($r47)
crystal.client.ProjectPanel.addRepoPanel : $z2 = staticinvoke <crystal.util.ValidInputChecker: boolean checkDirectoryPath(java.lang.String)>($r47) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : if $z2 != 0
crystal.client.ProjectPanel.addRepoPanel : if $z2 != 0 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r48 = virtualinvoke r16.<javax.swing.JTextField: java.lang.String getText()>()
crystal.client.ProjectPanel.addRepoPanel : $r48 = virtualinvoke r16.<javax.swing.JTextField: java.lang.String getText()>() >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $z3 = staticinvoke <crystal.util.ValidInputChecker: boolean checkUrl(java.lang.String)>($r48)
crystal.client.ProjectPanel.addRepoPanel : $z3 = staticinvoke <crystal.util.ValidInputChecker: boolean checkUrl(java.lang.String)>($r48) >>>>>>>> crystal.util.ValidInputChecker.checkUrl : r2 = $r1
crystal.util.ValidInputChecker.checkUrl : r2 = $r1 >>>>>>>> crystal.util.ValidInputChecker.checkUrl : r3 = virtualinvoke r2.<java.net.URL: java.net.URLConnection openConnection()>()
crystal.util.ValidInputChecker.checkUrl : r3 = virtualinvoke r2.<java.net.URL: java.net.URLConnection openConnection()>() >>>>>>>> crystal.util.ValidInputChecker.checkUrl : virtualinvoke r3.<java.net.URLConnection: void connect()>()
crystal.util.ValidInputChecker.checkUrl : virtualinvoke r3.<java.net.URLConnection: void connect()>() >>>>>>>> crystal.util.ValidInputChecker.checkUrl : r7 = $r6
crystal.util.ValidInputChecker.checkUrl : r7 = $r6 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : if $z3 == 0
crystal.client.ProjectPanel.addRepoPanel : if $z3 == 0 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $z4 = 0
crystal.client.ProjectPanel.addRepoPanel : $z4 = 0 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : z0 = $z4
crystal.client.ProjectPanel.addRepoPanel : z0 = $z4 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r49 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0)
crystal.client.ProjectPanel.addRepoPanel : $r49 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r16, $r49)
crystal.client.ProjectPanel.addRepoPanel : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r16, $r49) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : r12[2] = z0
crystal.client.ProjectPanel.addRepoPanel : r12[2] = z0 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r51 = new crystal.client.ProjectPanel$12
crystal.client.ProjectPanel.addRepoPanel : $r51 = new crystal.client.ProjectPanel$12 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r51.<crystal.client.ProjectPanel$12: void <init>(crystal.client.ProjectPanel,crystal.model.DataSource,javax.swing.JTextField,crystal.model.DataSource,java.util.Map,java.util.Map,boolean[],javax.swing.JLabel,javax.swing.JPanel,javax.swing.JFrame)>(r0, r1, r16, r8, r7, r9, r12, r11, r4, r5)
crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r51.<crystal.client.ProjectPanel$12: void <init>(crystal.client.ProjectPanel,crystal.model.DataSource,javax.swing.JTextField,crystal.model.DataSource,java.util.Map,java.util.Map,boolean[],javax.swing.JLabel,javax.swing.JPanel,javax.swing.JFrame)>(r0, r1, r16, r8, r7, r9, r12, r11, r4, r5) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r16.<javax.swing.JTextField: void addKeyListener(java.awt.event.KeyListener)>($r51)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r16.<javax.swing.JTextField: void addKeyListener(java.awt.event.KeyListener)>($r51) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r52 = new crystal.client.ProjectPanel$13
crystal.client.ProjectPanel.addRepoPanel : $r52 = new crystal.client.ProjectPanel$13 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r52.<crystal.client.ProjectPanel$13: void <init>(crystal.client.ProjectPanel,javax.swing.JTextField)>(r0, r16)
crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r52.<crystal.client.ProjectPanel$13: void <init>(crystal.client.ProjectPanel,javax.swing.JTextField)>(r0, r16) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r18.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r52)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r18.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r52) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r53 = new javax.swing.JButton
crystal.client.ProjectPanel.addRepoPanel : $r53 = new javax.swing.JButton >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r53.<javax.swing.JButton: void <init>(java.lang.String)>("Delete")
crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r53.<javax.swing.JButton: void <init>(java.lang.String)>("Delete") >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : r19 = $r53
crystal.client.ProjectPanel.addRepoPanel : r19 = $r53 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r54 = new crystal.client.ProjectPanel$14
crystal.client.ProjectPanel.addRepoPanel : $r54 = new crystal.client.ProjectPanel$14 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r54.<crystal.client.ProjectPanel$14: void <init>(crystal.client.ProjectPanel,crystal.model.DataSource,crystal.client.ProjectPreferences,javax.swing.JPanel,javax.swing.JTextField,javax.swing.JCheckBox,javax.swing.JTextField,javax.swing.JPanel,javax.swing.JButton,java.util.Map,javax.swing.JTextField,crystal.client.ClientPreferences,javax.swing.JFrame)>(r0, r1, r2, r6, r13, r14, r15, r17, r19, r9, r16, r3, r5)
crystal.client.ProjectPanel.addRepoPanel : specialinvoke $r54.<crystal.client.ProjectPanel$14: void <init>(crystal.client.ProjectPanel,crystal.model.DataSource,crystal.client.ProjectPreferences,javax.swing.JPanel,javax.swing.JTextField,javax.swing.JCheckBox,javax.swing.JTextField,javax.swing.JPanel,javax.swing.JButton,java.util.Map,javax.swing.JTextField,crystal.client.ClientPreferences,javax.swing.JFrame)>(r0, r1, r2, r6, r13, r14, r15, r17, r19, r9, r16, r3, r5) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r19.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r54)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r19.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r54) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r13)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r13) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r14)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r14) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r15)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r15) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r17)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r17) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r19)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r19) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r60 = specialinvoke r0.<crystal.client.ProjectPanel: java.lang.String getState(boolean[])>(r12)
crystal.client.ProjectPanel.addRepoPanel : $r60 = specialinvoke r0.<crystal.client.ProjectPanel: java.lang.String getState(boolean[])>(r12) >>>>>>>> crystal.client.ProjectPanel.getState : r2 = ""
crystal.client.ProjectPanel.getState : r2 = "" >>>>>>>> crystal.client.ProjectPanel.getState : $z0 = r1[0]
crystal.client.ProjectPanel.getState : $z0 = r1[0] >>>>>>>> crystal.client.ProjectPanel.getState : if $z0 != 0
crystal.client.ProjectPanel.getState : if $z0 != 0 >>>>>>>> crystal.client.ProjectPanel.getState : $z1 = r1[1]
crystal.client.ProjectPanel.getState : $z1 = r1[1] >>>>>>>> crystal.client.ProjectPanel.getState : if $z1 != 0
crystal.client.ProjectPanel.getState : if $z1 != 0 >>>>>>>> crystal.client.ProjectPanel.getState : $z2 = r1[2]
crystal.client.ProjectPanel.getState : $z2 = r1[2] >>>>>>>> crystal.client.ProjectPanel.getState : if $z2 != 0
crystal.client.ProjectPanel.getState : if $z2 != 0 >>>>>>>> crystal.client.ProjectPanel.getState : $r6 = new java.lang.StringBuilder
crystal.client.ProjectPanel.getState : $r6 = new java.lang.StringBuilder >>>>>>>> crystal.client.ProjectPanel.getState : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
crystal.client.ProjectPanel.getState : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.client.ProjectPanel.getState : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
crystal.client.ProjectPanel.getState : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> crystal.client.ProjectPanel.getState : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("address ")
crystal.client.ProjectPanel.getState : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("address ") >>>>>>>> crystal.client.ProjectPanel.getState : r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.client.ProjectPanel.getState : r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.client.ProjectPanel.getState : $z3 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
crystal.client.ProjectPanel.getState : $z3 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> crystal.client.ProjectPanel.getState : if $z3 == 0
crystal.client.ProjectPanel.getState : if $z3 == 0 >>>>>>>> crystal.client.ProjectPanel.getState : $r10 = new java.lang.StringBuilder
crystal.client.ProjectPanel.getState : $r10 = new java.lang.StringBuilder >>>>>>>> crystal.client.ProjectPanel.getState : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
crystal.client.ProjectPanel.getState : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.client.ProjectPanel.getState : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
crystal.client.ProjectPanel.getState : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> crystal.client.ProjectPanel.getState : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": invalid")
crystal.client.ProjectPanel.getState : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": invalid") >>>>>>>> crystal.client.ProjectPanel.getState : r9 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.client.ProjectPanel.getState : r9 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.client.ProjectPanel.getState : return r9
crystal.client.ProjectPanel.getState : return r9 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r11.<javax.swing.JLabel: void setText(java.lang.String)>($r60)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r11.<javax.swing.JLabel: void setText(java.lang.String)>($r60) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r61 = specialinvoke r0.<crystal.client.ProjectPanel: java.lang.String getState(boolean[])>(r12)
crystal.client.ProjectPanel.addRepoPanel : $r61 = specialinvoke r0.<crystal.client.ProjectPanel: java.lang.String getState(boolean[])>(r12) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $z5 = virtualinvoke $r61.<java.lang.String: boolean equals(java.lang.Object)>("valid")
crystal.client.ProjectPanel.addRepoPanel : $z5 = virtualinvoke $r61.<java.lang.String: boolean equals(java.lang.Object)>("valid") >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : if $z5 == 0
crystal.client.ProjectPanel.addRepoPanel : if $z5 == 0 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r64 = <java.awt.Color: java.awt.Color RED>
crystal.client.ProjectPanel.addRepoPanel : $r64 = <java.awt.Color: java.awt.Color RED> >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r65 = virtualinvoke $r64.<java.awt.Color: java.awt.Color darker()>()
crystal.client.ProjectPanel.addRepoPanel : $r65 = virtualinvoke $r64.<java.awt.Color: java.awt.Color darker()>() >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r11.<javax.swing.JLabel: void setForeground(java.awt.Color)>($r65)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r11.<javax.swing.JLabel: void setForeground(java.awt.Color)>($r65) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r11)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r11) >>>>>>>> crystal.client.ProjectPreferences.getDataSource : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
crystal.client.ProjectPreferences.getDataSource : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> crystal.model.DataSource.getParent : return ""
crystal.model.DataSource.getParent : return "" >>>>>>>> crystal.util.ValidInputChecker.checkUrl : goto [?= return 1]
crystal.util.ValidInputChecker.checkUrl : goto [?= return 1] >>>>>>>> crystal.util.ValidInputChecker.checkUrl : return 1
crystal.util.ValidInputChecker.checkUrl : return 1 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $z4 = 1
crystal.client.ProjectPanel.addRepoPanel : $z4 = 1 >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : goto [?= z0 = $z4]
crystal.client.ProjectPanel.addRepoPanel : goto [?= z0 = $z4] >>>>>>>> crystal.client.ProjectPanel.getState : r9 = "valid"
crystal.client.ProjectPanel.getState : r9 = "valid" >>>>>>>> crystal.client.ProjectPanel.getState : goto [?= return r9]
crystal.client.ProjectPanel.getState : goto [?= return r9] >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r62 = <java.awt.Color: java.awt.Color GREEN>
crystal.client.ProjectPanel.addRepoPanel : $r62 = <java.awt.Color: java.awt.Color GREEN> >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : $r63 = virtualinvoke $r62.<java.awt.Color: java.awt.Color darker()>()
crystal.client.ProjectPanel.addRepoPanel : $r63 = virtualinvoke $r62.<java.awt.Color: java.awt.Color darker()>() >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r11.<javax.swing.JLabel: void setForeground(java.awt.Color)>($r63)
crystal.client.ProjectPanel.addRepoPanel : virtualinvoke r11.<javax.swing.JLabel: void setForeground(java.awt.Color)>($r63) >>>>>>>> crystal.client.ProjectPanel.addRepoPanel : goto [?= virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r11)]
crystal.client.ProjectPanel.addRepoPanel : goto [?= virtualinvoke r6.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r11)] >>>>>>>> crystal.client.ProjectPanel.getName : $r1 = r0.<crystal.client.ProjectPanel: java.lang.String _name>
crystal.client.ProjectPanel.getName : $r1 = r0.<crystal.client.ProjectPanel: java.lang.String _name> >>>>>>>> crystal.client.ProjectPanel.getName : return $r1
crystal.client.ProjectPanel.getName : return $r1 >>>>>>>> crystal.client.PreferencesGUIEditorFrame.getPreferencesGUIEditorFrame : <crystal.client.PreferencesGUIEditorFrame: crystal.client.PreferencesGUIEditorFrame editorFrame> = $r2
crystal.client.PreferencesGUIEditorFrame.getPreferencesGUIEditorFrame : <crystal.client.PreferencesGUIEditorFrame: crystal.client.PreferencesGUIEditorFrame editorFrame> = $r2 >>>>>>>> crystal.client.PreferencesGUIEditorFrame.getPreferencesGUIEditorFrame : $r3 = <crystal.client.PreferencesGUIEditorFrame: crystal.client.PreferencesGUIEditorFrame editorFrame>
crystal.client.PreferencesGUIEditorFrame.getPreferencesGUIEditorFrame : $r3 = <crystal.client.PreferencesGUIEditorFrame: crystal.client.PreferencesGUIEditorFrame editorFrame> >>>>>>>> crystal.client.PreferencesGUIEditorFrame.getPreferencesGUIEditorFrame : virtualinvoke $r3.<crystal.client.PreferencesGUIEditorFrame: void setVisible(boolean)>(1)
crystal.client.PreferencesGUIEditorFrame.getPreferencesGUIEditorFrame : virtualinvoke $r3.<crystal.client.PreferencesGUIEditorFrame: void setVisible(boolean)>(1) >>>>>>>> crystal.client.PreferencesGUIEditorFrame.getPreferencesGUIEditorFrame : $r4 = <crystal.client.PreferencesGUIEditorFrame: crystal.client.PreferencesGUIEditorFrame editorFrame>
crystal.client.PreferencesGUIEditorFrame.getPreferencesGUIEditorFrame : $r4 = <crystal.client.PreferencesGUIEditorFrame: crystal.client.PreferencesGUIEditorFrame editorFrame> >>>>>>>> crystal.client.PreferencesGUIEditorFrame.getPreferencesGUIEditorFrame : return $r4
crystal.client.PreferencesGUIEditorFrame.getPreferencesGUIEditorFrame : return $r4 >>>>>>>> crystal.client.PreferencesGUIEditorFrame.getPreferencesGUIEditorFrame : virtualinvoke $r1.<crystal.client.PreferencesGUIEditorFrame: void setVisible(boolean)>(1)
