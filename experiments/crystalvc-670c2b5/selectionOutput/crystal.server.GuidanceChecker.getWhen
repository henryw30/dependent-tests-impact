crystal.server.GuidanceChecker.getWhen : staticinvoke <crystal.util.ValidInputChecker: void checkNullInput(java.lang.Object)>(r3) >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r5 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>()
crystal.server.GuidanceChecker.getWhen : $r5 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>() >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r4 = <crystal.model.Relationship: java.lang.String SAME>
crystal.server.GuidanceChecker.getWhen : $r4 = <crystal.model.Relationship: java.lang.String SAME> >>>>>>>> crystal.server.GuidanceChecker.getWhen : $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4)
crystal.server.GuidanceChecker.getWhen : $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> crystal.server.GuidanceChecker.getWhen : if $z0 != 0
crystal.server.GuidanceChecker.getWhen : if $z0 != 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r6 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>()
crystal.server.GuidanceChecker.getWhen : if $z0 != 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r10 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When NOTHING>
crystal.server.GuidanceChecker.getWhen : $r10 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When NOTHING> >>>>>>>> crystal.server.GuidanceChecker.getWhen : return $r10
crystal.server.GuidanceChecker.getWhen : $r6 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>() >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r7 = <crystal.model.Relationship: java.lang.String MERGECLEAN>
crystal.server.GuidanceChecker.getWhen : $r7 = <crystal.model.Relationship: java.lang.String MERGECLEAN> >>>>>>>> crystal.server.GuidanceChecker.getWhen : $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7)
crystal.server.GuidanceChecker.getWhen : $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7) >>>>>>>> crystal.server.GuidanceChecker.getWhen : if $z1 != 0
crystal.server.GuidanceChecker.getWhen : if $z1 != 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r8 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>()
crystal.server.GuidanceChecker.getWhen : if $z1 != 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r10 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When NOTHING>
crystal.server.GuidanceChecker.getWhen : $r8 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>() >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r9 = <crystal.model.Relationship: java.lang.String MERGECONFLICT>
crystal.server.GuidanceChecker.getWhen : $r9 = <crystal.model.Relationship: java.lang.String MERGECONFLICT> >>>>>>>> crystal.server.GuidanceChecker.getWhen : $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9)
crystal.server.GuidanceChecker.getWhen : $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9) >>>>>>>> crystal.server.GuidanceChecker.getWhen : if $z2 == 0
crystal.server.GuidanceChecker.getWhen : if $z2 == 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r10 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When NOTHING>
crystal.server.GuidanceChecker.getWhen : if $z2 == 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r11 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>()
crystal.server.GuidanceChecker.getWhen : $r11 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>() >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r12 = <crystal.model.Relationship: java.lang.String BEHIND>
crystal.server.GuidanceChecker.getWhen : $r12 = <crystal.model.Relationship: java.lang.String BEHIND> >>>>>>>> crystal.server.GuidanceChecker.getWhen : $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12)
crystal.server.GuidanceChecker.getWhen : $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12) >>>>>>>> crystal.server.GuidanceChecker.getWhen : if $z3 == 0
crystal.server.GuidanceChecker.getWhen : if $z3 == 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r13 = staticinvoke <crystal.util.SetOperations: java.util.Set setDifference(java.util.Set,java.util.Set)>(r2, r0)
crystal.server.GuidanceChecker.getWhen : if $z3 == 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r17 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>()
crystal.server.GuidanceChecker.getWhen : $r17 = virtualinvoke r3.<crystal.model.Relationship: java.lang.String getName()>() >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r18 = <crystal.model.Relationship: java.lang.String AHEAD>
crystal.server.GuidanceChecker.getWhen : $r18 = <crystal.model.Relationship: java.lang.String AHEAD> >>>>>>>> crystal.server.GuidanceChecker.getWhen : $z5 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18)
crystal.server.GuidanceChecker.getWhen : $z5 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18) >>>>>>>> crystal.server.GuidanceChecker.getWhen : if $z5 == 0
crystal.server.GuidanceChecker.getWhen : if $z5 == 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r19 = staticinvoke <crystal.util.SetOperations: java.util.Set setDifference(java.util.Set,java.util.Set)>(r0, r2)
crystal.server.GuidanceChecker.getWhen : if $z5 == 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r22 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When NOTHING>
crystal.server.GuidanceChecker.getWhen : $r22 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When NOTHING> >>>>>>>> crystal.server.GuidanceChecker.getWhen : return $r22
crystal.server.GuidanceChecker.getWhen : $r19 = staticinvoke <crystal.util.SetOperations: java.util.Set setDifference(java.util.Set,java.util.Set)>(r0, r2) >>>>>>>> crystal.server.GuidanceChecker.getWhen : $z6 = interfaceinvoke $r19.<java.util.Set: boolean isEmpty()>()
crystal.server.GuidanceChecker.getWhen : $z6 = interfaceinvoke $r19.<java.util.Set: boolean isEmpty()>() >>>>>>>> crystal.server.GuidanceChecker.getWhen : if $z6 != 0
crystal.server.GuidanceChecker.getWhen : if $z6 != 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r20 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When NOW>
crystal.server.GuidanceChecker.getWhen : if $z6 != 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r21 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When LATER>
crystal.server.GuidanceChecker.getWhen : $r21 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When LATER> >>>>>>>> crystal.server.GuidanceChecker.getWhen : return $r21
crystal.server.GuidanceChecker.getWhen : $r20 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When NOW> >>>>>>>> crystal.server.GuidanceChecker.getWhen : return $r20
crystal.server.GuidanceChecker.getWhen : $r13 = staticinvoke <crystal.util.SetOperations: java.util.Set setDifference(java.util.Set,java.util.Set)>(r2, r0) >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r14 = staticinvoke <crystal.util.SetOperations: java.util.Set intersection(java.util.Set,java.util.Set)>(r1, $r13)
crystal.server.GuidanceChecker.getWhen : $r14 = staticinvoke <crystal.util.SetOperations: java.util.Set intersection(java.util.Set,java.util.Set)>(r1, $r13) >>>>>>>> crystal.server.GuidanceChecker.getWhen : $z4 = interfaceinvoke $r14.<java.util.Set: boolean isEmpty()>()
crystal.server.GuidanceChecker.getWhen : $z4 = interfaceinvoke $r14.<java.util.Set: boolean isEmpty()>() >>>>>>>> crystal.server.GuidanceChecker.getWhen : if $z4 != 0
crystal.server.GuidanceChecker.getWhen : if $z4 != 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r15 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When NOW>
crystal.server.GuidanceChecker.getWhen : if $z4 != 0 >>>>>>>> crystal.server.GuidanceChecker.getWhen : $r16 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When LATER>
crystal.server.GuidanceChecker.getWhen : $r16 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When LATER> >>>>>>>> crystal.server.GuidanceChecker.getWhen : return $r16
crystal.server.GuidanceChecker.getWhen : $r15 = <crystal.model.RevisionHistory$When: crystal.model.RevisionHistory$When NOW> >>>>>>>> crystal.server.GuidanceChecker.getWhen : return $r15
