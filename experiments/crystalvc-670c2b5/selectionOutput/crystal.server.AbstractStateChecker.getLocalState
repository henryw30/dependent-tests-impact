crystal.server.AbstractStateChecker.getLocalState : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r0) >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r10 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getLocalState : $r10 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $z0 = virtualinvoke $r10.<crystal.model.DataSource: boolean isEnabled()>()
crystal.server.AbstractStateChecker.getLocalState : $z0 = virtualinvoke $r10.<crystal.model.DataSource: boolean isEnabled()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : if $z0 != 0
crystal.server.AbstractStateChecker.getLocalState : if $z0 != 0 >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : return null
crystal.server.AbstractStateChecker.getLocalState : if $z0 != 0 >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r11 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>()
crystal.server.AbstractStateChecker.getLocalState : $r11 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : r2 = virtualinvoke $r11.<crystal.client.ClientPreferences: java.lang.String getPath()>()
crystal.server.AbstractStateChecker.getLocalState : r2 = virtualinvoke $r11.<crystal.client.ClientPreferences: java.lang.String getPath()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r12 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>()
crystal.server.AbstractStateChecker.getLocalState : $r12 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : r3 = virtualinvoke $r12.<crystal.client.ClientPreferences: java.lang.String getTempDirectory()>()
crystal.server.AbstractStateChecker.getLocalState : r3 = virtualinvoke $r12.<crystal.client.ClientPreferences: java.lang.String getTempDirectory()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r13 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getLocalState : $r13 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : r4 = virtualinvoke r0.<crystal.client.ProjectPreferences: java.lang.String getProjectCheckoutLocation(crystal.model.DataSource)>($r13)
crystal.server.AbstractStateChecker.getLocalState : r4 = virtualinvoke r0.<crystal.client.ProjectPreferences: java.lang.String getProjectCheckoutLocation(crystal.model.DataSource)>($r13) >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r19 := @caughtexception
crystal.server.AbstractStateChecker.getLocalState : r4 = virtualinvoke r0.<crystal.client.ProjectPreferences: java.lang.String getProjectCheckoutLocation(crystal.model.DataSource)>($r13) >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r27 := @caughtexception
crystal.server.AbstractStateChecker.getLocalState : r4 = virtualinvoke r0.<crystal.client.ProjectPreferences: java.lang.String getProjectCheckoutLocation(crystal.model.DataSource)>($r13) >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r14 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getLocalState : $r14 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r19 := @caughtexception
crystal.server.AbstractStateChecker.getLocalState : $r14 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r27 := @caughtexception
crystal.server.AbstractStateChecker.getLocalState : $r14 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r15 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getLocalState : $r15 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r19 := @caughtexception
crystal.server.AbstractStateChecker.getLocalState : $r15 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r27 := @caughtexception
crystal.server.AbstractStateChecker.getLocalState : $r15 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r16 = virtualinvoke $r15.<crystal.model.DataSource: java.lang.String getRemoteCmd()>()
crystal.server.AbstractStateChecker.getLocalState : $r16 = virtualinvoke $r15.<crystal.model.DataSource: java.lang.String getRemoteCmd()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r19 := @caughtexception
crystal.server.AbstractStateChecker.getLocalState : $r16 = virtualinvoke $r15.<crystal.model.DataSource: java.lang.String getRemoteCmd()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r27 := @caughtexception
crystal.server.AbstractStateChecker.getLocalState : $r16 = virtualinvoke $r15.<crystal.model.DataSource: java.lang.String getRemoteCmd()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r17 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getLocalState : $r17 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r19 := @caughtexception
crystal.server.AbstractStateChecker.getLocalState : $r17 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r27 := @caughtexception
crystal.server.AbstractStateChecker.getLocalState : $r17 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r18 = virtualinvoke $r17.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.server.AbstractStateChecker.getLocalState : $r18 = virtualinvoke $r17.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r19 := @caughtexception
crystal.server.AbstractStateChecker.getLocalState : $r18 = virtualinvoke $r17.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r27 := @caughtexception
crystal.server.AbstractStateChecker.getLocalState : $r18 = virtualinvoke $r17.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : staticinvoke <crystal.server.AbstractStateChecker: void updateLocalRepositoryAndCheckCacheError(crystal.model.DataSource,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r14, r2, r4, r3, $r16, "your own", $r18)
crystal.server.AbstractStateChecker.getLocalState : staticinvoke <crystal.server.AbstractStateChecker: void updateLocalRepositoryAndCheckCacheError(crystal.model.DataSource,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r14, r2, r4, r3, $r16, "your own", $r18) >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r19 := @caughtexception
crystal.server.AbstractStateChecker.getLocalState : staticinvoke <crystal.server.AbstractStateChecker: void updateLocalRepositoryAndCheckCacheError(crystal.model.DataSource,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r14, r2, r4, r3, $r16, "your own", $r18) >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r27 := @caughtexception
crystal.server.AbstractStateChecker.getLocalState : staticinvoke <crystal.server.AbstractStateChecker: void updateLocalRepositoryAndCheckCacheError(crystal.model.DataSource,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r14, r2, r4, r3, $r16, "your own", $r18) >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : goto [?= $r36 = newarray (java.lang.String)[1]]
crystal.server.AbstractStateChecker.getLocalState : goto [?= $r36 = newarray (java.lang.String)[1]] >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r36 = newarray (java.lang.String)[1]
crystal.server.AbstractStateChecker.getLocalState : $r36 = newarray (java.lang.String)[1] >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r36[0] = "log"
crystal.server.AbstractStateChecker.getLocalState : $r36[0] = "log" >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : r37 = $r36
crystal.server.AbstractStateChecker.getLocalState : r37 = $r36 >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : r6 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r2, r37, r4, 0)
crystal.server.AbstractStateChecker.getLocalState : r6 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r2, r37, r4, 0) >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r38 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getLocalState : $r38 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r39 = new crystal.model.RevisionHistory
crystal.server.AbstractStateChecker.getLocalState : $r39 = new crystal.model.RevisionHistory >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r40 = virtualinvoke r6.<crystal.util.RunIt$Output: java.lang.String getOutput()>()
crystal.server.AbstractStateChecker.getLocalState : $r40 = virtualinvoke r6.<crystal.util.RunIt$Output: java.lang.String getOutput()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : specialinvoke $r39.<crystal.model.RevisionHistory: void <init>(java.lang.String)>($r40)
crystal.server.AbstractStateChecker.getLocalState : specialinvoke $r39.<crystal.model.RevisionHistory: void <init>(java.lang.String)>($r40) >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : virtualinvoke $r38.<crystal.model.DataSource: void setHistory(crystal.model.RevisionHistory)>($r39)
crystal.server.AbstractStateChecker.getLocalState : virtualinvoke $r38.<crystal.model.DataSource: void setHistory(crystal.model.RevisionHistory)>($r39) >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r41 = new java.io.File
crystal.server.AbstractStateChecker.getLocalState : $r41 = new java.io.File >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r42 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getLocalState : $r42 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r43 = virtualinvoke $r42.<crystal.model.DataSource: java.lang.String getCloneString()>()
crystal.server.AbstractStateChecker.getLocalState : $r43 = virtualinvoke $r42.<crystal.model.DataSource: java.lang.String getCloneString()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : specialinvoke $r41.<java.io.File: void <init>(java.lang.String)>($r43)
crystal.server.AbstractStateChecker.getLocalState : specialinvoke $r41.<java.io.File: void <init>(java.lang.String)>($r43) >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $z1 = virtualinvoke $r41.<java.io.File: boolean exists()>()
crystal.server.AbstractStateChecker.getLocalState : $z1 = virtualinvoke $r41.<java.io.File: boolean exists()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : if $z1 == 0
crystal.server.AbstractStateChecker.getLocalState : if $z1 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r44 = newarray (java.lang.String)[1]
crystal.server.AbstractStateChecker.getLocalState : if $z1 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r52 = newarray (java.lang.String)[1]
crystal.server.AbstractStateChecker.getLocalState : $r52 = newarray (java.lang.String)[1] >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r52[0] = "heads"
crystal.server.AbstractStateChecker.getLocalState : $r52[0] = "heads" >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : r53 = $r52
crystal.server.AbstractStateChecker.getLocalState : r53 = $r52 >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : r54 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r2, r53, r4, 0)
crystal.server.AbstractStateChecker.getLocalState : r54 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r2, r53, r4, 0) >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $z4 = staticinvoke <crystal.server.AbstractStateChecker: boolean hasTwoHeads(crystal.util.RunIt$Output,java.util.Map)>(r54, r1)
crystal.server.AbstractStateChecker.getLocalState : $z4 = staticinvoke <crystal.server.AbstractStateChecker: boolean hasTwoHeads(crystal.util.RunIt$Output,java.util.Map)>(r54, r1) >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : if $z4 == 0
crystal.server.AbstractStateChecker.getLocalState : if $z4 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r55 = <crystal.model.LocalStateResult: java.lang.String MUST_RESOLVE>
crystal.server.AbstractStateChecker.getLocalState : if $z4 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r56 = <crystal.model.LocalStateResult: java.lang.String ALL_CLEAR>
crystal.server.AbstractStateChecker.getLocalState : $r56 = <crystal.model.LocalStateResult: java.lang.String ALL_CLEAR> >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : return $r56
crystal.server.AbstractStateChecker.getLocalState : $r55 = <crystal.model.LocalStateResult: java.lang.String MUST_RESOLVE> >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : return $r55
crystal.server.AbstractStateChecker.getLocalState : $r44 = newarray (java.lang.String)[1] >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r44[0] = "status"
crystal.server.AbstractStateChecker.getLocalState : $r44[0] = "status" >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : r7 = $r44
crystal.server.AbstractStateChecker.getLocalState : r7 = $r44 >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r45 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getLocalState : $r45 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r46 = virtualinvoke $r45.<crystal.model.DataSource: java.lang.String getCloneString()>()
crystal.server.AbstractStateChecker.getLocalState : $r46 = virtualinvoke $r45.<crystal.model.DataSource: java.lang.String getCloneString()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : r47 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r2, r7, $r46, 0)
crystal.server.AbstractStateChecker.getLocalState : r47 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r2, r7, $r46, 0) >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r48 = new java.util.StringTokenizer
crystal.server.AbstractStateChecker.getLocalState : $r48 = new java.util.StringTokenizer >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r49 = virtualinvoke r47.<crystal.util.RunIt$Output: java.lang.String getOutput()>()
crystal.server.AbstractStateChecker.getLocalState : $r49 = virtualinvoke r47.<crystal.util.RunIt$Output: java.lang.String getOutput()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r50 = virtualinvoke $r49.<java.lang.String: java.lang.String trim()>()
crystal.server.AbstractStateChecker.getLocalState : $r50 = virtualinvoke $r49.<java.lang.String: java.lang.String trim()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : specialinvoke $r48.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r50, "\n")
crystal.server.AbstractStateChecker.getLocalState : specialinvoke $r48.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r50, "\n") >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : r8 = $r48
crystal.server.AbstractStateChecker.getLocalState : r8 = $r48 >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $z2 = virtualinvoke r8.<java.util.StringTokenizer: boolean hasMoreTokens()>()
crystal.server.AbstractStateChecker.getLocalState : $z2 = virtualinvoke r8.<java.util.StringTokenizer: boolean hasMoreTokens()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : if $z2 == 0
crystal.server.AbstractStateChecker.getLocalState : if $z2 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : r9 = virtualinvoke r8.<java.util.StringTokenizer: java.lang.String nextToken()>()
crystal.server.AbstractStateChecker.getLocalState : if $z2 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r52 = newarray (java.lang.String)[1]
crystal.server.AbstractStateChecker.getLocalState : r9 = virtualinvoke r8.<java.util.StringTokenizer: java.lang.String nextToken()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $z3 = virtualinvoke r9.<java.lang.String: boolean startsWith(java.lang.String)>("?")
crystal.server.AbstractStateChecker.getLocalState : $z3 = virtualinvoke r9.<java.lang.String: boolean startsWith(java.lang.String)>("?") >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : if $z3 != 0
crystal.server.AbstractStateChecker.getLocalState : if $z3 != 0 >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r51 = <crystal.model.LocalStateResult: java.lang.String UNCHECKPOINTED>
crystal.server.AbstractStateChecker.getLocalState : if $z3 != 0 >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : goto [?= $z2 = virtualinvoke r8.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
crystal.server.AbstractStateChecker.getLocalState : goto [?= $z2 = virtualinvoke r8.<java.util.StringTokenizer: boolean hasMoreTokens()>()] >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $z2 = virtualinvoke r8.<java.util.StringTokenizer: boolean hasMoreTokens()>()
crystal.server.AbstractStateChecker.getLocalState : $r51 = <crystal.model.LocalStateResult: java.lang.String UNCHECKPOINTED> >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : return $r51
crystal.server.AbstractStateChecker.getLocalState : r28 = $r27 >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r29 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getLocalState : $r29 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getLocalState : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r30 = <crystal.model.LocalStateResult: java.lang.String ERROR>
crystal.server.AbstractStateChecker.getLocalState : $r30 = <crystal.model.LocalStateResult: java.lang.String ERROR> >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30)
crystal.server.AbstractStateChecker.getLocalState : $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30) >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
crystal.server.AbstractStateChecker.getLocalState : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r33 = virtualinvoke r28.<java.io.IOException: java.lang.String getMessage()>()
crystal.server.AbstractStateChecker.getLocalState : $r33 = virtualinvoke r28.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33)
crystal.server.AbstractStateChecker.getLocalState : $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33) >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getLocalState : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : return $r35
crystal.server.AbstractStateChecker.getLocalState : r5 = $r19 >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r20 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getLocalState : $r20 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getLocalState : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r21 = <crystal.model.LocalStateResult: java.lang.String ERROR>
crystal.server.AbstractStateChecker.getLocalState : $r21 = <crystal.model.LocalStateResult: java.lang.String ERROR> >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)
crystal.server.AbstractStateChecker.getLocalState : $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21) >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
crystal.server.AbstractStateChecker.getLocalState : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r24 = virtualinvoke r5.<crystal.server.AbstractStateChecker$OperationException: java.lang.String getMessage()>()
crystal.server.AbstractStateChecker.getLocalState : $r24 = virtualinvoke r5.<crystal.server.AbstractStateChecker$OperationException: java.lang.String getMessage()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24)
crystal.server.AbstractStateChecker.getLocalState : $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24) >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getLocalState : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getLocalState : return $r26
