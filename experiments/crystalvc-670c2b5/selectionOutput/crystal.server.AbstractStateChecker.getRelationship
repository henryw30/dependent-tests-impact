crystal.server.AbstractStateChecker.getRelationship : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r0) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r1)
crystal.server.AbstractStateChecker.getRelationship : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r1) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r4 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>(class "crystal/server/AbstractStateChecker")
crystal.server.AbstractStateChecker.getRelationship : r4 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>(class "crystal/server/AbstractStateChecker") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r23 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getRelationship : $r23 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $z0 = virtualinvoke $r23.<crystal.model.DataSource: boolean isEnabled()>()
crystal.server.AbstractStateChecker.getRelationship : $z0 = virtualinvoke $r23.<crystal.model.DataSource: boolean isEnabled()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $z0 == 0
crystal.server.AbstractStateChecker.getRelationship : if $z0 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $z1 = virtualinvoke r1.<crystal.model.DataSource: boolean isEnabled()>()
crystal.server.AbstractStateChecker.getRelationship : if $z0 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return null
crystal.server.AbstractStateChecker.getRelationship : $z1 = virtualinvoke r1.<crystal.model.DataSource: boolean isEnabled()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $z1 != 0
crystal.server.AbstractStateChecker.getRelationship : if $z1 != 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return null
crystal.server.AbstractStateChecker.getRelationship : if $z1 != 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r24 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getRelationship : $r24 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r5 = virtualinvoke r0.<crystal.client.ProjectPreferences: java.lang.String getProjectCheckoutLocation(crystal.model.DataSource)>($r24)
crystal.server.AbstractStateChecker.getRelationship : r5 = virtualinvoke r0.<crystal.client.ProjectPreferences: java.lang.String getProjectCheckoutLocation(crystal.model.DataSource)>($r24) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r6 = virtualinvoke r0.<crystal.client.ProjectPreferences: java.lang.String getProjectCheckoutLocation(crystal.model.DataSource)>(r1)
crystal.server.AbstractStateChecker.getRelationship : r6 = virtualinvoke r0.<crystal.client.ProjectPreferences: java.lang.String getProjectCheckoutLocation(crystal.model.DataSource)>(r1) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r25 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>()
crystal.server.AbstractStateChecker.getRelationship : $r25 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r7 = virtualinvoke $r25.<crystal.client.ClientPreferences: java.lang.String getPath()>()
crystal.server.AbstractStateChecker.getRelationship : r7 = virtualinvoke $r25.<crystal.client.ClientPreferences: java.lang.String getPath()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r26 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>()
crystal.server.AbstractStateChecker.getRelationship : $r26 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r8 = virtualinvoke $r26.<crystal.client.ClientPreferences: java.lang.String getTempDirectory()>()
crystal.server.AbstractStateChecker.getRelationship : r8 = virtualinvoke $r26.<crystal.client.ClientPreferences: java.lang.String getTempDirectory()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r27 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r27 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tempMine_")
crystal.server.AbstractStateChecker.getRelationship : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tempMine_") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r29 = staticinvoke <crystal.util.TimeUtility: java.lang.String getCurrentLSMRDateString()>()
crystal.server.AbstractStateChecker.getRelationship : $r29 = staticinvoke <crystal.util.TimeUtility: java.lang.String getCurrentLSMRDateString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29)
crystal.server.AbstractStateChecker.getRelationship : $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r9 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : r9 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r35 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r9 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r43 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r9 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r31 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getRemoteCmd()>()
crystal.server.AbstractStateChecker.getRelationship : $r31 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getRemoteCmd()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r35 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r31 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getRemoteCmd()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r43 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r31 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getRemoteCmd()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r32 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.server.AbstractStateChecker.getRelationship : $r32 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r35 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r32 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r43 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r32 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r33 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getRelationship : $r33 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r35 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r33 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r43 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r33 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r34 = virtualinvoke $r33.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.server.AbstractStateChecker.getRelationship : $r34 = virtualinvoke $r33.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r35 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r34 = virtualinvoke $r33.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r43 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r34 = virtualinvoke $r33.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : staticinvoke <crystal.server.AbstractStateChecker: void updateLocalRepositoryAndCheckCacheError(crystal.model.DataSource,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r7, r6, r8, $r31, $r32, $r34)
crystal.server.AbstractStateChecker.getRelationship : staticinvoke <crystal.server.AbstractStateChecker: void updateLocalRepositoryAndCheckCacheError(crystal.model.DataSource,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r7, r6, r8, $r31, $r32, $r34) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r35 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : staticinvoke <crystal.server.AbstractStateChecker: void updateLocalRepositoryAndCheckCacheError(crystal.model.DataSource,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r7, r6, r8, $r31, $r32, $r34) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r43 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : staticinvoke <crystal.server.AbstractStateChecker: void updateLocalRepositoryAndCheckCacheError(crystal.model.DataSource,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r7, r6, r8, $r31, $r32, $r34) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= $r52 = newarray (java.lang.String)[1]]
crystal.server.AbstractStateChecker.getRelationship : goto [?= $r52 = newarray (java.lang.String)[1]] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r52 = newarray (java.lang.String)[1]
crystal.server.AbstractStateChecker.getRelationship : $r52 = newarray (java.lang.String)[1] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r52[0] = "log"
crystal.server.AbstractStateChecker.getRelationship : $r52[0] = "log" >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r53 = $r52
crystal.server.AbstractStateChecker.getRelationship : r53 = $r52 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r11 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r7, r53, r6, 0)
crystal.server.AbstractStateChecker.getRelationship : r53 = $r52 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r54 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r12 = $r54 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r55 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r55 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r55.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r55.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r56 = <crystal.model.Relationship: java.lang.String ERROR>
crystal.server.AbstractStateChecker.getRelationship : $r56 = <crystal.model.Relationship: java.lang.String ERROR> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56)
crystal.server.AbstractStateChecker.getRelationship : $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Couldn\'t get the log: ")
crystal.server.AbstractStateChecker.getRelationship : $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Couldn\'t get the log: ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r59 = virtualinvoke r12.<java.io.IOException: java.lang.String getMessage()>()
crystal.server.AbstractStateChecker.getRelationship : $r59 = virtualinvoke r12.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59)
crystal.server.AbstractStateChecker.getRelationship : $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r61
crystal.server.AbstractStateChecker.getRelationship : r11 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r7, r53, r6, 0) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= $r62 = new crystal.model.RevisionHistory]
crystal.server.AbstractStateChecker.getRelationship : r11 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r7, r53, r6, 0) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r54 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : goto [?= $r62 = new crystal.model.RevisionHistory] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r62 = new crystal.model.RevisionHistory
crystal.server.AbstractStateChecker.getRelationship : $r62 = new crystal.model.RevisionHistory >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r63 = virtualinvoke r11.<crystal.util.RunIt$Output: java.lang.String getOutput()>()
crystal.server.AbstractStateChecker.getRelationship : $r63 = virtualinvoke r11.<crystal.util.RunIt$Output: java.lang.String getOutput()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r62.<crystal.model.RevisionHistory: void <init>(java.lang.String)>($r63)
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r62.<crystal.model.RevisionHistory: void <init>(java.lang.String)>($r63) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r64 = $r62
crystal.server.AbstractStateChecker.getRelationship : r64 = $r62 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : virtualinvoke r1.<crystal.model.DataSource: void setHistory(crystal.model.RevisionHistory)>(r64)
crystal.server.AbstractStateChecker.getRelationship : virtualinvoke r1.<crystal.model.DataSource: void setHistory(crystal.model.RevisionHistory)>(r64) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r65 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getRelationship : $r65 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r13 = virtualinvoke $r65.<crystal.model.DataSource: crystal.model.RevisionHistory getHistory()>()
crystal.server.AbstractStateChecker.getRelationship : r13 = virtualinvoke $r65.<crystal.model.DataSource: crystal.model.RevisionHistory getHistory()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if r13 != null
crystal.server.AbstractStateChecker.getRelationship : if r13 != null >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r66 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : if r13 != null >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $z2 = virtualinvoke r13.<crystal.model.RevisionHistory: boolean equals(java.lang.Object)>(r64)
crystal.server.AbstractStateChecker.getRelationship : $z2 = virtualinvoke r13.<crystal.model.RevisionHistory: boolean equals(java.lang.Object)>(r64) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $z2 == 0
crystal.server.AbstractStateChecker.getRelationship : if $z2 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r71 = <crystal.model.Relationship: java.lang.String SAME>
crystal.server.AbstractStateChecker.getRelationship : if $z2 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $z3 = virtualinvoke r13.<crystal.model.RevisionHistory: boolean superHistory(crystal.model.RevisionHistory)>(r64)
crystal.server.AbstractStateChecker.getRelationship : $z3 = virtualinvoke r13.<crystal.model.RevisionHistory: boolean superHistory(crystal.model.RevisionHistory)>(r64) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $z3 == 0
crystal.server.AbstractStateChecker.getRelationship : if $z3 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r72 = <crystal.model.Relationship: java.lang.String AHEAD>
crystal.server.AbstractStateChecker.getRelationship : if $z3 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $z4 = virtualinvoke r13.<crystal.model.RevisionHistory: boolean subHistory(crystal.model.RevisionHistory)>(r64)
crystal.server.AbstractStateChecker.getRelationship : $z4 = virtualinvoke r13.<crystal.model.RevisionHistory: boolean subHistory(crystal.model.RevisionHistory)>(r64) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $z4 == 0
crystal.server.AbstractStateChecker.getRelationship : if $z4 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r73 = <crystal.model.Relationship: java.lang.String BEHIND>
crystal.server.AbstractStateChecker.getRelationship : if $z4 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r74 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getRelationship : $r74 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $z5 = virtualinvoke $r74.<crystal.model.DataSource: boolean hasHistoryChanged()>()
crystal.server.AbstractStateChecker.getRelationship : $z5 = virtualinvoke $r74.<crystal.model.DataSource: boolean hasHistoryChanged()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $z5 != 0
crystal.server.AbstractStateChecker.getRelationship : if $z5 != 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $z6 = virtualinvoke r1.<crystal.model.DataSource: boolean hasHistoryChanged()>()
crystal.server.AbstractStateChecker.getRelationship : if $z5 != 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r75 = newarray (java.lang.String)[3]
crystal.server.AbstractStateChecker.getRelationship : $r75 = newarray (java.lang.String)[3] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r75[0] = "clone"
crystal.server.AbstractStateChecker.getRelationship : $r75[0] = "clone" >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r75[1] = r5
crystal.server.AbstractStateChecker.getRelationship : $r75[1] = r5 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r75[2] = r9
crystal.server.AbstractStateChecker.getRelationship : $r75[2] = r9 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r14 = $r75
crystal.server.AbstractStateChecker.getRelationship : r14 = $r75 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r7, r14, r8, 0)
crystal.server.AbstractStateChecker.getRelationship : r14 = $r75 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r76 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r16 = $r76 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r77 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r77 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r77.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r77.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r78 = <crystal.model.Relationship: java.lang.String ERROR>
crystal.server.AbstractStateChecker.getRelationship : $r78 = <crystal.model.Relationship: java.lang.String ERROR> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r79 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78)
crystal.server.AbstractStateChecker.getRelationship : $r79 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Couldn\'t make a temp clone: ")
crystal.server.AbstractStateChecker.getRelationship : $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Couldn\'t make a temp clone: ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r81 = virtualinvoke r16.<java.io.IOException: java.lang.String getMessage()>()
crystal.server.AbstractStateChecker.getRelationship : $r81 = virtualinvoke r16.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r82 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81)
crystal.server.AbstractStateChecker.getRelationship : $r82 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r83
crystal.server.AbstractStateChecker.getRelationship : staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r7, r14, r8, 0) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= $r84 = newarray (java.lang.String)[2]]
crystal.server.AbstractStateChecker.getRelationship : staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r7, r14, r8, 0) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r76 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : goto [?= $r84 = newarray (java.lang.String)[2]] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r84 = newarray (java.lang.String)[2]
crystal.server.AbstractStateChecker.getRelationship : $r84 = newarray (java.lang.String)[2] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r84[0] = "pull"
crystal.server.AbstractStateChecker.getRelationship : $r84[0] = "pull" >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r84[1] = r6
crystal.server.AbstractStateChecker.getRelationship : $r84[1] = r6 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r85 = $r84
crystal.server.AbstractStateChecker.getRelationship : r85 = $r84 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r86 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : r85 = $r84 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r91 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r17 = $r91 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r92 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r92 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r92.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r92.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r93 = <crystal.model.Relationship: java.lang.String ERROR>
crystal.server.AbstractStateChecker.getRelationship : $r93 = <crystal.model.Relationship: java.lang.String ERROR> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r94 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r93)
crystal.server.AbstractStateChecker.getRelationship : $r94 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r93) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Couldn\'t pull into my temp clone: ")
crystal.server.AbstractStateChecker.getRelationship : $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Couldn\'t pull into my temp clone: ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r96 = virtualinvoke r17.<java.io.IOException: java.lang.String getMessage()>()
crystal.server.AbstractStateChecker.getRelationship : $r96 = virtualinvoke r17.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r97 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r96)
crystal.server.AbstractStateChecker.getRelationship : $r97 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r96) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r98
crystal.server.AbstractStateChecker.getRelationship : $r86 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r86.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : $r86 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r91 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r86.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r86.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r91 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9)
crystal.server.AbstractStateChecker.getRelationship : $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r91 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r91 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r90 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r7, r85, $r89, 0)
crystal.server.AbstractStateChecker.getRelationship : $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r91 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r90 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r7, r85, $r89, 0) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= $r99 = virtualinvoke r90.<crystal.util.RunIt$Output: java.lang.String getOutput()>()]
crystal.server.AbstractStateChecker.getRelationship : r90 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r7, r85, $r89, 0) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r91 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : goto [?= $r99 = virtualinvoke r90.<crystal.util.RunIt$Output: java.lang.String getOutput()>()] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r99 = virtualinvoke r90.<crystal.util.RunIt$Output: java.lang.String getOutput()>()
crystal.server.AbstractStateChecker.getRelationship : $r99 = virtualinvoke r90.<crystal.util.RunIt$Output: java.lang.String getOutput()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r100 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r100 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r100.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r100.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(run \'")
crystal.server.AbstractStateChecker.getRelationship : $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(run \'") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r102 = virtualinvoke r3.<crystal.model.DataSource$RepoKind: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r102 = virtualinvoke r3.<crystal.model.DataSource$RepoKind: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r103 = virtualinvoke $r102.<java.lang.String: java.lang.String toLowerCase()>()
crystal.server.AbstractStateChecker.getRelationship : $r103 = virtualinvoke $r102.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r104 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r103)
crystal.server.AbstractStateChecker.getRelationship : $r104 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r103) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" heads\' to see heads, \'")
crystal.server.AbstractStateChecker.getRelationship : $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" heads\' to see heads, \'") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r106 = virtualinvoke r3.<crystal.model.DataSource$RepoKind: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r106 = virtualinvoke r3.<crystal.model.DataSource$RepoKind: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r107 = virtualinvoke $r106.<java.lang.String: java.lang.String toLowerCase()>()
crystal.server.AbstractStateChecker.getRelationship : $r107 = virtualinvoke $r106.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r108 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r107)
crystal.server.AbstractStateChecker.getRelationship : $r108 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r107) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" merge\' to merge)")
crystal.server.AbstractStateChecker.getRelationship : $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" merge\' to merge)") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $i0 = virtualinvoke $r99.<java.lang.String: int indexOf(java.lang.String)>($r110)
crystal.server.AbstractStateChecker.getRelationship : $i0 = virtualinvoke $r99.<java.lang.String: int indexOf(java.lang.String)>($r110) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $i0 < 0
crystal.server.AbstractStateChecker.getRelationship : if $i0 < 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r111 = newarray (java.lang.String)[2]
crystal.server.AbstractStateChecker.getRelationship : if $i0 < 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r147 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r147 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r147.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r147.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r148 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crystal is having trouble comparing")
crystal.server.AbstractStateChecker.getRelationship : $r148 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crystal is having trouble comparing") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r149 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)
crystal.server.AbstractStateChecker.getRelationship : $r149 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r150 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ")
crystal.server.AbstractStateChecker.getRelationship : $r150 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r151 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)
crystal.server.AbstractStateChecker.getRelationship : $r151 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r152 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
crystal.server.AbstractStateChecker.getRelationship : $r152 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r153 = virtualinvoke r90.<crystal.util.RunIt$Output: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r153 = virtualinvoke r90.<crystal.util.RunIt$Output: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r154 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r153)
crystal.server.AbstractStateChecker.getRelationship : $r154 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r153) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r155 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r155 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : virtualinvoke r4.<org.apache.log4j.Logger: void error(java.lang.Object)>($r155)
crystal.server.AbstractStateChecker.getRelationship : virtualinvoke r4.<org.apache.log4j.Logger: void error(java.lang.Object)>($r155) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r156 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r156 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r156.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r156.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r157 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crystal is having trouble comparing\n")
crystal.server.AbstractStateChecker.getRelationship : $r157 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crystal is having trouble comparing\n") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r158 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)
crystal.server.AbstractStateChecker.getRelationship : $r158 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r159 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ")
crystal.server.AbstractStateChecker.getRelationship : $r159 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r160 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)
crystal.server.AbstractStateChecker.getRelationship : $r160 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r161 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
crystal.server.AbstractStateChecker.getRelationship : $r161 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r162 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("for the repository ")
crystal.server.AbstractStateChecker.getRelationship : $r162 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("for the repository ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r163 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.server.AbstractStateChecker.getRelationship : $r163 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r164 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r163)
crystal.server.AbstractStateChecker.getRelationship : $r164 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r163) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r165 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in project ")
crystal.server.AbstractStateChecker.getRelationship : $r165 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in project ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r166 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getRelationship : $r166 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r167 = virtualinvoke $r166.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.server.AbstractStateChecker.getRelationship : $r167 = virtualinvoke $r166.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r168 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r167)
crystal.server.AbstractStateChecker.getRelationship : $r168 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r167) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r169 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".\n")
crystal.server.AbstractStateChecker.getRelationship : $r169 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".\n") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r170 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : r170 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r171 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r171 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r171.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r171.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r172 = <crystal.model.Relationship: java.lang.String ERROR>
crystal.server.AbstractStateChecker.getRelationship : $r172 = <crystal.model.Relationship: java.lang.String ERROR> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r173 = virtualinvoke $r171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r172)
crystal.server.AbstractStateChecker.getRelationship : $r173 = virtualinvoke $r171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r172) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r174 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
crystal.server.AbstractStateChecker.getRelationship : $r174 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r175 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r170)
crystal.server.AbstractStateChecker.getRelationship : $r175 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r170) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r176 = virtualinvoke $r175.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r176 = virtualinvoke $r175.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r176
crystal.server.AbstractStateChecker.getRelationship : $r111 = newarray (java.lang.String)[2] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r111[0] = "merge"
crystal.server.AbstractStateChecker.getRelationship : $r111[0] = "merge" >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r111[1] = "--noninteractive"
crystal.server.AbstractStateChecker.getRelationship : $r111[1] = "--noninteractive" >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r112 = $r111
crystal.server.AbstractStateChecker.getRelationship : r112 = $r111 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r113 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : r112 = $r111 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r118 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r18 = $r118 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r119 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r119 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r119.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r119.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r120 = <crystal.model.Relationship: java.lang.String ERROR>
crystal.server.AbstractStateChecker.getRelationship : $r120 = <crystal.model.Relationship: java.lang.String ERROR> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r121 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r120)
crystal.server.AbstractStateChecker.getRelationship : $r121 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r120) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Couldn\'t execute merge: ")
crystal.server.AbstractStateChecker.getRelationship : $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Couldn\'t execute merge: ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r123 = virtualinvoke r18.<java.io.IOException: java.lang.String getMessage()>()
crystal.server.AbstractStateChecker.getRelationship : $r123 = virtualinvoke r18.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r124 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r123)
crystal.server.AbstractStateChecker.getRelationship : $r124 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r123) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r125
crystal.server.AbstractStateChecker.getRelationship : $r113 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r113.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : $r113 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r118 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r113.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r113.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r118 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r115 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9)
crystal.server.AbstractStateChecker.getRelationship : $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r118 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r115 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r115 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r118 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r117 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r7, r112, $r116, 0)
crystal.server.AbstractStateChecker.getRelationship : $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r118 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r117 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r7, r112, $r116, 0) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= $r126 = virtualinvoke r117.<crystal.util.RunIt$Output: java.lang.String getOutput()>()]
crystal.server.AbstractStateChecker.getRelationship : r117 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r7, r112, $r116, 0) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r118 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : goto [?= $r126 = virtualinvoke r117.<crystal.util.RunIt$Output: java.lang.String getOutput()>()] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r126 = virtualinvoke r117.<crystal.util.RunIt$Output: java.lang.String getOutput()>()
crystal.server.AbstractStateChecker.getRelationship : $r126 = virtualinvoke r117.<crystal.util.RunIt$Output: java.lang.String getOutput()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $i1 = virtualinvoke $r126.<java.lang.String: int indexOf(java.lang.String)>("(branch merge, don\'t forget to commit)")
crystal.server.AbstractStateChecker.getRelationship : $i1 = virtualinvoke $r126.<java.lang.String: int indexOf(java.lang.String)>("(branch merge, don\'t forget to commit)") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $i1 < 0
crystal.server.AbstractStateChecker.getRelationship : if $i1 < 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r127 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getRelationship : if $i1 < 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r20 = <crystal.model.Relationship: java.lang.String MERGECONFLICT>
crystal.server.AbstractStateChecker.getRelationship : r20 = <crystal.model.Relationship: java.lang.String MERGECONFLICT> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= $r177 = new java.io.File]
crystal.server.AbstractStateChecker.getRelationship : goto [?= $r177 = new java.io.File] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r177 = new java.io.File
crystal.server.AbstractStateChecker.getRelationship : $r177 = new java.io.File >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r178 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r178 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r178.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r178.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r179 = virtualinvoke $r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)
crystal.server.AbstractStateChecker.getRelationship : $r179 = virtualinvoke $r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r180 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9)
crystal.server.AbstractStateChecker.getRelationship : $r180 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r181 = virtualinvoke $r180.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r181 = virtualinvoke $r180.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r177.<java.io.File: void <init>(java.lang.String)>($r181)
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r177.<java.io.File: void <init>(java.lang.String)>($r181) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : staticinvoke <crystal.util.RunIt: boolean deleteDirectory(java.io.File)>($r177)
crystal.server.AbstractStateChecker.getRelationship : staticinvoke <crystal.util.RunIt: boolean deleteDirectory(java.io.File)>($r177) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return r20
crystal.server.AbstractStateChecker.getRelationship : $r127 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r128 = virtualinvoke $r127.<crystal.model.DataSource: java.lang.String getCompileCommand()>()
crystal.server.AbstractStateChecker.getRelationship : r128 = virtualinvoke $r127.<crystal.model.DataSource: java.lang.String getCompileCommand()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if r128 == null
crystal.server.AbstractStateChecker.getRelationship : if r128 == null >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r129 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : if r128 == null >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r20 = <crystal.model.Relationship: java.lang.String MERGECLEAN>
crystal.server.AbstractStateChecker.getRelationship : if r128 == null >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r138 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r139 = $r138 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r140 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r140 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r140.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r140.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r141 = <crystal.model.Relationship: java.lang.String ERROR>
crystal.server.AbstractStateChecker.getRelationship : $r141 = <crystal.model.Relationship: java.lang.String ERROR> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r142 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r141)
crystal.server.AbstractStateChecker.getRelationship : $r142 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r141) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r143 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Had and IO error trying to either compile or run tests: ")
crystal.server.AbstractStateChecker.getRelationship : $r143 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Had and IO error trying to either compile or run tests: ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r144 = virtualinvoke r139.<java.io.IOException: java.lang.String getMessage()>()
crystal.server.AbstractStateChecker.getRelationship : $r144 = virtualinvoke r139.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r145 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r144)
crystal.server.AbstractStateChecker.getRelationship : $r145 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r144) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r146 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r146 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r146
crystal.server.AbstractStateChecker.getRelationship : r20 = <crystal.model.Relationship: java.lang.String MERGECLEAN> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)]
crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= $r177 = new java.io.File]
crystal.server.AbstractStateChecker.getRelationship : $r129 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r129.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : $r129 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r138 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r129.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r130 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r129.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r138 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r130 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9)
crystal.server.AbstractStateChecker.getRelationship : $r130 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r138 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r132 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r138 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r132 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r19 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output tryCommand(java.lang.String,java.lang.String)>(r128, $r132)
crystal.server.AbstractStateChecker.getRelationship : $r132 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r138 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r19 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output tryCommand(java.lang.String,java.lang.String)>(r128, $r132) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $i2 = virtualinvoke r19.<crystal.util.RunIt$Output: int getStatus()>()
crystal.server.AbstractStateChecker.getRelationship : r19 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output tryCommand(java.lang.String,java.lang.String)>(r128, $r132) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r138 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $i2 = virtualinvoke r19.<crystal.util.RunIt$Output: int getStatus()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $i2 == 0
crystal.server.AbstractStateChecker.getRelationship : $i2 = virtualinvoke r19.<crystal.util.RunIt$Output: int getStatus()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r138 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : if $i2 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r20 = <crystal.model.Relationship: java.lang.String COMPILECONFLICT>
crystal.server.AbstractStateChecker.getRelationship : if $i2 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r133 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getRelationship : if $i2 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r138 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r133 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r21 = virtualinvoke $r133.<crystal.model.DataSource: java.lang.String getTestCommand()>()
crystal.server.AbstractStateChecker.getRelationship : $r133 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r138 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r21 = virtualinvoke $r133.<crystal.model.DataSource: java.lang.String getTestCommand()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if r21 == null
crystal.server.AbstractStateChecker.getRelationship : r21 = virtualinvoke $r133.<crystal.model.DataSource: java.lang.String getTestCommand()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r138 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : if r21 == null >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r134 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : if r21 == null >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r20 = <crystal.model.Relationship: java.lang.String MERGECLEAN>
crystal.server.AbstractStateChecker.getRelationship : if r21 == null >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r138 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r20 = <crystal.model.Relationship: java.lang.String MERGECLEAN> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)]
crystal.server.AbstractStateChecker.getRelationship : r20 = <crystal.model.Relationship: java.lang.String MERGECLEAN> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r138 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)]
crystal.server.AbstractStateChecker.getRelationship : $r134 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r134.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : $r134 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r138 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r134.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r135 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r134.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r138 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r135 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r136 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9)
crystal.server.AbstractStateChecker.getRelationship : $r135 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r138 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r136 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r137 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r136 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r138 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r137 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r22 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output tryCommand(java.lang.String,java.lang.String)>(r21, $r137)
crystal.server.AbstractStateChecker.getRelationship : $r137 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r138 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r22 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output tryCommand(java.lang.String,java.lang.String)>(r21, $r137) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $i3 = virtualinvoke r22.<crystal.util.RunIt$Output: int getStatus()>()
crystal.server.AbstractStateChecker.getRelationship : r22 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output tryCommand(java.lang.String,java.lang.String)>(r21, $r137) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r138 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $i3 = virtualinvoke r22.<crystal.util.RunIt$Output: int getStatus()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $i3 == 0
crystal.server.AbstractStateChecker.getRelationship : $i3 = virtualinvoke r22.<crystal.util.RunIt$Output: int getStatus()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r138 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : if $i3 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r20 = <crystal.model.Relationship: java.lang.String TESTCONFLICT>
crystal.server.AbstractStateChecker.getRelationship : if $i3 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r20 = <crystal.model.Relationship: java.lang.String MERGECLEAN>
crystal.server.AbstractStateChecker.getRelationship : if $i3 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r138 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r20 = <crystal.model.Relationship: java.lang.String MERGECLEAN> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)]
crystal.server.AbstractStateChecker.getRelationship : r20 = <crystal.model.Relationship: java.lang.String MERGECLEAN> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r138 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)]
crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r138 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r20 = <crystal.model.Relationship: java.lang.String TESTCONFLICT> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)]
crystal.server.AbstractStateChecker.getRelationship : r20 = <crystal.model.Relationship: java.lang.String TESTCONFLICT> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r138 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)]
crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r138 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r20 = <crystal.model.Relationship: java.lang.String COMPILECONFLICT> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)]
crystal.server.AbstractStateChecker.getRelationship : r20 = <crystal.model.Relationship: java.lang.String COMPILECONFLICT> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r138 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)]
crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r138 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $z6 = virtualinvoke r1.<crystal.model.DataSource: boolean hasHistoryChanged()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $z6 != 0
crystal.server.AbstractStateChecker.getRelationship : if $z6 != 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return r2
crystal.server.AbstractStateChecker.getRelationship : if $z6 != 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r75 = newarray (java.lang.String)[3]
crystal.server.AbstractStateChecker.getRelationship : $r73 = <crystal.model.Relationship: java.lang.String BEHIND> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r73
crystal.server.AbstractStateChecker.getRelationship : $r72 = <crystal.model.Relationship: java.lang.String AHEAD> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r72
crystal.server.AbstractStateChecker.getRelationship : $r71 = <crystal.model.Relationship: java.lang.String SAME> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r71
crystal.server.AbstractStateChecker.getRelationship : $r66 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r66.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r66.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r67 = <crystal.model.Relationship: java.lang.String ERROR>
crystal.server.AbstractStateChecker.getRelationship : $r67 = <crystal.model.Relationship: java.lang.String ERROR> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67)
crystal.server.AbstractStateChecker.getRelationship : $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Could not parse the history of your repository.")
crystal.server.AbstractStateChecker.getRelationship : $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Could not parse the history of your repository.") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r70
crystal.server.AbstractStateChecker.getRelationship : r44 = $r43 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r45 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r45 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r45.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r45.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r46 = <crystal.model.Relationship: java.lang.String ERROR>
crystal.server.AbstractStateChecker.getRelationship : $r46 = <crystal.model.Relationship: java.lang.String ERROR> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46)
crystal.server.AbstractStateChecker.getRelationship : $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
crystal.server.AbstractStateChecker.getRelationship : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r49 = virtualinvoke r44.<java.io.IOException: java.lang.String getMessage()>()
crystal.server.AbstractStateChecker.getRelationship : $r49 = virtualinvoke r44.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49)
crystal.server.AbstractStateChecker.getRelationship : $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r51
crystal.server.AbstractStateChecker.getRelationship : r10 = $r35 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r36 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r36 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r36.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r36.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r37 = <crystal.model.Relationship: java.lang.String ERROR>
crystal.server.AbstractStateChecker.getRelationship : $r37 = <crystal.model.Relationship: java.lang.String ERROR> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37)
crystal.server.AbstractStateChecker.getRelationship : $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
crystal.server.AbstractStateChecker.getRelationship : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r40 = virtualinvoke r10.<crystal.server.AbstractStateChecker$OperationException: java.lang.String getMessage()>()
crystal.server.AbstractStateChecker.getRelationship : $r40 = virtualinvoke r10.<crystal.server.AbstractStateChecker$OperationException: java.lang.String getMessage()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40)
crystal.server.AbstractStateChecker.getRelationship : $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r42
