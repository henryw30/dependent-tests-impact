crystal.client.ConflictClient.refresh : $r13 = r0.<crystal.client.ConflictClient: crystal.client.ClientPreferences _preferences> >>>>>>>> crystal.client.ConflictClient.refresh : $r14 = virtualinvoke $r13.<crystal.client.ClientPreferences: java.util.Collection getProjectPreference()>()
crystal.client.ConflictClient.refresh : $r14 = virtualinvoke $r13.<crystal.client.ClientPreferences: java.util.Collection getProjectPreference()>() >>>>>>>> crystal.client.ConflictClient.refresh : r1 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>()
crystal.client.ConflictClient.refresh : r1 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> crystal.client.ConflictClient.refresh : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
crystal.client.ConflictClient.refresh : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> crystal.client.ConflictClient.refresh : if $z0 == 0
crystal.client.ConflictClient.refresh : if $z0 == 0 >>>>>>>> crystal.client.ConflictClient.refresh : $r15 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
crystal.client.ConflictClient.refresh : if $z0 == 0 >>>>>>>> crystal.client.ConflictClient.refresh : $r51 = r0.<crystal.client.ConflictClient: javax.swing.JFrame _frame>
crystal.client.ConflictClient.refresh : $r51 = r0.<crystal.client.ConflictClient: javax.swing.JFrame _frame> >>>>>>>> crystal.client.ConflictClient.refresh : virtualinvoke $r51.<javax.swing.JFrame: void pack()>()
crystal.client.ConflictClient.refresh : virtualinvoke $r51.<javax.swing.JFrame: void pack()>() >>>>>>>> crystal.client.ConflictClient.refresh : return
crystal.client.ConflictClient.refresh : $r15 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> crystal.client.ConflictClient.refresh : r2 = (crystal.client.ProjectPreferences) $r15
crystal.client.ConflictClient.refresh : r2 = (crystal.client.ProjectPreferences) $r15 >>>>>>>> crystal.client.ConflictClient.refresh : $r16 = r0.<crystal.client.ConflictClient: java.util.HashMap _iconMap>
crystal.client.ConflictClient.refresh : $r16 = r0.<crystal.client.ConflictClient: java.util.HashMap _iconMap> >>>>>>>> crystal.client.ConflictClient.refresh : $r17 = virtualinvoke r2.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.client.ConflictClient.refresh : $r17 = virtualinvoke r2.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.client.ConflictClient.refresh : $r18 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r17)
crystal.client.ConflictClient.refresh : $r18 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r17) >>>>>>>> crystal.client.ConflictClient.refresh : r3 = (javax.swing.JLabel) $r18
crystal.client.ConflictClient.refresh : r3 = (javax.swing.JLabel) $r18 >>>>>>>> crystal.client.ConflictClient.refresh : r4 = virtualinvoke r2.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.client.ConflictClient.refresh : r4 = virtualinvoke r2.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.client.ConflictClient.refresh : $r19 = staticinvoke <crystal.client.ConflictDaemon: crystal.client.ConflictDaemon getInstance()>()
crystal.client.ConflictClient.refresh : $r19 = staticinvoke <crystal.client.ConflictDaemon: crystal.client.ConflictDaemon getInstance()>() >>>>>>>> crystal.client.ConflictClient.refresh : r5 = virtualinvoke $r19.<crystal.client.ConflictDaemon: crystal.model.LocalStateResult getLocalState(crystal.model.DataSource)>(r4)
crystal.client.ConflictClient.refresh : r5 = virtualinvoke $r19.<crystal.client.ConflictDaemon: crystal.model.LocalStateResult getLocalState(crystal.model.DataSource)>(r4) >>>>>>>> crystal.client.ConflictClient.refresh : $r20 = virtualinvoke r5.<crystal.model.LocalStateResult: java.lang.String getLocalState()>()
crystal.client.ConflictClient.refresh : $r20 = virtualinvoke r5.<crystal.model.LocalStateResult: java.lang.String getLocalState()>() >>>>>>>> crystal.client.ConflictClient.refresh : $r21 = <crystal.model.LocalStateResult: java.lang.String PENDING>
crystal.client.ConflictClient.refresh : $r21 = <crystal.model.LocalStateResult: java.lang.String PENDING> >>>>>>>> crystal.client.ConflictClient.refresh : $z1 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>($r21)
crystal.client.ConflictClient.refresh : $z1 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>($r21) >>>>>>>> crystal.client.ConflictClient.refresh : if $z1 == 0
crystal.client.ConflictClient.refresh : if $z1 == 0 >>>>>>>> crystal.client.ConflictClient.refresh : $r22 = virtualinvoke r5.<crystal.model.LocalStateResult: java.lang.String getLastLocalState()>()
crystal.client.ConflictClient.refresh : if $z1 == 0 >>>>>>>> crystal.client.ConflictClient.refresh : if r5 == null
crystal.client.ConflictClient.refresh : if r5 == null >>>>>>>> crystal.client.ConflictClient.refresh : $r24 = virtualinvoke r5.<crystal.model.LocalStateResult: java.lang.String getAction()>()
crystal.client.ConflictClient.refresh : if r5 == null >>>>>>>> crystal.client.ConflictClient.refresh : $r25 = new java.lang.String
crystal.client.ConflictClient.refresh : $r25 = new java.lang.String >>>>>>>> crystal.client.ConflictClient.refresh : $r6 = "hg commit"
crystal.client.ConflictClient.refresh : $r6 = "hg commit" >>>>>>>> crystal.client.ConflictClient.refresh : $i0 = virtualinvoke $r6.<java.lang.String: int length()>()
crystal.client.ConflictClient.refresh : $i0 = virtualinvoke $r6.<java.lang.String: int length()>() >>>>>>>> crystal.client.ConflictClient.refresh : $r26 = newarray (char)[$i0]
crystal.client.ConflictClient.refresh : $r26 = newarray (char)[$i0] >>>>>>>> crystal.client.ConflictClient.refresh : specialinvoke $r25.<java.lang.String: void <init>(char[])>($r26)
crystal.client.ConflictClient.refresh : specialinvoke $r25.<java.lang.String: void <init>(char[])>($r26) >>>>>>>> crystal.client.ConflictClient.refresh : $r27 = virtualinvoke $r25.<java.lang.String: java.lang.String replace(char,char)>(0, 32)
crystal.client.ConflictClient.refresh : $r27 = virtualinvoke $r25.<java.lang.String: java.lang.String replace(char,char)>(0, 32) >>>>>>>> crystal.client.ConflictClient.refresh : virtualinvoke r3.<javax.swing.JLabel: void setText(java.lang.String)>($r27)
crystal.client.ConflictClient.refresh : virtualinvoke r3.<javax.swing.JLabel: void setText(java.lang.String)>($r27) >>>>>>>> crystal.client.ConflictClient.refresh : goto [?= r8 = virtualinvoke r5.<crystal.model.LocalStateResult: java.lang.String getErrorMessage()>()]
crystal.client.ConflictClient.refresh : goto [?= r8 = virtualinvoke r5.<crystal.model.LocalStateResult: java.lang.String getErrorMessage()>()] >>>>>>>> crystal.client.ConflictClient.refresh : r8 = virtualinvoke r5.<crystal.model.LocalStateResult: java.lang.String getErrorMessage()>()
crystal.client.ConflictClient.refresh : r8 = virtualinvoke r5.<crystal.model.LocalStateResult: java.lang.String getErrorMessage()>() >>>>>>>> crystal.client.ConflictClient.refresh : if r8 == null
crystal.client.ConflictClient.refresh : if r8 == null >>>>>>>> crystal.client.ConflictClient.refresh : $r40 = virtualinvoke r8.<java.lang.String: java.lang.String trim()>()
crystal.client.ConflictClient.refresh : if r8 == null >>>>>>>> crystal.client.ConflictClient.refresh : virtualinvoke r3.<javax.swing.JLabel: void setToolTipText(java.lang.String)>(null)
crystal.client.ConflictClient.refresh : virtualinvoke r3.<javax.swing.JLabel: void setToolTipText(java.lang.String)>(null) >>>>>>>> crystal.client.ConflictClient.refresh : goto [?= $r43 = virtualinvoke r2.<crystal.client.ProjectPreferences: java.util.Collection getDataSources()>()]
crystal.client.ConflictClient.refresh : goto [?= $r43 = virtualinvoke r2.<crystal.client.ProjectPreferences: java.util.Collection getDataSources()>()] >>>>>>>> crystal.client.ConflictClient.refresh : $r43 = virtualinvoke r2.<crystal.client.ProjectPreferences: java.util.Collection getDataSources()>()
crystal.client.ConflictClient.refresh : $r43 = virtualinvoke r2.<crystal.client.ProjectPreferences: java.util.Collection getDataSources()>() >>>>>>>> crystal.client.ConflictClient.refresh : r44 = interfaceinvoke $r43.<java.util.Collection: java.util.Iterator iterator()>()
crystal.client.ConflictClient.refresh : r44 = interfaceinvoke $r43.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> crystal.client.ConflictClient.refresh : $z4 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()
crystal.client.ConflictClient.refresh : $z4 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>() >>>>>>>> crystal.client.ConflictClient.refresh : if $z4 == 0
crystal.client.ConflictClient.refresh : if $z4 == 0 >>>>>>>> crystal.client.ConflictClient.refresh : $r45 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>()
crystal.client.ConflictClient.refresh : if $z4 == 0 >>>>>>>> crystal.client.ConflictClient.refresh : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
crystal.client.ConflictClient.refresh : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> crystal.client.ConflictClient.refresh : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
crystal.client.ConflictClient.refresh : $r45 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> crystal.client.ConflictClient.refresh : r9 = (crystal.model.DataSource) $r45
crystal.client.ConflictClient.refresh : r9 = (crystal.model.DataSource) $r45 >>>>>>>> crystal.client.ConflictClient.refresh : $z5 = virtualinvoke r9.<crystal.model.DataSource: boolean isHidden()>()
crystal.client.ConflictClient.refresh : $z5 = virtualinvoke r9.<crystal.model.DataSource: boolean isHidden()>() >>>>>>>> crystal.client.ConflictClient.refresh : if $z5 != 0
crystal.client.ConflictClient.refresh : if $z5 != 0 >>>>>>>> crystal.client.ConflictClient.refresh : $r46 = r0.<crystal.client.ConflictClient: java.util.HashMap _iconMap>
crystal.client.ConflictClient.refresh : if $z5 != 0 >>>>>>>> crystal.client.ConflictClient.refresh : goto [?= $z4 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()]
crystal.client.ConflictClient.refresh : goto [?= $z4 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> crystal.client.ConflictClient.refresh : $z4 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()
crystal.client.ConflictClient.refresh : $r46 = r0.<crystal.client.ConflictClient: java.util.HashMap _iconMap> >>>>>>>> crystal.client.ConflictClient.refresh : $r47 = virtualinvoke $r46.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r9)
crystal.client.ConflictClient.refresh : $r47 = virtualinvoke $r46.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r9) >>>>>>>> crystal.client.ConflictClient.refresh : r10 = (javax.swing.JLabel) $r47
crystal.client.ConflictClient.refresh : r10 = (javax.swing.JLabel) $r47 >>>>>>>> crystal.client.ConflictClient.refresh : virtualinvoke r10.<javax.swing.JLabel: void removeAll()>()
crystal.client.ConflictClient.refresh : virtualinvoke r10.<javax.swing.JLabel: void removeAll()>() >>>>>>>> crystal.client.ConflictClient.refresh : $r48 = staticinvoke <crystal.client.ConflictDaemon: crystal.client.ConflictDaemon getInstance()>()
crystal.client.ConflictClient.refresh : $r48 = staticinvoke <crystal.client.ConflictDaemon: crystal.client.ConflictDaemon getInstance()>() >>>>>>>> crystal.client.ConflictClient.refresh : r11 = virtualinvoke $r48.<crystal.client.ConflictDaemon: crystal.model.Relationship getRelationship(crystal.model.DataSource)>(r9)
crystal.client.ConflictClient.refresh : r11 = virtualinvoke $r48.<crystal.client.ConflictDaemon: crystal.model.Relationship getRelationship(crystal.model.DataSource)>(r9) >>>>>>>> crystal.client.ConflictClient.refresh : r12 = virtualinvoke r11.<crystal.model.Relationship: java.lang.String getToolTipText()>()
crystal.client.ConflictClient.refresh : r12 = virtualinvoke r11.<crystal.model.Relationship: java.lang.String getToolTipText()>() >>>>>>>> crystal.client.ConflictClient.refresh : $r49 = virtualinvoke r11.<crystal.model.Relationship: javax.swing.ImageIcon getIcon()>()
crystal.client.ConflictClient.refresh : $r49 = virtualinvoke r11.<crystal.model.Relationship: javax.swing.ImageIcon getIcon()>() >>>>>>>> crystal.client.ConflictClient.refresh : virtualinvoke r10.<javax.swing.JLabel: void setIcon(javax.swing.Icon)>($r49)
crystal.client.ConflictClient.refresh : virtualinvoke r10.<javax.swing.JLabel: void setIcon(javax.swing.Icon)>($r49) >>>>>>>> crystal.client.ConflictClient.refresh : $r50 = virtualinvoke r12.<java.lang.String: java.lang.String trim()>()
crystal.client.ConflictClient.refresh : $r50 = virtualinvoke r12.<java.lang.String: java.lang.String trim()>() >>>>>>>> crystal.client.ConflictClient.refresh : $z6 = virtualinvoke $r50.<java.lang.String: boolean equals(java.lang.Object)>("")
crystal.client.ConflictClient.refresh : $z6 = virtualinvoke $r50.<java.lang.String: boolean equals(java.lang.Object)>("") >>>>>>>> crystal.client.ConflictClient.refresh : if $z6 == 0
crystal.client.ConflictClient.refresh : if $z6 == 0 >>>>>>>> crystal.client.ConflictClient.refresh : virtualinvoke r10.<javax.swing.JLabel: void setToolTipText(java.lang.String)>(null)
crystal.client.ConflictClient.refresh : if $z6 == 0 >>>>>>>> crystal.client.ConflictClient.refresh : virtualinvoke r10.<javax.swing.JLabel: void setToolTipText(java.lang.String)>(r12)
crystal.client.ConflictClient.refresh : virtualinvoke r10.<javax.swing.JLabel: void setToolTipText(java.lang.String)>(r12) >>>>>>>> crystal.client.ConflictClient.refresh : virtualinvoke r10.<javax.swing.JLabel: void repaint()>()
crystal.client.ConflictClient.refresh : virtualinvoke r10.<javax.swing.JLabel: void repaint()>() >>>>>>>> crystal.client.ConflictClient.refresh : goto [?= $z4 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>()]
crystal.client.ConflictClient.refresh : virtualinvoke r10.<javax.swing.JLabel: void setToolTipText(java.lang.String)>(null) >>>>>>>> crystal.client.ConflictClient.refresh : goto [?= virtualinvoke r10.<javax.swing.JLabel: void repaint()>()]
crystal.client.ConflictClient.refresh : goto [?= virtualinvoke r10.<javax.swing.JLabel: void repaint()>()] >>>>>>>> crystal.client.ConflictClient.refresh : virtualinvoke r10.<javax.swing.JLabel: void repaint()>()
crystal.client.ConflictClient.refresh : $r40 = virtualinvoke r8.<java.lang.String: java.lang.String trim()>() >>>>>>>> crystal.client.ConflictClient.refresh : $z2 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>("")
crystal.client.ConflictClient.refresh : $z2 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>("") >>>>>>>> crystal.client.ConflictClient.refresh : if $z2 == 0
crystal.client.ConflictClient.refresh : if $z2 == 0 >>>>>>>> crystal.client.ConflictClient.refresh : virtualinvoke r3.<javax.swing.JLabel: void setToolTipText(java.lang.String)>(null)
crystal.client.ConflictClient.refresh : if $z2 == 0 >>>>>>>> crystal.client.ConflictClient.refresh : virtualinvoke r3.<javax.swing.JLabel: void setToolTipText(java.lang.String)>(r8)
crystal.client.ConflictClient.refresh : virtualinvoke r3.<javax.swing.JLabel: void setToolTipText(java.lang.String)>(r8) >>>>>>>> crystal.client.ConflictClient.refresh : $r41 = virtualinvoke r3.<javax.swing.JLabel: java.lang.String getText()>()
crystal.client.ConflictClient.refresh : $r41 = virtualinvoke r3.<javax.swing.JLabel: java.lang.String getText()>() >>>>>>>> crystal.client.ConflictClient.refresh : if $r41 == null
crystal.client.ConflictClient.refresh : if $r41 == null >>>>>>>> crystal.client.ConflictClient.refresh : $r42 = virtualinvoke r3.<javax.swing.JLabel: java.lang.String getText()>()
crystal.client.ConflictClient.refresh : if $r41 == null >>>>>>>> crystal.client.ConflictClient.refresh : virtualinvoke r3.<javax.swing.JLabel: void setText(java.lang.String)>("   ")
crystal.client.ConflictClient.refresh : virtualinvoke r3.<javax.swing.JLabel: void setText(java.lang.String)>("   ") >>>>>>>> crystal.client.ConflictClient.refresh : $r43 = virtualinvoke r2.<crystal.client.ProjectPreferences: java.util.Collection getDataSources()>()
crystal.client.ConflictClient.refresh : $r42 = virtualinvoke r3.<javax.swing.JLabel: java.lang.String getText()>() >>>>>>>> crystal.client.ConflictClient.refresh : $z3 = virtualinvoke $r42.<java.lang.String: boolean isEmpty()>()
crystal.client.ConflictClient.refresh : $z3 = virtualinvoke $r42.<java.lang.String: boolean isEmpty()>() >>>>>>>> crystal.client.ConflictClient.refresh : if $z3 == 0
crystal.client.ConflictClient.refresh : if $z3 == 0 >>>>>>>> crystal.client.ConflictClient.refresh : virtualinvoke r3.<javax.swing.JLabel: void setText(java.lang.String)>("   ")
crystal.client.ConflictClient.refresh : if $z3 == 0 >>>>>>>> crystal.client.ConflictClient.refresh : $r43 = virtualinvoke r2.<crystal.client.ProjectPreferences: java.util.Collection getDataSources()>()
crystal.client.ConflictClient.refresh : $r24 = virtualinvoke r5.<crystal.model.LocalStateResult: java.lang.String getAction()>() >>>>>>>> crystal.client.ConflictClient.refresh : if $r24 != null
crystal.client.ConflictClient.refresh : if $r24 != null >>>>>>>> crystal.client.ConflictClient.refresh : $r25 = new java.lang.String
crystal.client.ConflictClient.refresh : if $r24 != null >>>>>>>> crystal.client.ConflictClient.refresh : $r28 = virtualinvoke r5.<crystal.model.LocalStateResult: java.lang.String getAction()>()
crystal.client.ConflictClient.refresh : $r28 = virtualinvoke r5.<crystal.model.LocalStateResult: java.lang.String getAction()>() >>>>>>>> crystal.client.ConflictClient.refresh : $i1 = virtualinvoke $r28.<java.lang.String: int length()>()
crystal.client.ConflictClient.refresh : $i1 = virtualinvoke $r28.<java.lang.String: int length()>() >>>>>>>> crystal.client.ConflictClient.refresh : $r29 = "hg commit"
crystal.client.ConflictClient.refresh : $r29 = "hg commit" >>>>>>>> crystal.client.ConflictClient.refresh : $i2 = virtualinvoke $r29.<java.lang.String: int length()>()
crystal.client.ConflictClient.refresh : $i2 = virtualinvoke $r29.<java.lang.String: int length()>() >>>>>>>> crystal.client.ConflictClient.refresh : if $i1 >= $i2
crystal.client.ConflictClient.refresh : if $i1 >= $i2 >>>>>>>> crystal.client.ConflictClient.refresh : $r30 = new java.lang.StringBuilder
crystal.client.ConflictClient.refresh : if $i1 >= $i2 >>>>>>>> crystal.client.ConflictClient.refresh : $r39 = virtualinvoke r5.<crystal.model.LocalStateResult: java.lang.String getAction()>()
crystal.client.ConflictClient.refresh : $r39 = virtualinvoke r5.<crystal.model.LocalStateResult: java.lang.String getAction()>() >>>>>>>> crystal.client.ConflictClient.refresh : virtualinvoke r3.<javax.swing.JLabel: void setText(java.lang.String)>($r39)
crystal.client.ConflictClient.refresh : virtualinvoke r3.<javax.swing.JLabel: void setText(java.lang.String)>($r39) >>>>>>>> crystal.client.ConflictClient.refresh : r8 = virtualinvoke r5.<crystal.model.LocalStateResult: java.lang.String getErrorMessage()>()
crystal.client.ConflictClient.refresh : $r30 = new java.lang.StringBuilder >>>>>>>> crystal.client.ConflictClient.refresh : specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()
crystal.client.ConflictClient.refresh : specialinvoke $r30.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.client.ConflictClient.refresh : $r31 = new java.lang.String
crystal.client.ConflictClient.refresh : $r31 = new java.lang.String >>>>>>>> crystal.client.ConflictClient.refresh : $r7 = "hg commit"
crystal.client.ConflictClient.refresh : $r7 = "hg commit" >>>>>>>> crystal.client.ConflictClient.refresh : $i3 = virtualinvoke $r7.<java.lang.String: int length()>()
crystal.client.ConflictClient.refresh : $i3 = virtualinvoke $r7.<java.lang.String: int length()>() >>>>>>>> crystal.client.ConflictClient.refresh : $r32 = virtualinvoke r5.<crystal.model.LocalStateResult: java.lang.String getAction()>()
crystal.client.ConflictClient.refresh : $r32 = virtualinvoke r5.<crystal.model.LocalStateResult: java.lang.String getAction()>() >>>>>>>> crystal.client.ConflictClient.refresh : $i4 = virtualinvoke $r32.<java.lang.String: int length()>()
crystal.client.ConflictClient.refresh : $i4 = virtualinvoke $r32.<java.lang.String: int length()>() >>>>>>>> crystal.client.ConflictClient.refresh : $i5 = $i3 - $i4
crystal.client.ConflictClient.refresh : $i5 = $i3 - $i4 >>>>>>>> crystal.client.ConflictClient.refresh : $r33 = newarray (char)[$i5]
crystal.client.ConflictClient.refresh : $r33 = newarray (char)[$i5] >>>>>>>> crystal.client.ConflictClient.refresh : specialinvoke $r31.<java.lang.String: void <init>(char[])>($r33)
crystal.client.ConflictClient.refresh : specialinvoke $r31.<java.lang.String: void <init>(char[])>($r33) >>>>>>>> crystal.client.ConflictClient.refresh : $r34 = virtualinvoke $r31.<java.lang.String: java.lang.String replace(char,char)>(0, 32)
crystal.client.ConflictClient.refresh : $r34 = virtualinvoke $r31.<java.lang.String: java.lang.String replace(char,char)>(0, 32) >>>>>>>> crystal.client.ConflictClient.refresh : $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34)
crystal.client.ConflictClient.refresh : $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34) >>>>>>>> crystal.client.ConflictClient.refresh : $r36 = virtualinvoke r5.<crystal.model.LocalStateResult: java.lang.String getAction()>()
crystal.client.ConflictClient.refresh : $r36 = virtualinvoke r5.<crystal.model.LocalStateResult: java.lang.String getAction()>() >>>>>>>> crystal.client.ConflictClient.refresh : $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36)
crystal.client.ConflictClient.refresh : $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36) >>>>>>>> crystal.client.ConflictClient.refresh : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.client.ConflictClient.refresh : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.client.ConflictClient.refresh : virtualinvoke r3.<javax.swing.JLabel: void setText(java.lang.String)>($r38)
crystal.client.ConflictClient.refresh : virtualinvoke r3.<javax.swing.JLabel: void setText(java.lang.String)>($r38) >>>>>>>> crystal.client.ConflictClient.refresh : goto [?= r8 = virtualinvoke r5.<crystal.model.LocalStateResult: java.lang.String getErrorMessage()>()]
crystal.client.ConflictClient.refresh : goto [?= r8 = virtualinvoke r5.<crystal.model.LocalStateResult: java.lang.String getErrorMessage()>()] >>>>>>>> crystal.client.ConflictClient.refresh : r8 = virtualinvoke r5.<crystal.model.LocalStateResult: java.lang.String getErrorMessage()>()
crystal.client.ConflictClient.refresh : $r22 = virtualinvoke r5.<crystal.model.LocalStateResult: java.lang.String getLastLocalState()>() >>>>>>>> crystal.client.ConflictClient.refresh : if $r22 == null
crystal.client.ConflictClient.refresh : if $r22 == null >>>>>>>> crystal.client.ConflictClient.refresh : $r23 = virtualinvoke r5.<crystal.model.LocalStateResult: java.lang.String getLastAction()>()
crystal.client.ConflictClient.refresh : if $r22 == null >>>>>>>> crystal.client.ConflictClient.refresh : if r5 == null
crystal.client.ConflictClient.refresh : $r23 = virtualinvoke r5.<crystal.model.LocalStateResult: java.lang.String getLastAction()>() >>>>>>>> crystal.client.ConflictClient.refresh : virtualinvoke r3.<javax.swing.JLabel: void setText(java.lang.String)>($r23)
crystal.client.ConflictClient.refresh : virtualinvoke r3.<javax.swing.JLabel: void setText(java.lang.String)>($r23) >>>>>>>> crystal.client.ConflictClient.refresh : goto [?= $r43 = virtualinvoke r2.<crystal.client.ProjectPreferences: java.util.Collection getDataSources()>()]
crystal.client.ConflictClient.refresh : goto [?= $r43 = virtualinvoke r2.<crystal.client.ProjectPreferences: java.util.Collection getDataSources()>()] >>>>>>>> crystal.client.ConflictClient.refresh : $r43 = virtualinvoke r2.<crystal.client.ProjectPreferences: java.util.Collection getDataSources()>()
