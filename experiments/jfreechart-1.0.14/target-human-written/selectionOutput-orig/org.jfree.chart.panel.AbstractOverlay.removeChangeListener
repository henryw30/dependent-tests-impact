org.jfree.chart.panel.AbstractOverlay.removeChangeListener : if r1 != null >>>>>>>> org.jfree.chart.panel.AbstractOverlay.removeChangeListener : $r2 = new java.lang.IllegalArgumentException
org.jfree.chart.panel.AbstractOverlay.removeChangeListener : if r1 != null >>>>>>>> org.jfree.chart.panel.AbstractOverlay.removeChangeListener : $r3 = r0.<org.jfree.chart.panel.AbstractOverlay: javax.swing.event.EventListenerList changeListeners>
org.jfree.chart.panel.AbstractOverlay.removeChangeListener : $r3 = r0.<org.jfree.chart.panel.AbstractOverlay: javax.swing.event.EventListenerList changeListeners> >>>>>>>> org.jfree.chart.panel.AbstractOverlay.removeChangeListener : $r4 = <org.jfree.chart.panel.AbstractOverlay: java.lang.Class class$org$jfree$chart$event$OverlayChangeListener>
org.jfree.chart.panel.AbstractOverlay.removeChangeListener : $r4 = <org.jfree.chart.panel.AbstractOverlay: java.lang.Class class$org$jfree$chart$event$OverlayChangeListener> >>>>>>>> org.jfree.chart.panel.AbstractOverlay.removeChangeListener : if $r4 != null
org.jfree.chart.panel.AbstractOverlay.removeChangeListener : if $r4 != null >>>>>>>> org.jfree.chart.panel.AbstractOverlay.removeChangeListener : $r5 = staticinvoke <org.jfree.chart.panel.AbstractOverlay: java.lang.Class class$(java.lang.String)>("org.jfree.chart.event.OverlayChangeListener")
org.jfree.chart.panel.AbstractOverlay.removeChangeListener : if $r4 != null >>>>>>>> org.jfree.chart.panel.AbstractOverlay.removeChangeListener : $r5 = <org.jfree.chart.panel.AbstractOverlay: java.lang.Class class$org$jfree$chart$event$OverlayChangeListener>
org.jfree.chart.panel.AbstractOverlay.removeChangeListener : $r5 = <org.jfree.chart.panel.AbstractOverlay: java.lang.Class class$org$jfree$chart$event$OverlayChangeListener> >>>>>>>> org.jfree.chart.panel.AbstractOverlay.removeChangeListener : virtualinvoke $r3.<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>($r5, r1)
org.jfree.chart.panel.AbstractOverlay.removeChangeListener : virtualinvoke $r3.<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>($r5, r1) >>>>>>>> org.jfree.chart.panel.AbstractOverlay.removeChangeListener : return
org.jfree.chart.panel.AbstractOverlay.removeChangeListener : $r5 = staticinvoke <org.jfree.chart.panel.AbstractOverlay: java.lang.Class class$(java.lang.String)>("org.jfree.chart.event.OverlayChangeListener") >>>>>>>> org.jfree.chart.panel.AbstractOverlay.removeChangeListener : <org.jfree.chart.panel.AbstractOverlay: java.lang.Class class$org$jfree$chart$event$OverlayChangeListener> = $r5
org.jfree.chart.panel.AbstractOverlay.removeChangeListener : <org.jfree.chart.panel.AbstractOverlay: java.lang.Class class$org$jfree$chart$event$OverlayChangeListener> = $r5 >>>>>>>> org.jfree.chart.panel.AbstractOverlay.removeChangeListener : goto [?= virtualinvoke $r3.<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>($r5, r1)]
org.jfree.chart.panel.AbstractOverlay.removeChangeListener : goto [?= virtualinvoke $r3.<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>($r5, r1)] >>>>>>>> org.jfree.chart.panel.AbstractOverlay.removeChangeListener : virtualinvoke $r3.<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>($r5, r1)
org.jfree.chart.panel.AbstractOverlay.removeChangeListener : $r2 = new java.lang.IllegalArgumentException >>>>>>>> org.jfree.chart.panel.AbstractOverlay.removeChangeListener : specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null \'listener\' argument.")
org.jfree.chart.panel.AbstractOverlay.removeChangeListener : specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null \'listener\' argument.") >>>>>>>> org.jfree.chart.panel.AbstractOverlay.removeChangeListener : throw $r2
