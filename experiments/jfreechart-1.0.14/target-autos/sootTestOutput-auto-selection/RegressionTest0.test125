org.jfree.data.DataUtilities.createNumberArray2D : if r0 != null >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : i0 = lengthof r0
org.jfree.data.DataUtilities.createNumberArray2D : i0 = lengthof r0 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : r1 = newarray (java.lang.Number[])[i0]
org.jfree.data.DataUtilities.createNumberArray2D : r1 = newarray (java.lang.Number[])[i0] >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : i1 = 0
org.jfree.data.DataUtilities.createNumberArray2D : i1 = 0 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : if i1 >= i0
org.jfree.data.DataUtilities.createNumberArray2D : if i1 >= i0 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : return r1
org.jfree.data.DataUtilities.createNumberArray2D : return r1 >>>>>>>> org.jfree.chart.util.ResourceBundleWrapper.getBundle : $r1 = <org.jfree.chart.util.ResourceBundleWrapper: java.net.URLClassLoader noCodeBaseClassLoader>
org.jfree.chart.util.ResourceBundleWrapper.getBundle : $r1 = <org.jfree.chart.util.ResourceBundleWrapper: java.net.URLClassLoader noCodeBaseClassLoader> >>>>>>>> org.jfree.chart.util.ResourceBundleWrapper.getBundle : if $r1 == null
org.jfree.chart.util.ResourceBundleWrapper.getBundle : if $r1 == null >>>>>>>> org.jfree.chart.util.ResourceBundleWrapper.getBundle : $r5 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>(r0)
org.jfree.chart.util.ResourceBundleWrapper.getBundle : $r5 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>(r0) >>>>>>>> org.jfree.chart.util.ResourceBundleWrapper.getBundle : return $r5
org.jfree.chart.util.ResourceBundleWrapper.getBundle : return $r5 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getCategories : $r1 = virtualinvoke r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.util.List getColumnKeys()>()
org.jfree.data.category.DefaultIntervalCategoryDataset.getCategories : $r1 = virtualinvoke r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.util.List getColumnKeys()>() >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : $r1 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] categoryKeys>
org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : $r1 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] categoryKeys> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : if $r1 != null
org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : if $r1 != null >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : $r3 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] categoryKeys>
org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : $r3 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] categoryKeys> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3)
org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3) >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4)
org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4) >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : return $r5
org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : return $r5 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getCategories : return $r1
org.jfree.data.category.DefaultIntervalCategoryDataset.getCategories : return $r1 >>>>>>>> org.jfree.data.general.DatasetUtilities.findStackedRangeBounds : if r0 != null
org.jfree.data.general.DatasetUtilities.findStackedRangeBounds : if r0 != null >>>>>>>> org.jfree.data.general.DatasetUtilities.findStackedRangeBounds : z0 = 0
org.jfree.data.general.DatasetUtilities.findStackedRangeBounds : z0 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findStackedRangeBounds : r2 = null
org.jfree.data.general.DatasetUtilities.findStackedRangeBounds : r2 = null >>>>>>>> org.jfree.data.general.DatasetUtilities.findStackedRangeBounds : $i5 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getRowCount()>()
org.jfree.data.general.DatasetUtilities.findStackedRangeBounds : $i5 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getRowCount()>() >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getRowCount : $r1 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] seriesKeys>
org.jfree.data.category.DefaultIntervalCategoryDataset.getRowCount : $r1 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] seriesKeys> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getRowCount : $i0 = lengthof $r1
org.jfree.data.category.DefaultIntervalCategoryDataset.getRowCount : $i0 = lengthof $r1 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getRowCount : return $i0
org.jfree.data.category.DefaultIntervalCategoryDataset.getRowCount : return $i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findStackedRangeBounds : r3 = newarray (int)[$i5]
org.jfree.data.general.DatasetUtilities.findStackedRangeBounds : r3 = newarray (int)[$i5] >>>>>>>> org.jfree.data.general.DatasetUtilities.findStackedRangeBounds : i0 = 0
org.jfree.data.general.DatasetUtilities.findStackedRangeBounds : i0 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findStackedRangeBounds : $i6 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getRowCount()>()
org.jfree.data.general.DatasetUtilities.findStackedRangeBounds : $i6 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getRowCount()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.findStackedRangeBounds : if i0 >= $i6
org.jfree.data.general.DatasetUtilities.findStackedRangeBounds : if i0 >= $i6 >>>>>>>> org.jfree.data.general.DatasetUtilities.findStackedRangeBounds : i8 = virtualinvoke r1.<org.jfree.data.KeyToGroupMap: int getGroupCount()>()
