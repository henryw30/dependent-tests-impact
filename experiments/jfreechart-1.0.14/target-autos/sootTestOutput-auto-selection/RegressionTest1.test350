org.jfree.chart.renderer.AbstractRenderer.setBaseShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBaseShape(java.awt.Shape,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseShape : if r1 != null
org.jfree.chart.renderer.AbstractRenderer.setBaseShape : if r1 != null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseShape : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseShape> = r1
org.jfree.chart.renderer.AbstractRenderer.setBaseShape : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseShape> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseShape : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setBaseShape : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setBaseShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setAutoPopulateSeriesShape : r0.<org.jfree.chart.renderer.AbstractRenderer: boolean autoPopulateSeriesShape> = z0
org.jfree.chart.renderer.AbstractRenderer.setAutoPopulateSeriesShape : r0.<org.jfree.chart.renderer.AbstractRenderer: boolean autoPopulateSeriesShape> = z0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getBaseCreateEntities : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseCreateEntities>
org.jfree.chart.renderer.AbstractRenderer.getBaseCreateEntities : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseCreateEntities> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getBaseCreateEntities : return $z0
org.jfree.chart.renderer.AbstractRenderer.getBaseCreateEntities : return $z0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelsVisible : $r1 = staticinvoke <org.jfree.util.BooleanUtilities: java.lang.Boolean valueOf(boolean)>(z0)
org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelsVisible : $r1 = staticinvoke <org.jfree.util.BooleanUtilities: java.lang.Boolean valueOf(boolean)>(z0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelsVisible : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesItemLabelsVisible(int,java.lang.Boolean)>(i0, $r1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelsVisible : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesItemLabelsVisible(int,java.lang.Boolean)>(i0, $r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelsVisible : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesItemLabelsVisible(int,java.lang.Boolean,boolean)>(i0, r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelsVisible : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesItemLabelsVisible(int,java.lang.Boolean,boolean)>(i0, r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelsVisible : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList itemLabelsVisibleList>
org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelsVisible : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList itemLabelsVisibleList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelsVisible : virtualinvoke $r2.<org.jfree.util.BooleanList: void setBoolean(int,java.lang.Boolean)>(i0, r1)
