org.jfree.chart.axis.CategoryAxis.getCategoryLabelPositions : $r1 = r0.<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.axis.CategoryLabelPositions categoryLabelPositions> >>>>>>>> org.jfree.chart.axis.CategoryAxis.getCategoryLabelPositions : return $r1
org.jfree.chart.axis.CategoryAxis.getCategoryLabelPositions : return $r1 >>>>>>>> org.jfree.chart.axis.Axis.removeChangeListener : $r3 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.axis.Axis.removeChangeListener : $r3 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.axis.Axis.removeChangeListener : $r2 = <org.jfree.chart.axis.Axis: java.lang.Class class$org$jfree$chart$event$AxisChangeListener>
org.jfree.chart.axis.Axis.removeChangeListener : $r2 = <org.jfree.chart.axis.Axis: java.lang.Class class$org$jfree$chart$event$AxisChangeListener> >>>>>>>> org.jfree.chart.axis.Axis.removeChangeListener : if $r2 != null
org.jfree.chart.axis.Axis.removeChangeListener : if $r2 != null >>>>>>>> org.jfree.chart.axis.Axis.removeChangeListener : $r4 = <org.jfree.chart.axis.Axis: java.lang.Class class$org$jfree$chart$event$AxisChangeListener>
org.jfree.chart.axis.Axis.removeChangeListener : $r4 = <org.jfree.chart.axis.Axis: java.lang.Class class$org$jfree$chart$event$AxisChangeListener> >>>>>>>> org.jfree.chart.axis.Axis.removeChangeListener : virtualinvoke $r3.<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>($r4, r1)
org.jfree.chart.axis.Axis.removeChangeListener : virtualinvoke $r3.<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>($r4, r1) >>>>>>>> org.jfree.chart.axis.CategoryAxis.getTickLabelFont : if r1 != null
org.jfree.chart.axis.CategoryAxis.getTickLabelFont : if r1 != null >>>>>>>> org.jfree.chart.axis.CategoryAxis.getTickLabelFont : $r4 = r0.<org.jfree.chart.axis.CategoryAxis: java.util.Map tickLabelFontMap>
org.jfree.chart.axis.CategoryAxis.getTickLabelFont : $r4 = r0.<org.jfree.chart.axis.CategoryAxis: java.util.Map tickLabelFontMap> >>>>>>>> org.jfree.chart.axis.CategoryAxis.getTickLabelFont : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.jfree.chart.axis.CategoryAxis.getTickLabelFont : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.axis.CategoryAxis.getTickLabelFont : r2 = (java.awt.Font) $r5
org.jfree.chart.axis.CategoryAxis.getTickLabelFont : r2 = (java.awt.Font) $r5 >>>>>>>> org.jfree.chart.axis.CategoryAxis.getTickLabelFont : if r2 != null
org.jfree.chart.axis.CategoryAxis.getTickLabelFont : if r2 != null >>>>>>>> org.jfree.chart.axis.CategoryAxis.getTickLabelFont : r2 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.CategoryAxis.getTickLabelFont : r2 = virtualinvoke r0.<org.jfree.chart.axis.CategoryAxis: java.awt.Font getTickLabelFont()>() >>>>>>>> org.jfree.chart.axis.Axis.getTickLabelFont : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Font tickLabelFont>
org.jfree.chart.axis.Axis.getTickLabelFont : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Font tickLabelFont> >>>>>>>> org.jfree.chart.axis.Axis.getTickLabelFont : return $r1
org.jfree.chart.axis.Axis.getTickLabelFont : return $r1 >>>>>>>> org.jfree.chart.axis.CategoryAxis.getTickLabelFont : return r2
org.jfree.chart.axis.CategoryAxis.getTickLabelFont : return r2 >>>>>>>> org.jfree.chart.plot.CategoryCrosshairState.updateCrosshairPoint : r4 = virtualinvoke r0.<org.jfree.chart.plot.CategoryCrosshairState: java.awt.geom.Point2D getAnchor()>()
org.jfree.chart.plot.CategoryCrosshairState.updateCrosshairPoint : r4 = virtualinvoke r0.<org.jfree.chart.plot.CategoryCrosshairState: java.awt.geom.Point2D getAnchor()>() >>>>>>>> org.jfree.chart.plot.CrosshairState.getAnchor : $r1 = r0.<org.jfree.chart.plot.CrosshairState: java.awt.geom.Point2D anchor>
org.jfree.chart.plot.CrosshairState.getAnchor : $r1 = r0.<org.jfree.chart.plot.CrosshairState: java.awt.geom.Point2D anchor> >>>>>>>> org.jfree.chart.plot.CrosshairState.getAnchor : return $r1
org.jfree.chart.plot.CrosshairState.getAnchor : return $r1 >>>>>>>> org.jfree.chart.plot.CategoryCrosshairState.updateCrosshairPoint : if r4 == null
org.jfree.chart.plot.CategoryCrosshairState.updateCrosshairPoint : if r4 == null >>>>>>>> org.jfree.chart.plot.CategoryCrosshairState.getColumnKey : $r1 = r0.<org.jfree.chart.plot.CategoryCrosshairState: java.lang.Comparable columnKey>
org.jfree.chart.plot.CategoryCrosshairState.getColumnKey : $r1 = r0.<org.jfree.chart.plot.CategoryCrosshairState: java.lang.Comparable columnKey> >>>>>>>> org.jfree.chart.plot.CategoryCrosshairState.getColumnKey : return $r1
org.jfree.chart.plot.CategoryCrosshairState.getColumnKey : return $r1 >>>>>>>> org.jfree.chart.plot.CrosshairState.updateCrosshairPoint : virtualinvoke r0.<org.jfree.chart.plot.CrosshairState: void updateCrosshairPoint(double,double,int,int,double,double,org.jfree.chart.plot.PlotOrientation)>(d0, d1, 0, 0, d2, d3, r1)
org.jfree.chart.plot.CrosshairState.updateCrosshairPoint : virtualinvoke r0.<org.jfree.chart.plot.CrosshairState: void updateCrosshairPoint(double,double,int,int,double,double,org.jfree.chart.plot.PlotOrientation)>(d0, d1, 0, 0, d2, d3, r1) >>>>>>>> org.jfree.chart.plot.CrosshairState.updateCrosshairPoint : $r3 = r0.<org.jfree.chart.plot.CrosshairState: java.awt.geom.Point2D anchor>
org.jfree.chart.plot.CrosshairState.updateCrosshairPoint : $r3 = r0.<org.jfree.chart.plot.CrosshairState: java.awt.geom.Point2D anchor> >>>>>>>> org.jfree.chart.plot.CrosshairState.updateCrosshairPoint : if $r3 == null
org.jfree.chart.plot.CrosshairState.updateCrosshairPoint : if $r3 == null >>>>>>>> org.jfree.data.ComparableObjectItem.equals : if r1 != r0
org.jfree.data.ComparableObjectItem.equals : if r1 != r0 >>>>>>>> org.jfree.data.ComparableObjectItem.equals : $z0 = r1 instanceof org.jfree.data.ComparableObjectItem
org.jfree.data.ComparableObjectItem.equals : $z0 = r1 instanceof org.jfree.data.ComparableObjectItem >>>>>>>> org.jfree.data.ComparableObjectItem.equals : if $z0 != 0
org.jfree.data.ComparableObjectItem.equals : if $z0 != 0 >>>>>>>> org.jfree.data.ComparableObjectItem.equals : r2 = (org.jfree.data.ComparableObjectItem) r1
org.jfree.data.ComparableObjectItem.equals : r2 = (org.jfree.data.ComparableObjectItem) r1 >>>>>>>> org.jfree.data.ComparableObjectItem.equals : $r3 = r0.<org.jfree.data.ComparableObjectItem: java.lang.Comparable x>
org.jfree.data.ComparableObjectItem.equals : $r3 = r0.<org.jfree.data.ComparableObjectItem: java.lang.Comparable x> >>>>>>>> org.jfree.data.ComparableObjectItem.equals : $r4 = r2.<org.jfree.data.ComparableObjectItem: java.lang.Comparable x>
org.jfree.data.ComparableObjectItem.equals : $r4 = r2.<org.jfree.data.ComparableObjectItem: java.lang.Comparable x> >>>>>>>> org.jfree.data.ComparableObjectItem.equals : $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4)
org.jfree.data.ComparableObjectItem.equals : $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.data.ComparableObjectItem.equals : if $z1 != 0
org.jfree.data.ComparableObjectItem.equals : if $z1 != 0 >>>>>>>> org.jfree.data.ComparableObjectItem.equals : $r5 = r0.<org.jfree.data.ComparableObjectItem: java.lang.Object obj>
org.jfree.data.ComparableObjectItem.equals : $r5 = r0.<org.jfree.data.ComparableObjectItem: java.lang.Object obj> >>>>>>>> org.jfree.data.ComparableObjectItem.equals : $r6 = r2.<org.jfree.data.ComparableObjectItem: java.lang.Object obj>
org.jfree.data.ComparableObjectItem.equals : $r6 = r2.<org.jfree.data.ComparableObjectItem: java.lang.Object obj> >>>>>>>> org.jfree.data.ComparableObjectItem.equals : $z2 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6)
org.jfree.data.ComparableObjectItem.equals : $z2 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6) >>>>>>>> org.jfree.data.xy.YInterval.equals : if r1 != r0
org.jfree.data.xy.YInterval.equals : if r1 != r0 >>>>>>>> org.jfree.data.xy.YInterval.equals : $z0 = r1 instanceof org.jfree.data.xy.YInterval
org.jfree.data.xy.YInterval.equals : $z0 = r1 instanceof org.jfree.data.xy.YInterval >>>>>>>> org.jfree.data.xy.YInterval.equals : if $z0 != 0
org.jfree.data.xy.YInterval.equals : if $z0 != 0 >>>>>>>> org.jfree.data.xy.YInterval.equals : r2 = (org.jfree.data.xy.YInterval) r1
org.jfree.data.xy.YInterval.equals : r2 = (org.jfree.data.xy.YInterval) r1 >>>>>>>> org.jfree.data.xy.YInterval.equals : $d0 = r0.<org.jfree.data.xy.YInterval: double y>
org.jfree.data.xy.YInterval.equals : $d0 = r0.<org.jfree.data.xy.YInterval: double y> >>>>>>>> org.jfree.data.xy.YInterval.equals : $d1 = r2.<org.jfree.data.xy.YInterval: double y>
org.jfree.data.xy.YInterval.equals : $d1 = r2.<org.jfree.data.xy.YInterval: double y> >>>>>>>> org.jfree.data.xy.YInterval.equals : $b0 = $d0 cmpl $d1
org.jfree.data.xy.YInterval.equals : $b0 = $d0 cmpl $d1 >>>>>>>> org.jfree.data.xy.YInterval.equals : if $b0 == 0
org.jfree.data.xy.YInterval.equals : if $b0 == 0 >>>>>>>> org.jfree.data.xy.YInterval.equals : $d2 = r0.<org.jfree.data.xy.YInterval: double yLow>
org.jfree.data.xy.YInterval.equals : $d2 = r0.<org.jfree.data.xy.YInterval: double yLow> >>>>>>>> org.jfree.data.xy.YInterval.equals : $d3 = r2.<org.jfree.data.xy.YInterval: double yLow>
org.jfree.data.xy.YInterval.equals : $d3 = r2.<org.jfree.data.xy.YInterval: double yLow> >>>>>>>> org.jfree.data.xy.YInterval.equals : $b1 = $d2 cmpl $d3
org.jfree.data.xy.YInterval.equals : $b1 = $d2 cmpl $d3 >>>>>>>> org.jfree.data.xy.YInterval.equals : if $b1 == 0
org.jfree.data.xy.YInterval.equals : if $b1 == 0 >>>>>>>> org.jfree.data.xy.YInterval.equals : $d4 = r0.<org.jfree.data.xy.YInterval: double yHigh>
org.jfree.data.xy.YInterval.equals : $d4 = r0.<org.jfree.data.xy.YInterval: double yHigh> >>>>>>>> org.jfree.data.xy.YInterval.equals : $d5 = r2.<org.jfree.data.xy.YInterval: double yHigh>
org.jfree.data.xy.YInterval.equals : $d5 = r2.<org.jfree.data.xy.YInterval: double yHigh> >>>>>>>> org.jfree.data.xy.YInterval.equals : $b2 = $d4 cmpl $d5
org.jfree.data.xy.YInterval.equals : $b2 = $d4 cmpl $d5 >>>>>>>> org.jfree.data.xy.YInterval.equals : if $b2 == 0
org.jfree.data.xy.YInterval.equals : if $b2 == 0 >>>>>>>> org.jfree.data.xy.YInterval.equals : return 1
org.jfree.data.xy.YInterval.equals : return 1 >>>>>>>> org.jfree.data.ComparableObjectItem.equals : if $z2 != 0
org.jfree.data.ComparableObjectItem.equals : if $z2 != 0 >>>>>>>> org.jfree.data.ComparableObjectItem.equals : return 1
org.jfree.data.ComparableObjectItem.equals : return 1 >>>>>>>> org.jfree.data.ComparableObjectItem.hashCode : $r1 = r0.<org.jfree.data.ComparableObjectItem: java.lang.Comparable x>
org.jfree.data.ComparableObjectItem.hashCode : $r1 = r0.<org.jfree.data.ComparableObjectItem: java.lang.Comparable x> >>>>>>>> org.jfree.data.ComparableObjectItem.hashCode : i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>()
org.jfree.data.ComparableObjectItem.hashCode : i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>() >>>>>>>> org.jfree.data.ComparableObjectItem.hashCode : $i1 = 29 * i0
org.jfree.data.ComparableObjectItem.hashCode : $i1 = 29 * i0 >>>>>>>> org.jfree.data.ComparableObjectItem.hashCode : $r2 = r0.<org.jfree.data.ComparableObjectItem: java.lang.Object obj>
org.jfree.data.ComparableObjectItem.hashCode : $r2 = r0.<org.jfree.data.ComparableObjectItem: java.lang.Object obj> >>>>>>>> org.jfree.data.ComparableObjectItem.hashCode : if $r2 == null
org.jfree.data.ComparableObjectItem.hashCode : if $r2 == null >>>>>>>> org.jfree.data.ComparableObjectItem.hashCode : $r3 = r0.<org.jfree.data.ComparableObjectItem: java.lang.Object obj>
org.jfree.data.ComparableObjectItem.hashCode : $r3 = r0.<org.jfree.data.ComparableObjectItem: java.lang.Object obj> >>>>>>>> org.jfree.data.ComparableObjectItem.hashCode : $i2 = virtualinvoke $r3.<java.lang.Object: int hashCode()>()
org.jfree.data.ComparableObjectItem.hashCode : $i2 = virtualinvoke $r3.<java.lang.Object: int hashCode()>() >>>>>>>> org.jfree.data.ComparableObjectItem.hashCode : goto [?= i3 = $i1 + $i2]
org.jfree.data.ComparableObjectItem.hashCode : goto [?= i3 = $i1 + $i2] >>>>>>>> org.jfree.data.ComparableObjectItem.hashCode : i3 = $i1 + $i2
org.jfree.data.ComparableObjectItem.hashCode : i3 = $i1 + $i2 >>>>>>>> org.jfree.data.ComparableObjectItem.hashCode : return i3
