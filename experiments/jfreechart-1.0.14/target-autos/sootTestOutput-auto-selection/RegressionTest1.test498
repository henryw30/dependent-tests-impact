org.jfree.chart.axis.SegmentedTimeline.getDate : $r2 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendarNoDST> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getDate : $r1 = new java.util.Date
org.jfree.chart.axis.SegmentedTimeline.getDate : $r1 = new java.util.Date >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getDate : specialinvoke $r1.<java.util.Date: void <init>(long)>(l0)
org.jfree.chart.axis.SegmentedTimeline.getDate : specialinvoke $r1.<java.util.Date: void <init>(long)>(l0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getDate : virtualinvoke $r2.<java.util.Calendar: void setTime(java.util.Date)>($r1)
org.jfree.chart.axis.SegmentedTimeline.getDate : virtualinvoke $r2.<java.util.Calendar: void setTime(java.util.Date)>($r1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getDate : $r3 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendarNoDST>
org.jfree.chart.axis.SegmentedTimeline.getDate : $r3 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendarNoDST> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getDate : $r4 = virtualinvoke $r3.<java.util.Calendar: java.util.Date getTime()>()
org.jfree.chart.axis.SegmentedTimeline.getDate : $r4 = virtualinvoke $r3.<java.util.Calendar: java.util.Date getTime()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getDate : return $r4
org.jfree.chart.axis.SegmentedTimeline.getDate : return $r4 >>>>>>>> org.jfree.chart.axis.MonthDateFormat.format : $r4 = r0.<org.jfree.chart.axis.MonthDateFormat: java.util.Calendar calendar>
org.jfree.chart.axis.MonthDateFormat.format : $r4 = r0.<org.jfree.chart.axis.MonthDateFormat: java.util.Calendar calendar> >>>>>>>> org.jfree.chart.axis.MonthDateFormat.format : virtualinvoke $r4.<java.util.Calendar: void setTime(java.util.Date)>(r1)
org.jfree.chart.axis.MonthDateFormat.format : virtualinvoke $r4.<java.util.Calendar: void setTime(java.util.Date)>(r1) >>>>>>>> org.jfree.chart.axis.MonthDateFormat.format : $r5 = r0.<org.jfree.chart.axis.MonthDateFormat: java.util.Calendar calendar>
org.jfree.chart.axis.MonthDateFormat.format : $r5 = r0.<org.jfree.chart.axis.MonthDateFormat: java.util.Calendar calendar> >>>>>>>> org.jfree.chart.axis.MonthDateFormat.format : i0 = virtualinvoke $r5.<java.util.Calendar: int get(int)>(2)
org.jfree.chart.axis.MonthDateFormat.format : i0 = virtualinvoke $r5.<java.util.Calendar: int get(int)>(2) >>>>>>>> org.jfree.chart.axis.MonthDateFormat.format : $r6 = r0.<org.jfree.chart.axis.MonthDateFormat: java.lang.String[] months>
org.jfree.chart.axis.MonthDateFormat.format : $r6 = r0.<org.jfree.chart.axis.MonthDateFormat: java.lang.String[] months> >>>>>>>> org.jfree.chart.axis.MonthDateFormat.format : $r7 = $r6[i0]
org.jfree.chart.axis.MonthDateFormat.format : $r7 = $r6[i0] >>>>>>>> org.jfree.chart.axis.MonthDateFormat.format : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7)
org.jfree.chart.axis.MonthDateFormat.format : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7) >>>>>>>> org.jfree.chart.axis.MonthDateFormat.format : $r9 = r0.<org.jfree.chart.axis.MonthDateFormat: boolean[] showYear>
org.jfree.chart.axis.MonthDateFormat.format : $r9 = r0.<org.jfree.chart.axis.MonthDateFormat: boolean[] showYear> >>>>>>>> org.jfree.chart.axis.MonthDateFormat.format : $z0 = $r9[i0]
org.jfree.chart.axis.MonthDateFormat.format : $z0 = $r9[i0] >>>>>>>> org.jfree.chart.axis.MonthDateFormat.format : if $z0 == 0
org.jfree.chart.axis.MonthDateFormat.format : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.MonthDateFormat.format : return r2
org.jfree.chart.axis.MonthDateFormat.format : return r2 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeries : r2 = null
org.jfree.data.time.TimeSeriesCollection.getSeries : r2 = null >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeries : $r6 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.List data>
org.jfree.data.time.TimeSeriesCollection.getSeries : $r6 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeries : r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.time.TimeSeriesCollection.getSeries : r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeries : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.time.TimeSeriesCollection.getSeries : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeries : if $z0 == 0
org.jfree.data.time.TimeSeriesCollection.getSeries : if $z0 == 0 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeries : return r2
org.jfree.data.time.TimeSeriesCollection.getSeries : return r2 >>>>>>>> org.jfree.data.time.MovingAverage.createMovingAverage : if r0 != null
org.jfree.data.time.MovingAverage.createMovingAverage : if r0 != null >>>>>>>> org.jfree.data.time.MovingAverage.createMovingAverage : $r5 = new org.jfree.data.xy.XYSeriesCollection
org.jfree.data.time.MovingAverage.createMovingAverage : $r5 = new org.jfree.data.xy.XYSeriesCollection >>>>>>>> org.jfree.data.time.MovingAverage.createMovingAverage : specialinvoke $r5.<org.jfree.data.xy.XYSeriesCollection: void <init>()>()
org.jfree.data.time.MovingAverage.createMovingAverage : specialinvoke $r5.<org.jfree.data.xy.XYSeriesCollection: void <init>()>() >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.addChangeListener : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = <org.jfree.data.general.AbstractDataset: java.lang.Class class$org$jfree$data$general$DatasetChangeListener>
org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = <org.jfree.data.general.AbstractDataset: java.lang.Class class$org$jfree$data$general$DatasetChangeListener> >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : if $r2 != null
org.jfree.data.general.AbstractDataset.addChangeListener : if $r2 != null >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : $r4 = <org.jfree.data.general.AbstractDataset: java.lang.Class class$org$jfree$data$general$DatasetChangeListener>
org.jfree.data.general.AbstractDataset.addChangeListener : $r4 = <org.jfree.data.general.AbstractDataset: java.lang.Class class$org$jfree$data$general$DatasetChangeListener> >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : virtualinvoke $r3.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>($r4, r1)
org.jfree.data.general.AbstractDataset.addChangeListener : virtualinvoke $r3.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>($r4, r1) >>>>>>>> org.jfree.data.time.MovingAverage.createMovingAverage : r2 = $r5
org.jfree.data.time.MovingAverage.createMovingAverage : r2 = $r5 >>>>>>>> org.jfree.data.time.MovingAverage.createMovingAverage : i0 = 0
org.jfree.data.time.MovingAverage.createMovingAverage : i0 = 0 >>>>>>>> org.jfree.data.time.MovingAverage.createMovingAverage : $i1 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getSeriesCount()>()
org.jfree.data.time.MovingAverage.createMovingAverage : $i1 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getSeriesCount()>() >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeriesCount : $r1 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.List data>
org.jfree.data.time.TimeSeriesCollection.getSeriesCount : $r1 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeriesCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.time.TimeSeriesCollection.getSeriesCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeriesCount : return $i0
org.jfree.data.time.TimeSeriesCollection.getSeriesCount : return $i0 >>>>>>>> org.jfree.data.time.MovingAverage.createMovingAverage : if i0 >= $i1
org.jfree.data.time.MovingAverage.createMovingAverage : if i0 >= $i1 >>>>>>>> org.jfree.data.time.MovingAverage.createMovingAverage : return r2
