org.jfree.data.DataUtilities.createNumberArray2D : if r0 != null >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : i0 = lengthof r0
org.jfree.data.DataUtilities.createNumberArray2D : i0 = lengthof r0 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : r1 = newarray (java.lang.Number[])[i0]
org.jfree.data.DataUtilities.createNumberArray2D : r1 = newarray (java.lang.Number[])[i0] >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : i1 = 0
org.jfree.data.DataUtilities.createNumberArray2D : i1 = 0 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : if i1 >= i0
org.jfree.data.DataUtilities.createNumberArray2D : if i1 >= i0 >>>>>>>> org.jfree.data.DataUtilities.createNumberArray2D : return r1
org.jfree.data.DataUtilities.createNumberArray2D : return r1 >>>>>>>> org.jfree.chart.util.ResourceBundleWrapper.getBundle : $r1 = <org.jfree.chart.util.ResourceBundleWrapper: java.net.URLClassLoader noCodeBaseClassLoader>
org.jfree.chart.util.ResourceBundleWrapper.getBundle : $r1 = <org.jfree.chart.util.ResourceBundleWrapper: java.net.URLClassLoader noCodeBaseClassLoader> >>>>>>>> org.jfree.chart.util.ResourceBundleWrapper.getBundle : if $r1 == null
org.jfree.chart.util.ResourceBundleWrapper.getBundle : if $r1 == null >>>>>>>> org.jfree.chart.util.ResourceBundleWrapper.getBundle : $r5 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>(r0)
org.jfree.chart.util.ResourceBundleWrapper.getBundle : $r5 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>(r0) >>>>>>>> org.jfree.chart.util.ResourceBundleWrapper.getBundle : return $r5
org.jfree.chart.util.ResourceBundleWrapper.getBundle : return $r5 >>>>>>>> org.jfree.data.general.CombinedDataset.add : i0 = 0
org.jfree.data.general.CombinedDataset.add : i0 = 0 >>>>>>>> org.jfree.data.general.CombinedDataset.add : $i1 = lengthof r1
org.jfree.data.general.CombinedDataset.add : $i1 = lengthof r1 >>>>>>>> org.jfree.data.general.CombinedDataset.add : if i0 >= $i1
org.jfree.data.general.CombinedDataset.add : if i0 >= $i1 >>>>>>>> org.jfree.data.general.CombinedDataset.add : $r2 = r1[i0]
org.jfree.data.general.CombinedDataset.add : $r2 = r1[i0] >>>>>>>> org.jfree.data.general.CombinedDataset.add : specialinvoke r0.<org.jfree.data.general.CombinedDataset: void fastAdd(org.jfree.data.general.SeriesDataset)>($r2)
org.jfree.data.general.CombinedDataset.add : specialinvoke r0.<org.jfree.data.general.CombinedDataset: void fastAdd(org.jfree.data.general.SeriesDataset)>($r2) >>>>>>>> org.jfree.data.general.CombinedDataset.fastAdd : i0 = 0
org.jfree.data.general.CombinedDataset.fastAdd : i0 = 0 >>>>>>>> org.jfree.data.general.CombinedDataset.fastAdd : $i1 = interfaceinvoke r1.<org.jfree.data.general.SeriesDataset: int getSeriesCount()>()
org.jfree.data.general.CombinedDataset.fastAdd : $i1 = interfaceinvoke r1.<org.jfree.data.general.SeriesDataset: int getSeriesCount()>() >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : i0 = 0
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : i0 = 0 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : $r1 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] startData>
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : $r1 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] startData> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : if $r1 == null
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : if $r1 == null >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : $r2 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] startData>
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : $r2 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] startData> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : i0 = lengthof $r2
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : i0 = lengthof $r2 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : return i0
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount : return i0 >>>>>>>> org.jfree.data.general.CombinedDataset.fastAdd : if i0 >= $i1
org.jfree.data.general.CombinedDataset.fastAdd : if i0 >= $i1 >>>>>>>> org.jfree.data.general.CombinedDataset.add : i0 = i0 + 1
org.jfree.data.general.CombinedDataset.add : i0 = i0 + 1 >>>>>>>> org.jfree.data.general.CombinedDataset.add : goto [?= $i1 = lengthof r1]
org.jfree.data.general.CombinedDataset.add : goto [?= $i1 = lengthof r1] >>>>>>>> org.jfree.data.general.CombinedDataset.add : $r3 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.general.CombinedDataset.add : $r3 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.general.CombinedDataset.add : specialinvoke $r3.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.general.CombinedDataset.add : specialinvoke $r3.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.general.CombinedDataset.add : r4 = $r3
org.jfree.data.general.CombinedDataset.add : r4 = $r3 >>>>>>>> org.jfree.data.general.CombinedDataset.add : virtualinvoke r0.<org.jfree.data.general.CombinedDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>(r4)
org.jfree.data.general.CombinedDataset.add : virtualinvoke r0.<org.jfree.data.general.CombinedDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>(r4) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0
org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateXYRangeBounds : $r1 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.xy.XYDataset)>(r0)
org.jfree.data.general.DatasetUtilities.iterateXYRangeBounds : $r1 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.xy.XYDataset)>(r0) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $r1 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)>(r0, 1)
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $r1 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)>(r0, 1) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d0 = #Infinity
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d0 = #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d1 = #-Infinity
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : d1 = #-Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getSeriesCount()>()
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getSeriesCount()>() >>>>>>>> org.jfree.data.general.CombinedDataset.getSeriesCount : $r1 = r0.<org.jfree.data.general.CombinedDataset: java.util.List datasetInfo>
org.jfree.data.general.CombinedDataset.getSeriesCount : $r1 = r0.<org.jfree.data.general.CombinedDataset: java.util.List datasetInfo> >>>>>>>> org.jfree.data.general.CombinedDataset.getSeriesCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.general.CombinedDataset.getSeriesCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.general.CombinedDataset.getSeriesCount : return $i0
org.jfree.data.general.CombinedDataset.getSeriesCount : return $i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if z0 == 0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $z1 = r0 instanceof org.jfree.data.xy.IntervalXYDataset
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $z1 = r0 instanceof org.jfree.data.xy.IntervalXYDataset >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $z1 == 0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : r1 = (org.jfree.data.xy.IntervalXYDataset) r0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : r1 = (org.jfree.data.xy.IntervalXYDataset) r0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i1 = 0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : i1 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if i1 >= i0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if i1 >= i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : goto [?= $b10 = d0 cmpl #Infinity]
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : goto [?= $b10 = d0 cmpl #Infinity] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $b10 = d0 cmpl #Infinity
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : $b10 = d0 cmpl #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $b10 != 0
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : if $b10 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : return null
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : return null >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateRangeBounds : return $r1
org.jfree.data.general.DatasetUtilities.iterateRangeBounds : return $r1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateXYRangeBounds : return $r1
org.jfree.data.general.DatasetUtilities.iterateXYRangeBounds : return $r1 >>>>>>>> org.jfree.data.general.AbstractDataset.validateObject : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void fireDatasetChanged()>()
org.jfree.data.general.AbstractDataset.validateObject : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : if r0 != null
org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : if r0 != null >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : n0 = null
org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : n0 = null >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : $z0 = r0 instanceof org.jfree.data.DomainInfo
org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : $z0 = r0 instanceof org.jfree.data.DomainInfo >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : if $z0 == 0
org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : if $z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : d2 = #Infinity
org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : d2 = #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getSeriesCount()>()
org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getSeriesCount()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : i1 = 0
org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : i1 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : if i1 >= i0
org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : if i1 >= i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : $b4 = d2 cmpl #Infinity
org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : $b4 = d2 cmpl #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : if $b4 != 0
org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : if $b4 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : r5 = null
org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : r5 = null >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : goto [?= return r5]
org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : goto [?= return r5] >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : return r5
org.jfree.data.general.DatasetUtilities.findMinimumDomainValue : return r5 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumRangeValue : if r0 != null
org.jfree.data.general.DatasetUtilities.findMaximumRangeValue : if r0 != null >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumRangeValue : $z0 = r0 instanceof org.jfree.data.RangeInfo
org.jfree.data.general.DatasetUtilities.findMaximumRangeValue : $z0 = r0 instanceof org.jfree.data.RangeInfo >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumRangeValue : if $z0 == 0
org.jfree.data.general.DatasetUtilities.findMaximumRangeValue : if $z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumRangeValue : d2 = #-Infinity
org.jfree.data.general.DatasetUtilities.findMaximumRangeValue : d2 = #-Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumRangeValue : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getSeriesCount()>()
org.jfree.data.general.DatasetUtilities.findMaximumRangeValue : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getSeriesCount()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumRangeValue : i1 = 0
org.jfree.data.general.DatasetUtilities.findMaximumRangeValue : i1 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumRangeValue : if i1 >= i0
org.jfree.data.general.DatasetUtilities.findMaximumRangeValue : if i1 >= i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumRangeValue : $b4 = d2 cmpl #-Infinity
org.jfree.data.general.DatasetUtilities.findMaximumRangeValue : $b4 = d2 cmpl #-Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumRangeValue : if $b4 != 0
org.jfree.data.general.DatasetUtilities.findMaximumRangeValue : if $b4 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumRangeValue : return null
org.jfree.data.general.DatasetUtilities.findMaximumRangeValue : return null >>>>>>>> org.jfree.data.general.DatasetUtilities.createPieDatasetForColumn : i0 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getColumnIndex(java.lang.Comparable)>(r1)
org.jfree.data.general.DatasetUtilities.createPieDatasetForColumn : i0 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getColumnIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnIndex : if r1 != null
org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnIndex : if r1 != null >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnIndex : $i0 = virtualinvoke r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: int getCategoryIndex(java.lang.Comparable)>(r1)
org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnIndex : $i0 = virtualinvoke r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: int getCategoryIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getCategoryIndex : i0 = -1
org.jfree.data.category.DefaultIntervalCategoryDataset.getCategoryIndex : i0 = -1 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getCategoryIndex : i1 = 0
org.jfree.data.category.DefaultIntervalCategoryDataset.getCategoryIndex : i1 = 0 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getCategoryIndex : $r2 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] categoryKeys>
org.jfree.data.category.DefaultIntervalCategoryDataset.getCategoryIndex : $r2 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] categoryKeys> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getCategoryIndex : $i2 = lengthof $r2
org.jfree.data.category.DefaultIntervalCategoryDataset.getCategoryIndex : $i2 = lengthof $r2 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getCategoryIndex : if i1 >= $i2
org.jfree.data.category.DefaultIntervalCategoryDataset.getCategoryIndex : if i1 >= $i2 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getCategoryIndex : return i0
org.jfree.data.category.DefaultIntervalCategoryDataset.getCategoryIndex : return i0 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnIndex : return $i0
org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnIndex : return $i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.createPieDatasetForColumn : $r2 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.general.PieDataset createPieDatasetForColumn(org.jfree.data.category.CategoryDataset,int)>(r0, i0)
org.jfree.data.general.DatasetUtilities.createPieDatasetForColumn : $r2 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.general.PieDataset createPieDatasetForColumn(org.jfree.data.category.CategoryDataset,int)>(r0, i0) >>>>>>>> org.jfree.data.general.DatasetUtilities.createPieDatasetForColumn : $r1 = new org.jfree.data.general.DefaultPieDataset
org.jfree.data.general.DatasetUtilities.createPieDatasetForColumn : $r1 = new org.jfree.data.general.DefaultPieDataset >>>>>>>> org.jfree.data.general.DatasetUtilities.createPieDatasetForColumn : specialinvoke $r1.<org.jfree.data.general.DefaultPieDataset: void <init>()>()
org.jfree.data.general.DatasetUtilities.createPieDatasetForColumn : specialinvoke $r1.<org.jfree.data.general.DefaultPieDataset: void <init>()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.createPieDatasetForColumn : r2 = $r1
org.jfree.data.general.DatasetUtilities.createPieDatasetForColumn : r2 = $r1 >>>>>>>> org.jfree.data.general.DatasetUtilities.createPieDatasetForColumn : i1 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getRowCount()>()
org.jfree.data.general.DatasetUtilities.createPieDatasetForColumn : i1 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getRowCount()>() >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getRowCount : $r1 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] seriesKeys>
org.jfree.data.category.DefaultIntervalCategoryDataset.getRowCount : $r1 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] seriesKeys> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getRowCount : $i0 = lengthof $r1
org.jfree.data.category.DefaultIntervalCategoryDataset.getRowCount : $i0 = lengthof $r1 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getRowCount : return $i0
org.jfree.data.category.DefaultIntervalCategoryDataset.getRowCount : return $i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.createPieDatasetForColumn : i2 = 0
org.jfree.data.general.DatasetUtilities.createPieDatasetForColumn : i2 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.createPieDatasetForColumn : if i2 >= i1
org.jfree.data.general.DatasetUtilities.createPieDatasetForColumn : if i2 >= i1 >>>>>>>> org.jfree.data.general.DatasetUtilities.createPieDatasetForColumn : return r2
org.jfree.data.general.DatasetUtilities.createPieDatasetForColumn : return r2 >>>>>>>> org.jfree.data.general.DatasetUtilities.createPieDatasetForColumn : return $r2
org.jfree.data.general.DatasetUtilities.createPieDatasetForColumn : return $r2 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeries : $r1 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] seriesKeys>
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeries : $r1 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] seriesKeys> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeries : if $r1 != null
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeries : if $r1 != null >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeries : $r3 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] seriesKeys>
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeries : $r3 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] seriesKeys> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeries : $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3)
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeries : $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3) >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeries : $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4)
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeries : $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4) >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getSeries : return $r5
org.jfree.data.category.DefaultIntervalCategoryDataset.getSeries : return $r5 >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.seriesChanged : virtualinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: void fireDatasetChanged()>()
org.jfree.data.general.AbstractSeriesDataset.seriesChanged : virtualinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.general.AbstractDataset.removeChangeListener : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.removeChangeListener : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.removeChangeListener : $r2 = <org.jfree.data.general.AbstractDataset: java.lang.Class class$org$jfree$data$general$DatasetChangeListener>
org.jfree.data.general.AbstractDataset.removeChangeListener : $r2 = <org.jfree.data.general.AbstractDataset: java.lang.Class class$org$jfree$data$general$DatasetChangeListener> >>>>>>>> org.jfree.data.general.AbstractDataset.removeChangeListener : if $r2 != null
org.jfree.data.general.AbstractDataset.removeChangeListener : if $r2 != null >>>>>>>> org.jfree.data.general.AbstractDataset.removeChangeListener : $r4 = <org.jfree.data.general.AbstractDataset: java.lang.Class class$org$jfree$data$general$DatasetChangeListener>
org.jfree.data.general.AbstractDataset.removeChangeListener : $r4 = <org.jfree.data.general.AbstractDataset: java.lang.Class class$org$jfree$data$general$DatasetChangeListener> >>>>>>>> org.jfree.data.general.AbstractDataset.removeChangeListener : virtualinvoke $r3.<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>($r4, r1)
org.jfree.data.general.AbstractDataset.removeChangeListener : virtualinvoke $r3.<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>($r4, r1) >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getCategories : $r1 = virtualinvoke r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.util.List getColumnKeys()>()
org.jfree.data.category.DefaultIntervalCategoryDataset.getCategories : $r1 = virtualinvoke r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.util.List getColumnKeys()>() >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : $r1 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] categoryKeys>
org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : $r1 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] categoryKeys> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : if $r1 != null
org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : if $r1 != null >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : $r3 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] categoryKeys>
org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : $r3 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] categoryKeys> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3)
org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3) >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4)
org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4) >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : return $r5
org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys : return $r5 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getCategories : return $r1
org.jfree.data.category.DefaultIntervalCategoryDataset.getCategories : return $r1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if r0 != null
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if r0 != null >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if r1 != null
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if r1 != null >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = #-Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = #-Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i0 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getColumnCount()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i0 = interfaceinvoke r0.<org.jfree.data.category.CategoryDataset: int getColumnCount()>() >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnCount : $r1 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] categoryKeys>
org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnCount : $r1 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] categoryKeys> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnCount : $i0 = lengthof $r1
org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnCount : $i0 = lengthof $r1 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnCount : return $i0
org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnCount : return $i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if z0 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z1 = r0 instanceof org.jfree.data.statistics.BoxAndWhiskerCategoryDataset
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z1 = r0 instanceof org.jfree.data.statistics.BoxAndWhiskerCategoryDataset >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z1 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z3 = r0 instanceof org.jfree.data.category.IntervalCategoryDataset
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z3 = r0 instanceof org.jfree.data.category.IntervalCategoryDataset >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z3 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z3 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r10 = (org.jfree.data.category.IntervalCategoryDataset) r0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r10 = (org.jfree.data.category.IntervalCategoryDataset) r0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r11 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r11 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z4 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z4 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z4 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z4 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= $b12 = d0 cmpl #Infinity]
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= $b12 = d0 cmpl #Infinity] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $b12 = d0 cmpl #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $b12 = d0 cmpl #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $b12 != 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $b12 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : return null
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : return null >>>>>>>> org.jfree.data.Range.shift : if r0 != null
org.jfree.data.Range.shift : if r0 != null >>>>>>>> org.jfree.data.Range.shift : if z0 == 0
org.jfree.data.Range.shift : if z0 == 0 >>>>>>>> org.jfree.data.Range.shift : $r2 = new org.jfree.data.Range
org.jfree.data.Range.shift : $r2 = new org.jfree.data.Range >>>>>>>> org.jfree.data.Range.shift : $d1 = virtualinvoke r0.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.data.Range.shift : $d1 = virtualinvoke r0.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower>
org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower> >>>>>>>> org.jfree.data.Range.getLowerBound : return $d0
org.jfree.data.Range.getLowerBound : return $d0 >>>>>>>> org.jfree.data.Range.shift : $d2 = $d1 + d0
org.jfree.data.Range.shift : $d2 = $d1 + d0 >>>>>>>> org.jfree.data.Range.shift : $d3 = virtualinvoke r0.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.data.Range.shift : $d3 = virtualinvoke r0.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper>
org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper> >>>>>>>> org.jfree.data.Range.getUpperBound : return $d0
org.jfree.data.Range.getUpperBound : return $d0 >>>>>>>> org.jfree.data.Range.shift : $d4 = $d3 + d0
org.jfree.data.Range.shift : $d4 = $d3 + d0 >>>>>>>> org.jfree.data.Range.shift : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>($d2, $d4)
org.jfree.data.Range.shift : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>($d2, $d4) >>>>>>>> org.jfree.data.Range.shift : return $r2
org.jfree.data.Range.shift : return $r2 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if r2 != null
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if r2 != null >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r20 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r20 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z14 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z14 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z14 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z14 == 0 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.equals : if r1 != r0
org.jfree.data.category.DefaultIntervalCategoryDataset.equals : if r1 != r0 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.equals : $z0 = r1 instanceof org.jfree.data.category.DefaultIntervalCategoryDataset
org.jfree.data.category.DefaultIntervalCategoryDataset.equals : $z0 = r1 instanceof org.jfree.data.category.DefaultIntervalCategoryDataset >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.equals : if $z0 != 0
org.jfree.data.category.DefaultIntervalCategoryDataset.equals : if $z0 != 0 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.equals : r2 = (org.jfree.data.category.DefaultIntervalCategoryDataset) r1
org.jfree.data.category.DefaultIntervalCategoryDataset.equals : r2 = (org.jfree.data.category.DefaultIntervalCategoryDataset) r1 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.equals : $r3 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] seriesKeys>
org.jfree.data.category.DefaultIntervalCategoryDataset.equals : $r3 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] seriesKeys> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.equals : $r4 = r2.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] seriesKeys>
org.jfree.data.category.DefaultIntervalCategoryDataset.equals : $r4 = r2.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] seriesKeys> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.equals : $z1 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r3, $r4)
org.jfree.data.category.DefaultIntervalCategoryDataset.equals : $z1 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r3, $r4) >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.equals : if $z1 != 0
org.jfree.data.category.DefaultIntervalCategoryDataset.equals : if $z1 != 0 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.equals : $r5 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] categoryKeys>
org.jfree.data.category.DefaultIntervalCategoryDataset.equals : $r5 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] categoryKeys> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.equals : $r6 = r2.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] categoryKeys>
org.jfree.data.category.DefaultIntervalCategoryDataset.equals : $r6 = r2.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Comparable[] categoryKeys> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.equals : $z2 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r5, $r6)
org.jfree.data.category.DefaultIntervalCategoryDataset.equals : $z2 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r5, $r6) >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.equals : if $z2 != 0
org.jfree.data.category.DefaultIntervalCategoryDataset.equals : if $z2 != 0 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.equals : $r7 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] startData>
org.jfree.data.category.DefaultIntervalCategoryDataset.equals : $r7 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] startData> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.equals : $r8 = r2.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] startData>
org.jfree.data.category.DefaultIntervalCategoryDataset.equals : $r8 = r2.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] startData> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.equals : $z3 = staticinvoke <org.jfree.data.category.DefaultIntervalCategoryDataset: boolean equal(java.lang.Number[][],java.lang.Number[][])>($r7, $r8)
org.jfree.data.category.DefaultIntervalCategoryDataset.equals : $z3 = staticinvoke <org.jfree.data.category.DefaultIntervalCategoryDataset: boolean equal(java.lang.Number[][],java.lang.Number[][])>($r7, $r8) >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.equal : if r0 != null
org.jfree.data.category.DefaultIntervalCategoryDataset.equal : if r0 != null >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.equal : if r1 != null
org.jfree.data.category.DefaultIntervalCategoryDataset.equal : if r1 != null >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.equal : $i1 = lengthof r0
org.jfree.data.category.DefaultIntervalCategoryDataset.equal : $i1 = lengthof r0 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.equal : $i2 = lengthof r1
org.jfree.data.category.DefaultIntervalCategoryDataset.equal : $i2 = lengthof r1 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.equal : if $i1 == $i2
org.jfree.data.category.DefaultIntervalCategoryDataset.equal : if $i1 == $i2 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.equal : i0 = 0
org.jfree.data.category.DefaultIntervalCategoryDataset.equal : i0 = 0 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.equal : $i3 = lengthof r0
org.jfree.data.category.DefaultIntervalCategoryDataset.equal : $i3 = lengthof r0 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.equal : if i0 >= $i3
org.jfree.data.category.DefaultIntervalCategoryDataset.equal : if i0 >= $i3 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.equal : return 1
org.jfree.data.category.DefaultIntervalCategoryDataset.equal : return 1 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.equals : if $z3 != 0
org.jfree.data.category.DefaultIntervalCategoryDataset.equals : if $z3 != 0 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.equals : $r9 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] endData>
org.jfree.data.category.DefaultIntervalCategoryDataset.equals : $r9 = r0.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] endData> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.equals : $r10 = r2.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] endData>
org.jfree.data.category.DefaultIntervalCategoryDataset.equals : $r10 = r2.<org.jfree.data.category.DefaultIntervalCategoryDataset: java.lang.Number[][] endData> >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.equals : $z4 = staticinvoke <org.jfree.data.category.DefaultIntervalCategoryDataset: boolean equal(java.lang.Number[][],java.lang.Number[][])>($r9, $r10)
org.jfree.data.category.DefaultIntervalCategoryDataset.equals : $z4 = staticinvoke <org.jfree.data.category.DefaultIntervalCategoryDataset: boolean equal(java.lang.Number[][],java.lang.Number[][])>($r9, $r10) >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.equals : if $z4 != 0
org.jfree.data.category.DefaultIntervalCategoryDataset.equals : if $z4 != 0 >>>>>>>> org.jfree.data.category.DefaultIntervalCategoryDataset.equals : return 1
