org.jfree.data.time.TimeSeriesCollection.setDomainIsPointsInTime : r0.<org.jfree.data.time.TimeSeriesCollection: boolean domainIsPointsInTime> = z0 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.setDomainIsPointsInTime : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.time.TimeSeriesCollection.setDomainIsPointsInTime : $r1 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.time.TimeSeriesCollection.setDomainIsPointsInTime : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.time.TimeSeriesCollection.setDomainIsPointsInTime : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.time.TimeSeriesCollection.setDomainIsPointsInTime : virtualinvoke r0.<org.jfree.data.time.TimeSeriesCollection: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1)
org.jfree.data.time.TimeSeriesCollection.setDomainIsPointsInTime : virtualinvoke r0.<org.jfree.data.time.TimeSeriesCollection: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0
org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.renderer.RendererUtilities.findLiveItemsLowerBound : if r0 != null
org.jfree.chart.renderer.RendererUtilities.findLiveItemsLowerBound : if r0 != null >>>>>>>> org.jfree.chart.renderer.RendererUtilities.findLiveItemsLowerBound : $b5 = d0 cmpl d1
org.jfree.chart.renderer.RendererUtilities.findLiveItemsLowerBound : $b5 = d0 cmpl d1 >>>>>>>> org.jfree.chart.renderer.RendererUtilities.findLiveItemsLowerBound : if $b5 < 0
org.jfree.chart.renderer.RendererUtilities.findLiveItemsLowerBound : if $b5 < 0 >>>>>>>> org.jfree.chart.renderer.RendererUtilities.findLiveItemsLowerBound : $r2 = new java.lang.IllegalArgumentException
org.jfree.chart.renderer.RendererUtilities.findLiveItemsLowerBound : $r2 = new java.lang.IllegalArgumentException >>>>>>>> org.jfree.chart.renderer.RendererUtilities.findLiveItemsLowerBound : specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Requires xLow < xHigh.")
org.jfree.chart.renderer.RendererUtilities.findLiveItemsLowerBound : specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Requires xLow < xHigh.") >>>>>>>> org.jfree.chart.renderer.RendererUtilities.findLiveItemsLowerBound : throw $r2
