org.jfree.data.time.TimeSeriesCollection.setDomainIsPointsInTime : r0.<org.jfree.data.time.TimeSeriesCollection: boolean domainIsPointsInTime> = z0 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.setDomainIsPointsInTime : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.time.TimeSeriesCollection.setDomainIsPointsInTime : $r1 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.time.TimeSeriesCollection.setDomainIsPointsInTime : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.time.TimeSeriesCollection.setDomainIsPointsInTime : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.time.TimeSeriesCollection.setDomainIsPointsInTime : virtualinvoke r0.<org.jfree.data.time.TimeSeriesCollection: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1)
org.jfree.data.time.TimeSeriesCollection.setDomainIsPointsInTime : virtualinvoke r0.<org.jfree.data.time.TimeSeriesCollection: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0
org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainLowerBound : d0 = #NaN
org.jfree.data.time.TimeSeriesCollection.getDomainLowerBound : d0 = #NaN >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainLowerBound : r1 = virtualinvoke r0.<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>(z0)
org.jfree.data.time.TimeSeriesCollection.getDomainLowerBound : r1 = virtualinvoke r0.<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>(z0) >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : r1 = null
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : r1 = null >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $r7 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.List data>
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $r7 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : r2 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : r2 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : if $z1 == 0
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : if $z1 == 0 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainBounds : return r1
org.jfree.data.time.TimeSeriesCollection.getDomainBounds : return r1 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainLowerBound : if r1 == null
org.jfree.data.time.TimeSeriesCollection.getDomainLowerBound : if r1 == null >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getDomainLowerBound : return d0
