org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $r9 = virtualinvoke r2.<org.jfree.chart.plot.PolarPlot: java.awt.Font getAngleLabelFont()>() >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r9)
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r9) >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $r10 = virtualinvoke r2.<org.jfree.chart.plot.PolarPlot: java.awt.Stroke getAngleGridlineStroke()>()
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $r10 = virtualinvoke r2.<org.jfree.chart.plot.PolarPlot: java.awt.Stroke getAngleGridlineStroke()>() >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r10)
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r10) >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $r11 = virtualinvoke r2.<org.jfree.chart.plot.PolarPlot: java.awt.Paint getAngleGridlinePaint()>()
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $r11 = virtualinvoke r2.<org.jfree.chart.plot.PolarPlot: java.awt.Paint getAngleGridlinePaint()>() >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r11)
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r11) >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $r12 = virtualinvoke r2.<org.jfree.chart.plot.PolarPlot: org.jfree.chart.axis.ValueAxis getAxis()>()
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $r12 = virtualinvoke r2.<org.jfree.chart.plot.PolarPlot: org.jfree.chart.axis.ValueAxis getAxis()>() >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : d0 = virtualinvoke $r12.<org.jfree.chart.axis.ValueAxis: double getLowerBound()>()
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : d0 = virtualinvoke $r12.<org.jfree.chart.axis.ValueAxis: double getLowerBound()>() >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $r13 = virtualinvoke r2.<org.jfree.chart.plot.PolarPlot: org.jfree.chart.axis.ValueAxis getAxis()>()
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $r13 = virtualinvoke r2.<org.jfree.chart.plot.PolarPlot: org.jfree.chart.axis.ValueAxis getAxis()>() >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : d1 = virtualinvoke $r13.<org.jfree.chart.axis.ValueAxis: double getUpperBound()>()
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : d1 = virtualinvoke $r13.<org.jfree.chart.axis.ValueAxis: double getUpperBound()>() >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : r5 = virtualinvoke r2.<org.jfree.chart.plot.PolarPlot: java.awt.Point translateValueThetaRadiusToJava2D(double,double,java.awt.geom.Rectangle2D)>(d0, d0, r4)
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : r5 = virtualinvoke r2.<org.jfree.chart.plot.PolarPlot: java.awt.Point translateValueThetaRadiusToJava2D(double,double,java.awt.geom.Rectangle2D)>(d0, d0, r4) >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : r6 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : r6 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : if $z0 == 0
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $r14 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : return
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $r14 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : r7 = (org.jfree.chart.axis.NumberTick) $r14
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : r7 = (org.jfree.chart.axis.NumberTick) $r14 >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $r15 = virtualinvoke r7.<org.jfree.chart.axis.NumberTick: java.lang.Number getNumber()>()
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $r15 = virtualinvoke r7.<org.jfree.chart.axis.NumberTick: java.lang.Number getNumber()>() >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : d2 = virtualinvoke $r15.<java.lang.Number: double doubleValue()>()
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : d2 = virtualinvoke $r15.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : r8 = virtualinvoke r2.<org.jfree.chart.plot.PolarPlot: java.awt.Point translateValueThetaRadiusToJava2D(double,double,java.awt.geom.Rectangle2D)>(d2, d1, r4)
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : r8 = virtualinvoke r2.<org.jfree.chart.plot.PolarPlot: java.awt.Point translateValueThetaRadiusToJava2D(double,double,java.awt.geom.Rectangle2D)>(d2, d1, r4) >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $r16 = virtualinvoke r2.<org.jfree.chart.plot.PolarPlot: java.awt.Paint getAngleGridlinePaint()>()
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $r16 = virtualinvoke r2.<org.jfree.chart.plot.PolarPlot: java.awt.Paint getAngleGridlinePaint()>() >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r16)
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r16) >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $i2 = r5.<java.awt.Point: int x>
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $i2 = r5.<java.awt.Point: int x> >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $i3 = r5.<java.awt.Point: int y>
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $i3 = r5.<java.awt.Point: int y> >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $i4 = r8.<java.awt.Point: int x>
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $i4 = r8.<java.awt.Point: int x> >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $i5 = r8.<java.awt.Point: int y>
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $i5 = r8.<java.awt.Point: int y> >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : virtualinvoke r1.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i2, $i3, $i4, $i5)
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : virtualinvoke r1.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i2, $i3, $i4, $i5) >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $z1 = virtualinvoke r2.<org.jfree.chart.plot.PolarPlot: boolean isAngleLabelsVisible()>()
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $z1 = virtualinvoke r2.<org.jfree.chart.plot.PolarPlot: boolean isAngleLabelsVisible()>() >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : if $z1 == 0
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : if $z1 == 0 >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : i0 = r8.<java.awt.Point: int x>
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : if $z1 == 0 >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : i0 = r8.<java.awt.Point: int x> >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : i1 = r8.<java.awt.Point: int y>
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : i1 = r8.<java.awt.Point: int y> >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $r17 = virtualinvoke r2.<org.jfree.chart.plot.PolarPlot: java.awt.Paint getAngleLabelPaint()>()
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $r17 = virtualinvoke r2.<org.jfree.chart.plot.PolarPlot: java.awt.Paint getAngleLabelPaint()>() >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r17)
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r17) >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $r18 = virtualinvoke r7.<org.jfree.chart.axis.NumberTick: java.lang.String getText()>()
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $r18 = virtualinvoke r7.<org.jfree.chart.axis.NumberTick: java.lang.String getText()>() >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $f0 = (float) i0
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $f0 = (float) i0 >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $f1 = (float) i1
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $f1 = (float) i1 >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $r19 = virtualinvoke r7.<org.jfree.chart.axis.NumberTick: org.jfree.ui.TextAnchor getTextAnchor()>()
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : $r19 = virtualinvoke r7.<org.jfree.chart.axis.NumberTick: org.jfree.ui.TextAnchor getTextAnchor()>() >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : staticinvoke <org.jfree.text.TextUtilities: java.awt.geom.Rectangle2D drawAlignedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.ui.TextAnchor)>($r18, r1, $f0, $f1, $r19)
org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : staticinvoke <org.jfree.text.TextUtilities: java.awt.geom.Rectangle2D drawAlignedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.ui.TextAnchor)>($r18, r1, $f0, $f1, $r19) >>>>>>>> org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
