org.jfree.chart.plot.CategoryPlot.removeRangeMarker : if r1 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.removeRangeMarker : $r4 = new java.lang.IllegalArgumentException
org.jfree.chart.plot.CategoryPlot.removeRangeMarker : if r1 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.removeRangeMarker : $r5 = <org.jfree.ui.Layer: org.jfree.ui.Layer FOREGROUND>
org.jfree.chart.plot.CategoryPlot.removeRangeMarker : $r5 = <org.jfree.ui.Layer: org.jfree.ui.Layer FOREGROUND> >>>>>>>> org.jfree.chart.plot.CategoryPlot.removeRangeMarker : if r2 != $r5
org.jfree.chart.plot.CategoryPlot.removeRangeMarker : if r2 != $r5 >>>>>>>> org.jfree.chart.plot.CategoryPlot.removeRangeMarker : $r6 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundRangeMarkers>
org.jfree.chart.plot.CategoryPlot.removeRangeMarker : if r2 != $r5 >>>>>>>> org.jfree.chart.plot.CategoryPlot.removeRangeMarker : $r9 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundRangeMarkers>
org.jfree.chart.plot.CategoryPlot.removeRangeMarker : $r9 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map backgroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.removeRangeMarker : $r10 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.removeRangeMarker : $r10 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.removeRangeMarker : specialinvoke $r10.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.CategoryPlot.removeRangeMarker : specialinvoke $r10.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.removeRangeMarker : $r11 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10)
org.jfree.chart.plot.CategoryPlot.removeRangeMarker : $r11 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10) >>>>>>>> org.jfree.chart.plot.CategoryPlot.removeRangeMarker : r3 = (java.util.ArrayList) $r11
org.jfree.chart.plot.CategoryPlot.removeRangeMarker : r3 = (java.util.ArrayList) $r11 >>>>>>>> org.jfree.chart.plot.CategoryPlot.removeRangeMarker : if r3 != null
org.jfree.chart.plot.CategoryPlot.removeRangeMarker : if r3 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.removeRangeMarker : return 0
org.jfree.chart.plot.CategoryPlot.removeRangeMarker : if r3 != null >>>>>>>> org.jfree.chart.plot.CategoryPlot.removeRangeMarker : z1 = virtualinvoke r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1)
org.jfree.chart.plot.CategoryPlot.removeRangeMarker : z1 = virtualinvoke r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.CategoryPlot.removeRangeMarker : if z1 == 0
org.jfree.chart.plot.CategoryPlot.removeRangeMarker : if z1 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.removeRangeMarker : if z0 == 0
org.jfree.chart.plot.CategoryPlot.removeRangeMarker : if z1 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.removeRangeMarker : return z1
org.jfree.chart.plot.CategoryPlot.removeRangeMarker : if z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.removeRangeMarker : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void fireChangeEvent()>()
org.jfree.chart.plot.CategoryPlot.removeRangeMarker : if z0 == 0 >>>>>>>> org.jfree.chart.plot.CategoryPlot.removeRangeMarker : return z1
org.jfree.chart.plot.CategoryPlot.removeRangeMarker : virtualinvoke r0.<org.jfree.chart.plot.CategoryPlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.CategoryPlot.removeRangeMarker : return z1
org.jfree.chart.plot.CategoryPlot.removeRangeMarker : $r6 = r0.<org.jfree.chart.plot.CategoryPlot: java.util.Map foregroundRangeMarkers> >>>>>>>> org.jfree.chart.plot.CategoryPlot.removeRangeMarker : $r7 = new java.lang.Integer
org.jfree.chart.plot.CategoryPlot.removeRangeMarker : $r7 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.CategoryPlot.removeRangeMarker : specialinvoke $r7.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.CategoryPlot.removeRangeMarker : specialinvoke $r7.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.CategoryPlot.removeRangeMarker : $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7)
org.jfree.chart.plot.CategoryPlot.removeRangeMarker : $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7) >>>>>>>> org.jfree.chart.plot.CategoryPlot.removeRangeMarker : r3 = (java.util.ArrayList) $r8
org.jfree.chart.plot.CategoryPlot.removeRangeMarker : r3 = (java.util.ArrayList) $r8 >>>>>>>> org.jfree.chart.plot.CategoryPlot.removeRangeMarker : goto [?= (branch)]
org.jfree.chart.plot.CategoryPlot.removeRangeMarker : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.CategoryPlot.removeRangeMarker : if r3 != null
org.jfree.chart.plot.CategoryPlot.removeRangeMarker : $r4 = new java.lang.IllegalArgumentException >>>>>>>> org.jfree.chart.plot.CategoryPlot.removeRangeMarker : specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null \'marker\' argument.")
org.jfree.chart.plot.CategoryPlot.removeRangeMarker : specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null \'marker\' argument.") >>>>>>>> org.jfree.chart.plot.CategoryPlot.removeRangeMarker : throw $r4
