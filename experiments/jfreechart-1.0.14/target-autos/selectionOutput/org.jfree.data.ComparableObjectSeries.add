org.jfree.data.ComparableObjectSeries.add : if r1 != null >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $r2 = new java.lang.IllegalArgumentException
org.jfree.data.ComparableObjectSeries.add : if r1 != null >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $z1 = r0.<org.jfree.data.ComparableObjectSeries: boolean autoSort>
org.jfree.data.ComparableObjectSeries.add : $z1 = r0.<org.jfree.data.ComparableObjectSeries: boolean autoSort> >>>>>>>> org.jfree.data.ComparableObjectSeries.add : if $z1 == 0
org.jfree.data.ComparableObjectSeries.add : if $z1 == 0 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $r3 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data>
org.jfree.data.ComparableObjectSeries.add : if $z1 == 0 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $z4 = r0.<org.jfree.data.ComparableObjectSeries: boolean allowDuplicateXValues>
org.jfree.data.ComparableObjectSeries.add : $z4 = r0.<org.jfree.data.ComparableObjectSeries: boolean allowDuplicateXValues> >>>>>>>> org.jfree.data.ComparableObjectSeries.add : if $z4 != 0
org.jfree.data.ComparableObjectSeries.add : if $z4 != 0 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $r12 = virtualinvoke r1.<org.jfree.data.ComparableObjectItem: java.lang.Comparable getComparable()>()
org.jfree.data.ComparableObjectSeries.add : if $z4 != 0 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $r14 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data>
org.jfree.data.ComparableObjectSeries.add : $r14 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data> >>>>>>>> org.jfree.data.ComparableObjectSeries.add : interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.data.ComparableObjectSeries.add : interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $i7 = virtualinvoke r0.<org.jfree.data.ComparableObjectSeries: int getItemCount()>()
org.jfree.data.ComparableObjectSeries.add : $i7 = virtualinvoke r0.<org.jfree.data.ComparableObjectSeries: int getItemCount()>() >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $i8 = r0.<org.jfree.data.ComparableObjectSeries: int maximumItemCount>
org.jfree.data.ComparableObjectSeries.add : $i8 = r0.<org.jfree.data.ComparableObjectSeries: int maximumItemCount> >>>>>>>> org.jfree.data.ComparableObjectSeries.add : if $i7 <= $i8
org.jfree.data.ComparableObjectSeries.add : if $i7 <= $i8 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $r15 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data>
org.jfree.data.ComparableObjectSeries.add : if $i7 <= $i8 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : if z0 == 0
org.jfree.data.ComparableObjectSeries.add : if z0 == 0 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : virtualinvoke r0.<org.jfree.data.ComparableObjectSeries: void fireSeriesChanged()>()
org.jfree.data.ComparableObjectSeries.add : if z0 == 0 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : return
org.jfree.data.ComparableObjectSeries.add : virtualinvoke r0.<org.jfree.data.ComparableObjectSeries: void fireSeriesChanged()>() >>>>>>>> org.jfree.data.ComparableObjectSeries.add : return
org.jfree.data.ComparableObjectSeries.add : $r15 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data> >>>>>>>> org.jfree.data.ComparableObjectSeries.add : interfaceinvoke $r15.<java.util.List: java.lang.Object remove(int)>(0)
org.jfree.data.ComparableObjectSeries.add : interfaceinvoke $r15.<java.util.List: java.lang.Object remove(int)>(0) >>>>>>>> org.jfree.data.ComparableObjectSeries.add : if z0 == 0
org.jfree.data.ComparableObjectSeries.add : $r12 = virtualinvoke r1.<org.jfree.data.ComparableObjectItem: java.lang.Comparable getComparable()>() >>>>>>>> org.jfree.data.ComparableObjectSeries.add : i6 = virtualinvoke r0.<org.jfree.data.ComparableObjectSeries: int indexOf(java.lang.Comparable)>($r12)
org.jfree.data.ComparableObjectSeries.add : i6 = virtualinvoke r0.<org.jfree.data.ComparableObjectSeries: int indexOf(java.lang.Comparable)>($r12) >>>>>>>> org.jfree.data.ComparableObjectSeries.add : if i6 < 0
org.jfree.data.ComparableObjectSeries.add : if i6 < 0 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $r13 = new org.jfree.data.general.SeriesException
org.jfree.data.ComparableObjectSeries.add : if i6 < 0 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $r14 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data>
org.jfree.data.ComparableObjectSeries.add : $r13 = new org.jfree.data.general.SeriesException >>>>>>>> org.jfree.data.ComparableObjectSeries.add : specialinvoke $r13.<org.jfree.data.general.SeriesException: void <init>(java.lang.String)>("X-value already exists.")
org.jfree.data.ComparableObjectSeries.add : specialinvoke $r13.<org.jfree.data.general.SeriesException: void <init>(java.lang.String)>("X-value already exists.") >>>>>>>> org.jfree.data.ComparableObjectSeries.add : throw $r13
org.jfree.data.ComparableObjectSeries.add : $r3 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data> >>>>>>>> org.jfree.data.ComparableObjectSeries.add : i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r3, r1)
org.jfree.data.ComparableObjectSeries.add : i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r3, r1) >>>>>>>> org.jfree.data.ComparableObjectSeries.add : if i0 >= 0
org.jfree.data.ComparableObjectSeries.add : if i0 >= 0 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $r4 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data>
org.jfree.data.ComparableObjectSeries.add : if i0 >= 0 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $z2 = r0.<org.jfree.data.ComparableObjectSeries: boolean allowDuplicateXValues>
org.jfree.data.ComparableObjectSeries.add : $z2 = r0.<org.jfree.data.ComparableObjectSeries: boolean allowDuplicateXValues> >>>>>>>> org.jfree.data.ComparableObjectSeries.add : if $z2 == 0
org.jfree.data.ComparableObjectSeries.add : if $z2 == 0 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $r5 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data>
org.jfree.data.ComparableObjectSeries.add : if $z2 == 0 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $r11 = new org.jfree.data.general.SeriesException
org.jfree.data.ComparableObjectSeries.add : $r11 = new org.jfree.data.general.SeriesException >>>>>>>> org.jfree.data.ComparableObjectSeries.add : specialinvoke $r11.<org.jfree.data.general.SeriesException: void <init>(java.lang.String)>("X-value already exists.")
org.jfree.data.ComparableObjectSeries.add : specialinvoke $r11.<org.jfree.data.general.SeriesException: void <init>(java.lang.String)>("X-value already exists.") >>>>>>>> org.jfree.data.ComparableObjectSeries.add : throw $r11
org.jfree.data.ComparableObjectSeries.add : $r5 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data> >>>>>>>> org.jfree.data.ComparableObjectSeries.add : i1 = interfaceinvoke $r5.<java.util.List: int size()>()
org.jfree.data.ComparableObjectSeries.add : i1 = interfaceinvoke $r5.<java.util.List: int size()>() >>>>>>>> org.jfree.data.ComparableObjectSeries.add : if i0 >= i1
org.jfree.data.ComparableObjectSeries.add : if i0 >= i1 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $r6 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data>
org.jfree.data.ComparableObjectSeries.add : if i0 >= i1 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $r8 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data>
org.jfree.data.ComparableObjectSeries.add : $r8 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data> >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $i5 = interfaceinvoke $r8.<java.util.List: int size()>()
org.jfree.data.ComparableObjectSeries.add : $i5 = interfaceinvoke $r8.<java.util.List: int size()>() >>>>>>>> org.jfree.data.ComparableObjectSeries.add : if i0 >= $i5
org.jfree.data.ComparableObjectSeries.add : if i0 >= $i5 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $r9 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data>
org.jfree.data.ComparableObjectSeries.add : if i0 >= $i5 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $r10 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data>
org.jfree.data.ComparableObjectSeries.add : $r10 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data> >>>>>>>> org.jfree.data.ComparableObjectSeries.add : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.data.ComparableObjectSeries.add : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.ComparableObjectSeries.add : goto [?= (branch)]
org.jfree.data.ComparableObjectSeries.add : goto [?= (branch)] >>>>>>>> org.jfree.data.ComparableObjectSeries.add : goto [?= $i7 = virtualinvoke r0.<org.jfree.data.ComparableObjectSeries: int getItemCount()>()]
org.jfree.data.ComparableObjectSeries.add : goto [?= $i7 = virtualinvoke r0.<org.jfree.data.ComparableObjectSeries: int getItemCount()>()] >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $i7 = virtualinvoke r0.<org.jfree.data.ComparableObjectSeries: int getItemCount()>()
org.jfree.data.ComparableObjectSeries.add : $r9 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data> >>>>>>>> org.jfree.data.ComparableObjectSeries.add : interfaceinvoke $r9.<java.util.List: void add(int,java.lang.Object)>(i0, r1)
org.jfree.data.ComparableObjectSeries.add : interfaceinvoke $r9.<java.util.List: void add(int,java.lang.Object)>(i0, r1) >>>>>>>> org.jfree.data.ComparableObjectSeries.add : goto [?= (branch)]
org.jfree.data.ComparableObjectSeries.add : goto [?= (branch)] >>>>>>>> org.jfree.data.ComparableObjectSeries.add : goto [?= (branch)]
org.jfree.data.ComparableObjectSeries.add : $r6 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data> >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.ComparableObjectSeries.add : $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $i4 = virtualinvoke r1.<org.jfree.data.ComparableObjectItem: int compareTo(java.lang.Object)>($r7)
org.jfree.data.ComparableObjectSeries.add : $i4 = virtualinvoke r1.<org.jfree.data.ComparableObjectItem: int compareTo(java.lang.Object)>($r7) >>>>>>>> org.jfree.data.ComparableObjectSeries.add : if $i4 != 0
org.jfree.data.ComparableObjectSeries.add : if $i4 != 0 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : i0 = i0 + 1
org.jfree.data.ComparableObjectSeries.add : if $i4 != 0 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $r8 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data>
org.jfree.data.ComparableObjectSeries.add : i0 = i0 + 1 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : goto [?= (branch)]
org.jfree.data.ComparableObjectSeries.add : goto [?= (branch)] >>>>>>>> org.jfree.data.ComparableObjectSeries.add : if i0 >= i1
org.jfree.data.ComparableObjectSeries.add : $r4 = r0.<org.jfree.data.ComparableObjectSeries: java.util.List data> >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $i2 = neg i0
org.jfree.data.ComparableObjectSeries.add : $i2 = neg i0 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : $i3 = $i2 - 1
org.jfree.data.ComparableObjectSeries.add : $i3 = $i2 - 1 >>>>>>>> org.jfree.data.ComparableObjectSeries.add : interfaceinvoke $r4.<java.util.List: void add(int,java.lang.Object)>($i3, r1)
org.jfree.data.ComparableObjectSeries.add : interfaceinvoke $r4.<java.util.List: void add(int,java.lang.Object)>($i3, r1) >>>>>>>> org.jfree.data.ComparableObjectSeries.add : goto [?= (branch)]
org.jfree.data.ComparableObjectSeries.add : goto [?= (branch)] >>>>>>>> org.jfree.data.ComparableObjectSeries.add : goto [?= $i7 = virtualinvoke r0.<org.jfree.data.ComparableObjectSeries: int getItemCount()>()]
org.jfree.data.ComparableObjectSeries.add : $r2 = new java.lang.IllegalArgumentException >>>>>>>> org.jfree.data.ComparableObjectSeries.add : specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null \'item\' argument.")
org.jfree.data.ComparableObjectSeries.add : specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null \'item\' argument.") >>>>>>>> org.jfree.data.ComparableObjectSeries.add : throw $r2
