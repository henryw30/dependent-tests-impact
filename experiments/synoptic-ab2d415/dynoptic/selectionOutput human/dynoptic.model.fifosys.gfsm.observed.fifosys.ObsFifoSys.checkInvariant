dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $z0 = virtualinvoke r2.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: boolean isAccept()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $z0 == 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $z1 = virtualinvoke r1.<dynoptic.invariants.checkers.BinChecker: boolean isFail()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : r3 = virtualinvoke r2.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: java.util.Set getTransitioningEvents()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : r3 = virtualinvoke r2.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: java.util.Set getTransitioningEvents()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : r4 = null
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : r4 = null >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $i0 = interfaceinvoke r3.<java.util.Set: int size()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $i0 = interfaceinvoke r3.<java.util.Set: int size()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $i0 <= 1
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $i0 <= 1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : r4 = virtualinvoke r1.<dynoptic.invariants.checkers.BinChecker: dynoptic.invariants.checkers.BinChecker getClone()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $i0 <= 1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : r5 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : r5 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $z3 == 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $z3 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $z3 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : return 1
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : r6 = (dynoptic.model.fifosys.gfsm.observed.ObsDistEventType) $r8
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : r6 = (dynoptic.model.fifosys.gfsm.observed.ObsDistEventType) $r8 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $r9 = virtualinvoke r6.<dynoptic.model.fifosys.gfsm.observed.ObsDistEventType: synoptic.model.event.DistEventType getDistEType()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $r9 = virtualinvoke r6.<dynoptic.model.fifosys.gfsm.observed.ObsDistEventType: synoptic.model.event.DistEventType getDistEType()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : r7 = virtualinvoke r1.<dynoptic.invariants.checkers.BinChecker: dynoptic.invariants.checkers.BinChecker$Validity transition(synoptic.model.event.DistEventType)>($r9)
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : r7 = virtualinvoke r1.<dynoptic.invariants.checkers.BinChecker: dynoptic.invariants.checkers.BinChecker$Validity transition(synoptic.model.event.DistEventType)>($r9) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $r10 = <dynoptic.invariants.checkers.BinChecker$Validity: dynoptic.invariants.checkers.BinChecker$Validity PERM_FAIL>
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $r10 = <dynoptic.invariants.checkers.BinChecker$Validity: dynoptic.invariants.checkers.BinChecker$Validity PERM_FAIL> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if r7 != $r10
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if r7 != $r10 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : return 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if r7 != $r10 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $r11 = <dynoptic.invariants.checkers.BinChecker$Validity: dynoptic.invariants.checkers.BinChecker$Validity PERM_SUCCESS>
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $r11 = <dynoptic.invariants.checkers.BinChecker$Validity: dynoptic.invariants.checkers.BinChecker$Validity PERM_SUCCESS> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if r7 != $r11
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if r7 != $r11 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : goto [?= $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if r7 != $r11 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $r12 = virtualinvoke r2.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState getNextState(dynoptic.model.fifosys.gfsm.observed.ObsDistEventType)>(r6)
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $r12 = virtualinvoke r2.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState getNextState(dynoptic.model.fifosys.gfsm.observed.ObsDistEventType)>(r6) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $z4 = specialinvoke r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys: boolean checkInvariant(dynoptic.invariants.checkers.BinChecker,dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState)>(r1, $r12)
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $z4 = specialinvoke r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys: boolean checkInvariant(dynoptic.invariants.checkers.BinChecker,dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState)>(r1, $r12) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $z4 != 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $z4 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : return 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $z4 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if r4 == null
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if r4 == null >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : virtualinvoke r1.<dynoptic.invariants.checkers.BinChecker: void inheritState(dynoptic.invariants.checkers.BinChecker)>(r4)
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if r4 == null >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : goto [?= $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : goto [?= $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : virtualinvoke r1.<dynoptic.invariants.checkers.BinChecker: void inheritState(dynoptic.invariants.checkers.BinChecker)>(r4) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : goto [?= $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : goto [?= $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : r4 = virtualinvoke r1.<dynoptic.invariants.checkers.BinChecker: dynoptic.invariants.checkers.BinChecker getClone()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : r5 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $z1 = virtualinvoke r1.<dynoptic.invariants.checkers.BinChecker: boolean isFail()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $z1 != 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $z2 = 1
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $z2 = 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $z2 = 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : return $z2
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : $z2 = 1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : goto [?= return $z2]
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : goto [?= return $z2] >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.checkInvariant : return $z2
