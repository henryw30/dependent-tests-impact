dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : if r0 == null >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : if r1 != null
dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : if r0 == null >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : return 0
dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : if r1 != null >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : return 0
dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : if r1 != null >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $r2 = r0.<dynoptic.model.fifosys.channel.channelstate.ChState: synoptic.model.channelid.ChannelId chId>
dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $r2 = r0.<dynoptic.model.fifosys.channel.channelstate.ChState: synoptic.model.channelid.ChannelId chId> >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $r3 = r1.<dynoptic.model.fifosys.channel.channelstate.ChState: synoptic.model.channelid.ChannelId chId>
dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $r3 = r1.<dynoptic.model.fifosys.channel.channelstate.ChState: synoptic.model.channelid.ChannelId chId> >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $z0 = virtualinvoke $r2.<synoptic.model.channelid.ChannelId: boolean equals(java.lang.Object)>($r3)
dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $z0 = virtualinvoke $r2.<synoptic.model.channelid.ChannelId: boolean equals(java.lang.Object)>($r3) >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : if $z0 != 0
dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : return 0
dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $r4 = r0.<dynoptic.model.fifosys.channel.channelstate.ChState: java.util.List queue>
dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $r4 = r0.<dynoptic.model.fifosys.channel.channelstate.ChState: java.util.List queue> >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $i1 = interfaceinvoke $r4.<java.util.List: int size()>()
dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $i1 = interfaceinvoke $r4.<java.util.List: int size()>() >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $r5 = r1.<dynoptic.model.fifosys.channel.channelstate.ChState: java.util.List queue>
dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $r5 = r1.<dynoptic.model.fifosys.channel.channelstate.ChState: java.util.List queue> >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $i2 = interfaceinvoke $r5.<java.util.List: int size()>()
dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $i2 = interfaceinvoke $r5.<java.util.List: int size()>() >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : if $i1 == $i2
dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : if $i1 == $i2 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : return 0
dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : if $i1 == $i2 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : i0 = 0
dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : i0 = 0 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $r6 = r0.<dynoptic.model.fifosys.channel.channelstate.ChState: java.util.List queue>
dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $r6 = r0.<dynoptic.model.fifosys.channel.channelstate.ChState: java.util.List queue> >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $i3 = interfaceinvoke $r6.<java.util.List: int size()>()
dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $i3 = interfaceinvoke $r6.<java.util.List: int size()>() >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : if i0 >= $i3
dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : if i0 >= $i3 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $r7 = r0.<dynoptic.model.fifosys.channel.channelstate.ChState: java.util.List queue>
dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : if i0 >= $i3 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : return 1
dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $r7 = r0.<dynoptic.model.fifosys.channel.channelstate.ChState: java.util.List queue> >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i0)
dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $r9 = (dynoptic.model.fifosys.gfsm.observed.ObsDistEventType) $r8
dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $r9 = (dynoptic.model.fifosys.gfsm.observed.ObsDistEventType) $r8 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $r10 = r1.<dynoptic.model.fifosys.channel.channelstate.ChState: java.util.List queue>
dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $r10 = r1.<dynoptic.model.fifosys.channel.channelstate.ChState: java.util.List queue> >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i0)
dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $z1 = virtualinvoke $r9.<dynoptic.model.fifosys.gfsm.observed.ObsDistEventType: boolean equalsIgnoringTraceIds(java.lang.Object)>($r11)
dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $z1 = virtualinvoke $r9.<dynoptic.model.fifosys.gfsm.observed.ObsDistEventType: boolean equalsIgnoringTraceIds(java.lang.Object)>($r11) >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : if $z1 == 0
dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : if $z1 == 0 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : return 0
dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : if $z1 == 0 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : i0 = i0 + 1
dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : i0 = i0 + 1 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : goto [?= $r6 = r0.<dynoptic.model.fifosys.channel.channelstate.ChState: java.util.List queue>]
dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : goto [?= $r6 = r0.<dynoptic.model.fifosys.channel.channelstate.ChState: java.util.List queue>] >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ChState.equalsObsDistETypeIgnoringTraceIds : $r6 = r0.<dynoptic.model.fifosys.channel.channelstate.ChState: java.util.List queue>
