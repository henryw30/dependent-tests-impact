dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : r2 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : r3 = virtualinvoke r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys: dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState getInitState()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : r3 = virtualinvoke r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys: dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState getInitState()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : if $z0 == 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : return r2
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : r5 = (dynoptic.invariants.BinaryInvariant) $r7
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : r5 = (dynoptic.invariants.BinaryInvariant) $r7 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : r6 = virtualinvoke r5.<dynoptic.invariants.BinaryInvariant: dynoptic.invariants.checkers.BinChecker newChecker()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : r6 = virtualinvoke r5.<dynoptic.invariants.BinaryInvariant: dynoptic.invariants.checkers.BinChecker newChecker()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : $z1 = specialinvoke r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys: boolean checkInvariant(dynoptic.invariants.checkers.BinChecker,dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState)>(r6, r3)
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : $z1 = specialinvoke r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys: boolean checkInvariant(dynoptic.invariants.checkers.BinChecker,dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState)>(r6, r3) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : if $z1 != 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r5)
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r5) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.findInvalidatedInvariants : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
