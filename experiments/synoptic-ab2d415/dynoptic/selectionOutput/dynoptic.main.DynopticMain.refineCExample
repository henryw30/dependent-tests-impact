dynoptic.main.DynopticMain.refineCExample : i0 = 0 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $i1 = virtualinvoke r0.<dynoptic.main.DynopticMain: int getNumProcesses()>()
dynoptic.main.DynopticMain.refineCExample : $i1 = virtualinvoke r0.<dynoptic.main.DynopticMain: int getNumProcesses()>() >>>>>>>> dynoptic.main.DynopticMain.refineCExample : if i0 >= $i1
dynoptic.main.DynopticMain.refineCExample : if i0 >= $i1 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : r3 = virtualinvoke r1.<dynoptic.model.fifosys.gfsm.GFSM: java.util.Set getCExamplePaths(mcscm.McScMCExample,int)>(r2, i0)
dynoptic.main.DynopticMain.refineCExample : if i0 >= $i1 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r23 = new java.lang.Exception
dynoptic.main.DynopticMain.refineCExample : $r23 = new java.lang.Exception >>>>>>>> dynoptic.main.DynopticMain.refineCExample : specialinvoke $r23.<java.lang.Exception: void <init>(java.lang.String)>("Unable to eliminate CFSM counter-example from GFSM.")
dynoptic.main.DynopticMain.refineCExample : specialinvoke $r23.<java.lang.Exception: void <init>(java.lang.String)>("Unable to eliminate CFSM counter-example from GFSM.") >>>>>>>> dynoptic.main.DynopticMain.refineCExample : throw $r23
dynoptic.main.DynopticMain.refineCExample : r3 = virtualinvoke r1.<dynoptic.model.fifosys.gfsm.GFSM: java.util.Set getCExamplePaths(mcscm.McScMCExample,int)>(r2, i0) >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r6 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.refineCExample : $r6 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r7 = new java.lang.StringBuilder
dynoptic.main.DynopticMain.refineCExample : $r7 = new java.lang.StringBuilder >>>>>>>> dynoptic.main.DynopticMain.refineCExample : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
dynoptic.main.DynopticMain.refineCExample : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process ")
dynoptic.main.DynopticMain.refineCExample : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process ") >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
dynoptic.main.DynopticMain.refineCExample : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" paths: ")
dynoptic.main.DynopticMain.refineCExample : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" paths: ") >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r11 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>()
dynoptic.main.DynopticMain.refineCExample : $r11 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)
dynoptic.main.DynopticMain.refineCExample : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11) >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.main.DynopticMain.refineCExample : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.refineCExample : virtualinvoke $r6.<java.util.logging.Logger: void info(java.lang.String)>($r13)
dynoptic.main.DynopticMain.refineCExample : virtualinvoke $r6.<java.util.logging.Logger: void info(java.lang.String)>($r13) >>>>>>>> dynoptic.main.DynopticMain.refineCExample : z0 = 1
dynoptic.main.DynopticMain.refineCExample : z0 = 1 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.main.DynopticMain.refineCExample : r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
dynoptic.main.DynopticMain.refineCExample : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.main.DynopticMain.refineCExample : if $z1 == 0
dynoptic.main.DynopticMain.refineCExample : if $z1 == 0 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
dynoptic.main.DynopticMain.refineCExample : if $z1 == 0 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : if z0 == 0
dynoptic.main.DynopticMain.refineCExample : if z0 == 0 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : return
dynoptic.main.DynopticMain.refineCExample : if z0 == 0 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : i0 = i0 + 1
dynoptic.main.DynopticMain.refineCExample : i0 = i0 + 1 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : goto [?= $i1 = virtualinvoke r0.<dynoptic.main.DynopticMain: int getNumProcesses()>()]
dynoptic.main.DynopticMain.refineCExample : goto [?= $i1 = virtualinvoke r0.<dynoptic.main.DynopticMain: int getNumProcesses()>()] >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $i1 = virtualinvoke r0.<dynoptic.main.DynopticMain: int getNumProcesses()>()
dynoptic.main.DynopticMain.refineCExample : $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> dynoptic.main.DynopticMain.refineCExample : r5 = (dynoptic.model.fifosys.gfsm.GFSMPath) $r14
dynoptic.main.DynopticMain.refineCExample : r5 = (dynoptic.model.fifosys.gfsm.GFSMPath) $r14 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r15 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.refineCExample : $r15 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r16 = new java.lang.StringBuilder
dynoptic.main.DynopticMain.refineCExample : $r16 = new java.lang.StringBuilder >>>>>>>> dynoptic.main.DynopticMain.refineCExample : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
dynoptic.main.DynopticMain.refineCExample : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to resolve process ")
dynoptic.main.DynopticMain.refineCExample : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to resolve process ") >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
dynoptic.main.DynopticMain.refineCExample : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" path: ")
dynoptic.main.DynopticMain.refineCExample : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" path: ") >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r20 = virtualinvoke r5.<dynoptic.model.fifosys.gfsm.GFSMPath: java.lang.String toString()>()
dynoptic.main.DynopticMain.refineCExample : $r20 = virtualinvoke r5.<dynoptic.model.fifosys.gfsm.GFSMPath: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)
dynoptic.main.DynopticMain.refineCExample : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20) >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.main.DynopticMain.refineCExample : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.refineCExample : virtualinvoke $r15.<java.util.logging.Logger: void info(java.lang.String)>($r22)
dynoptic.main.DynopticMain.refineCExample : virtualinvoke $r15.<java.util.logging.Logger: void info(java.lang.String)>($r22) >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $z2 = virtualinvoke r5.<dynoptic.model.fifosys.gfsm.GFSMPath: boolean refine(dynoptic.model.fifosys.gfsm.GFSM)>(r1)
dynoptic.main.DynopticMain.refineCExample : $z2 = virtualinvoke r5.<dynoptic.model.fifosys.gfsm.GFSMPath: boolean refine(dynoptic.model.fifosys.gfsm.GFSM)>(r1) >>>>>>>> dynoptic.main.DynopticMain.refineCExample : if $z2 == 0
dynoptic.main.DynopticMain.refineCExample : if $z2 == 0 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : goto [?= (branch)]
dynoptic.main.DynopticMain.refineCExample : if $z2 == 0 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : z0 = 0
dynoptic.main.DynopticMain.refineCExample : z0 = 0 >>>>>>>> dynoptic.main.DynopticMain.refineCExample : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
dynoptic.main.DynopticMain.refineCExample : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> dynoptic.main.DynopticMain.refineCExample : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
dynoptic.main.DynopticMain.refineCExample : goto [?= (branch)] >>>>>>>> dynoptic.main.DynopticMain.refineCExample : if z0 == 0
