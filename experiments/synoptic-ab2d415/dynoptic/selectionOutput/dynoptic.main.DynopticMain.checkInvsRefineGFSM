dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z0 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z0 != 0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z0 != 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if r2 != null
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z0 != 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z1 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z1 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z1 != 0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z1 != 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if r1 != null
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z1 != 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z2 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z2 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z2 != 0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z2 != 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $i7 = interfaceinvoke r1.<java.util.List: int size()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z2 != 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : r3 = staticinvoke <dynoptic.util.Util: java.util.List newList(java.util.Collection)>(r1)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : r3 = staticinvoke <dynoptic.util.Util: java.util.List newList(java.util.Collection)>(r1) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : r4 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : r4 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : r5 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : r5 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r15 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r15 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : r6 = (dynoptic.invariants.BinaryInvariant) $r15
dynoptic.main.DynopticMain.checkInvsRefineGFSM : r6 = (dynoptic.invariants.BinaryInvariant) $r15 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : i0 = interfaceinvoke r3.<java.util.List: int size()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : i0 = interfaceinvoke r3.<java.util.List: int size()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : i1 = 1
dynoptic.main.DynopticMain.checkInvsRefineGFSM : i1 = 1 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : b2 = 30
dynoptic.main.DynopticMain.checkInvsRefineGFSM : b2 = 30 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : i3 = b2
dynoptic.main.DynopticMain.checkInvsRefineGFSM : i3 = b2 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : b4 = 30
dynoptic.main.DynopticMain.checkInvsRefineGFSM : b4 = 30 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : s5 = 300
dynoptic.main.DynopticMain.checkInvsRefineGFSM : s5 = 300 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r16 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r16 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r17 = new java.lang.StringBuilder
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r17 = new java.lang.StringBuilder >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Model checking ")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Model checking ") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r19 = virtualinvoke r6.<dynoptic.invariants.BinaryInvariant: java.lang.String toString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r19 = virtualinvoke r6.<dynoptic.invariants.BinaryInvariant: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r16.<java.util.logging.Logger: void info(java.lang.String)>($r25)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r16.<java.util.logging.Logger: void info(java.lang.String)>($r25) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : i6 = 0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : i6 = 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r26 = r0.<dynoptic.main.DynopticMain: dynoptic.main.DynopticOptions opts>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r26 = r0.<dynoptic.main.DynopticMain: dynoptic.main.DynopticOptions opts> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : r7 = $r26.<dynoptic.main.DynopticOptions: java.lang.String outputPathPrefix>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : r7 = $r26.<dynoptic.main.DynopticOptions: java.lang.String outputPathPrefix> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke r0.<dynoptic.main.DynopticMain: void exportIntermediateModels(dynoptic.model.fifosys.gfsm.GFSM,dynoptic.invariants.BinaryInvariant,int,java.lang.String)>(r2, r6, i6, r7)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke r0.<dynoptic.main.DynopticMain: void exportIntermediateModels(dynoptic.model.fifosys.gfsm.GFSM,dynoptic.invariants.BinaryInvariant,int,java.lang.String)>(r2, r6, i6, r7) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z3 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z3 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z3 != 0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z3 != 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if i1 <= i0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z3 != 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z4 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z4 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z4 != 0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z4 != 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r28 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z4 != 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z5 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z5 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z5 != 0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z5 != 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $i8 = interfaceinvoke r4.<java.util.Set: int size()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z5 != 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r31 = r0.<dynoptic.main.DynopticMain: dynoptic.main.DynopticOptions opts>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r31 = r0.<dynoptic.main.DynopticMain: dynoptic.main.DynopticOptions opts> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z6 = $r31.<dynoptic.main.DynopticOptions: boolean minimize>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z6 = $r31.<dynoptic.main.DynopticOptions: boolean minimize> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : r8 = virtualinvoke r2.<dynoptic.model.fifosys.gfsm.GFSM: dynoptic.model.fifosys.cfsm.CFSM getCFSM(boolean)>($z6)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : r8 = virtualinvoke r2.<dynoptic.model.fifosys.gfsm.GFSM: dynoptic.model.fifosys.cfsm.CFSM getCFSM(boolean)>($z6) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke r8.<dynoptic.model.fifosys.cfsm.CFSM: void augmentWithInvTracing(dynoptic.invariants.BinaryInvariant)>(r6)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke r8.<dynoptic.model.fifosys.cfsm.CFSM: void augmentWithInvTracing(dynoptic.invariants.BinaryInvariant)>(r6) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r32 = new java.lang.StringBuilder
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r32 = new java.lang.StringBuilder >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r32.<java.lang.StringBuilder: void <init>()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r32.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("checking_")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("checking_") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r34 = virtualinvoke r6.<dynoptic.invariants.BinaryInvariant: java.lang.String getConnectorString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r34 = virtualinvoke r6.<dynoptic.invariants.BinaryInvariant: java.lang.String getConnectorString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : r9 = virtualinvoke r8.<dynoptic.model.fifosys.cfsm.CFSM: java.lang.String toScmString(java.lang.String)>($r36)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : r9 = virtualinvoke r8.<dynoptic.model.fifosys.cfsm.CFSM: java.lang.String toScmString(java.lang.String)>($r36) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r37 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r37 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r37.<java.util.logging.Logger: void info(java.lang.String)>("*******************************************************")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r37.<java.util.logging.Logger: void info(java.lang.String)>("*******************************************************") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r38 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r38 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r39 = new java.lang.StringBuilder
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r39 = new java.lang.StringBuilder >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r39.<java.lang.StringBuilder: void <init>()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r39.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking ... ")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking ... ") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r41 = virtualinvoke r6.<dynoptic.invariants.BinaryInvariant: java.lang.String toString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r41 = virtualinvoke r6.<dynoptic.invariants.BinaryInvariant: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Inv ")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Inv ") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", refinements so far: ")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", refinements so far: ") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r38.<java.util.logging.Logger: void info(java.lang.String)>($r49)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r38.<java.util.logging.Logger: void info(java.lang.String)>($r49) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r50 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r50 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r50.<java.util.logging.Logger: void info(java.lang.String)>("*******************************************************")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r50.<java.util.logging.Logger: void info(java.lang.String)>("*******************************************************") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r51 = r0.<dynoptic.main.DynopticMain: mcscm.McScM mcscm>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r50.<java.util.logging.Logger: void info(java.lang.String)>("*******************************************************") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r52 := @caughtexception
dynoptic.main.DynopticMain.checkInvsRefineGFSM : r10 = $r52 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : interfaceinvoke r3.<java.util.List: java.lang.Object remove(int)>(0)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : interfaceinvoke r3.<java.util.List: java.lang.Object remove(int)>(0) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r6)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r6) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r54 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r54 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r55 = new java.lang.StringBuilder
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r55 = new java.lang.StringBuilder >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r55.<java.lang.StringBuilder: void <init>()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r55.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timed out in checking invariant: ")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timed out in checking invariant: ") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r57 = virtualinvoke r6.<dynoptic.invariants.BinaryInvariant: java.lang.String toString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r57 = virtualinvoke r6.<dynoptic.invariants.BinaryInvariant: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r54.<java.util.logging.Logger: void info(java.lang.String)>($r59)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r54.<java.util.logging.Logger: void info(java.lang.String)>($r59) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z8 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z8 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z8 == 0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z8 == 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r60 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z8 == 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r69 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r69 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : r6 = (dynoptic.invariants.BinaryInvariant) $r69
dynoptic.main.DynopticMain.checkInvsRefineGFSM : r6 = (dynoptic.invariants.BinaryInvariant) $r69 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : goto [?= $z3 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>]
dynoptic.main.DynopticMain.checkInvsRefineGFSM : goto [?= $z3 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>] >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z3 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r60 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r61 = new java.lang.StringBuilder
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r61 = new java.lang.StringBuilder >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r61.<java.lang.StringBuilder: void <init>()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r61.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timed out in checking these invariants with timeout value ")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timed out in checking these invariants with timeout value ") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r65 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r65 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r60.<java.util.logging.Logger: void info(java.lang.String)>($r67)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r60.<java.util.logging.Logger: void info(java.lang.String)>($r67) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : i3 = i3 + b4
dynoptic.main.DynopticMain.checkInvsRefineGFSM : i3 = i3 + b4 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if i3 <= s5
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if i3 <= s5 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r68 = new java.lang.Exception
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if i3 <= s5 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>(r4)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>(r4) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : interfaceinvoke r4.<java.util.Set: void clear()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : interfaceinvoke r4.<java.util.Set: void clear()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r69 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r68 = new java.lang.Exception >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r68.<java.lang.Exception: void <init>(java.lang.String)>("McScM timed-out on all invariants. Cannot continue.")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r68.<java.lang.Exception: void <init>(java.lang.String)>("McScM timed-out on all invariants. Cannot continue.") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : throw $r68
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r51 = r0.<dynoptic.main.DynopticMain: mcscm.McScM mcscm> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r51.<mcscm.McScM: void verify(java.lang.String,int)>(r9, i3)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r51 = r0.<dynoptic.main.DynopticMain: mcscm.McScM mcscm> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r52 := @caughtexception
dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r51.<mcscm.McScM: void verify(java.lang.String,int)>(r9, i3) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : goto [?= i3 = b2]
dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r51.<mcscm.McScM: void verify(java.lang.String,int)>(r9, i3) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r52 := @caughtexception
dynoptic.main.DynopticMain.checkInvsRefineGFSM : goto [?= i3 = b2] >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : i3 = b2
dynoptic.main.DynopticMain.checkInvsRefineGFSM : i3 = b2 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r70 = r0.<dynoptic.main.DynopticMain: mcscm.McScM mcscm>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r70 = r0.<dynoptic.main.DynopticMain: mcscm.McScM mcscm> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r71 = virtualinvoke r8.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List getChannelIds()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r71 = virtualinvoke r8.<dynoptic.model.fifosys.cfsm.CFSM: java.util.List getChannelIds()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : r72 = virtualinvoke $r70.<mcscm.McScM: mcscm.VerifyResult getVerifyResult(java.util.List)>($r71)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : r72 = virtualinvoke $r70.<mcscm.McScM: mcscm.VerifyResult getVerifyResult(java.util.List)>($r71) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r73 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r73 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r74 = virtualinvoke r72.<mcscm.VerifyResult: java.lang.String toRawString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r74 = virtualinvoke r72.<mcscm.VerifyResult: java.lang.String toRawString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r73.<java.util.logging.Logger: void info(java.lang.String)>($r74)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r73.<java.util.logging.Logger: void info(java.lang.String)>($r74) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r75 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r75 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r76 = virtualinvoke r72.<mcscm.VerifyResult: java.lang.String toString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r76 = virtualinvoke r72.<mcscm.VerifyResult: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r75.<java.util.logging.Logger: void info(java.lang.String)>($r76)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r75.<java.util.logging.Logger: void info(java.lang.String)>($r76) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z10 = virtualinvoke r72.<mcscm.VerifyResult: boolean modelIsSafe()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z10 = virtualinvoke r72.<mcscm.VerifyResult: boolean modelIsSafe()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z10 == 0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z10 == 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r77 = interfaceinvoke r3.<java.util.List: java.lang.Object remove(int)>(0)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z10 == 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r98 = virtualinvoke r72.<mcscm.VerifyResult: mcscm.McScMCExample getCExample()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r98 = virtualinvoke r72.<mcscm.VerifyResult: mcscm.McScMCExample getCExample()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke r0.<dynoptic.main.DynopticMain: void refineCExample(dynoptic.model.fifosys.gfsm.GFSM,mcscm.McScMCExample)>(r2, $r98)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke r0.<dynoptic.main.DynopticMain: void refineCExample(dynoptic.model.fifosys.gfsm.GFSM,mcscm.McScMCExample)>(r2, $r98) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : i6 = i6 + 1
dynoptic.main.DynopticMain.checkInvsRefineGFSM : i6 = i6 + 1 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke r0.<dynoptic.main.DynopticMain: void exportIntermediateModels(dynoptic.model.fifosys.gfsm.GFSM,dynoptic.invariants.BinaryInvariant,int,java.lang.String)>(r2, r6, i6, r7)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke r0.<dynoptic.main.DynopticMain: void exportIntermediateModels(dynoptic.model.fifosys.gfsm.GFSM,dynoptic.invariants.BinaryInvariant,int,java.lang.String)>(r2, r6, i6, r7) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $i13 = interfaceinvoke r4.<java.util.Set: int size()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $i13 = interfaceinvoke r4.<java.util.Set: int size()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $i13 <= 0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $i13 <= 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>(r4)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $i13 <= 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : goto [?= $z3 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>]
dynoptic.main.DynopticMain.checkInvsRefineGFSM : goto [?= $z3 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>] >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z3 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>(r4) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : interfaceinvoke r4.<java.util.Set: void clear()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : interfaceinvoke r4.<java.util.Set: void clear()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : goto [?= $z3 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>]
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r77 = interfaceinvoke r3.<java.util.List: java.lang.Object remove(int)>(0) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : r11 = (dynoptic.invariants.BinaryInvariant) $r77
dynoptic.main.DynopticMain.checkInvsRefineGFSM : r11 = (dynoptic.invariants.BinaryInvariant) $r77 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z11 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z11 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z11 != 0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z11 != 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if r11 == r6
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z11 != 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>(r6)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>(r6) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z13 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z13 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z13 == 0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z13 == 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r79 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $z13 == 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r87 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r87 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : r6 = (dynoptic.invariants.BinaryInvariant) $r87
dynoptic.main.DynopticMain.checkInvsRefineGFSM : r6 = (dynoptic.invariants.BinaryInvariant) $r87 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : i1 = i1 + 1
dynoptic.main.DynopticMain.checkInvsRefineGFSM : i1 = i1 + 1 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r88 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r88 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r89 = new java.lang.StringBuilder
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r89 = new java.lang.StringBuilder >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r89.<java.lang.StringBuilder: void <init>()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r89.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Model checking ")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Model checking ") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r91 = virtualinvoke r6.<dynoptic.invariants.BinaryInvariant: java.lang.String toString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r91 = virtualinvoke r6.<dynoptic.invariants.BinaryInvariant: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r92 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r91)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r92 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r91) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r88.<java.util.logging.Logger: void info(java.lang.String)>($r97)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r88.<java.util.logging.Logger: void info(java.lang.String)>($r97) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : goto [?= (branch)]
dynoptic.main.DynopticMain.checkInvsRefineGFSM : goto [?= (branch)] >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : goto [?= $z3 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>]
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r79 = <dynoptic.main.DynopticMain: java.util.logging.Logger logger> >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r80 = new java.lang.StringBuilder
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r80 = new java.lang.StringBuilder >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r80.<java.lang.StringBuilder: void <init>()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r80.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Finished checking ")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Finished checking ") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" invariants.")
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" invariants.") >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r79.<java.util.logging.Logger: void info(java.lang.String)>($r86)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : virtualinvoke $r79.<java.util.logging.Logger: void info(java.lang.String)>($r86) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : return
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if r11 == r6 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r78 = new java.lang.AssertionError
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if r11 == r6 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>(r6)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r78 = new java.lang.AssertionError >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r78.<java.lang.AssertionError: void <init>()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r78.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : throw $r78
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $i8 = interfaceinvoke r4.<java.util.Set: int size()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $i9 = interfaceinvoke r5.<java.util.Set: int size()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $i9 = interfaceinvoke r5.<java.util.Set: int size()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $i10 = $i8 + $i9
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $i10 = $i8 + $i9 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $i11 = interfaceinvoke r3.<java.util.List: int size()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $i11 = interfaceinvoke r3.<java.util.List: int size()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $i12 = $i10 + $i11
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $i12 = $i10 + $i11 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $i12 == i0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $i12 == i0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r30 = new java.lang.AssertionError
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $i12 == i0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r31 = r0.<dynoptic.main.DynopticMain: dynoptic.main.DynopticOptions opts>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r30 = new java.lang.AssertionError >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r30.<java.lang.AssertionError: void <init>()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r30.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : throw $r30
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r28 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if r6 == $r28
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if r6 == $r28 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r29 = new java.lang.AssertionError
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if r6 == $r28 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z5 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r29 = new java.lang.AssertionError >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r29.<java.lang.AssertionError: void <init>()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r29.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : throw $r29
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if i1 <= i0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r27 = new java.lang.AssertionError
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if i1 <= i0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z4 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r27 = new java.lang.AssertionError >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r27.<java.lang.AssertionError: void <init>()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r27.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : throw $r27
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $i7 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $i7 > 0
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $i7 > 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r14 = new java.lang.AssertionError
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if $i7 > 0 >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : r3 = staticinvoke <dynoptic.util.Util: java.util.List newList(java.util.Collection)>(r1)
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r14 = new java.lang.AssertionError >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r14.<java.lang.AssertionError: void <init>()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r14.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : throw $r14
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if r1 != null >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r13 = new java.lang.AssertionError
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if r1 != null >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z2 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r13 = new java.lang.AssertionError >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r13.<java.lang.AssertionError: void <init>()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r13.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : throw $r13
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if r2 != null >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r12 = new java.lang.AssertionError
dynoptic.main.DynopticMain.checkInvsRefineGFSM : if r2 != null >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : $z1 = <dynoptic.main.DynopticMain: boolean $assertionsDisabled>
dynoptic.main.DynopticMain.checkInvsRefineGFSM : $r12 = new java.lang.AssertionError >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r12.<java.lang.AssertionError: void <init>()>()
dynoptic.main.DynopticMain.checkInvsRefineGFSM : specialinvoke $r12.<java.lang.AssertionError: void <init>()>() >>>>>>>> dynoptic.main.DynopticMain.checkInvsRefineGFSM : throw $r12
