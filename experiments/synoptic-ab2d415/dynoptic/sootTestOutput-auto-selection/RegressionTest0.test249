dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : r1 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet
dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet >>>>>>>> dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>()
dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> dynoptic.util.Util.newSet : return $r0
dynoptic.util.Util.newSet : return $r0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : $r4 = r0.<dynoptic.model.fifosys.cfsm.CFSMState: java.util.List fsmStates>
dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : $r4 = r0.<dynoptic.model.fifosys.cfsm.CFSMState: java.util.List fsmStates> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>()
dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : if $z0 == 0
dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : return r1
dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : return r1 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.isInitial : $r2 = r0.<dynoptic.model.fifosys.cfsm.CFSMState: java.util.List fsmStates>
dynoptic.model.fifosys.cfsm.CFSMState.isInitial : $r2 = r0.<dynoptic.model.fifosys.cfsm.CFSMState: java.util.List fsmStates> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.isInitial : $r1 = <dynoptic.model.fifosys.cfsm.CFSMState: dynoptic.model.AbsFSMState$IStateToBooleanFn fnIsInitialState>
dynoptic.model.fifosys.cfsm.CFSMState.isInitial : $r1 = <dynoptic.model.fifosys.cfsm.CFSMState: dynoptic.model.AbsFSMState$IStateToBooleanFn fnIsInitialState> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.isInitial : $z0 = staticinvoke <dynoptic.model.fifosys.cfsm.CFSMState: boolean statesEvalToTrue(java.util.Collection,dynoptic.model.AbsFSMState$IStateToBooleanFn)>($r2, $r1)
dynoptic.model.fifosys.cfsm.CFSMState.isInitial : $z0 = staticinvoke <dynoptic.model.fifosys.cfsm.CFSMState: boolean statesEvalToTrue(java.util.Collection,dynoptic.model.AbsFSMState$IStateToBooleanFn)>($r2, $r1) >>>>>>>> dynoptic.model.AbsFSMState.statesEvalToTrue : r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>()
dynoptic.model.AbsFSMState.statesEvalToTrue : r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.AbsFSMState.statesEvalToTrue : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.AbsFSMState.statesEvalToTrue : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.AbsFSMState.statesEvalToTrue : if $z0 == 0
dynoptic.model.AbsFSMState.statesEvalToTrue : if $z0 == 0 >>>>>>>> dynoptic.model.AbsFSMState.statesEvalToTrue : return 1
dynoptic.model.AbsFSMState.statesEvalToTrue : return 1 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.isInitial : return $z0
dynoptic.model.fifosys.cfsm.CFSMState.isInitial : return $z0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getFSMState : $r1 = r0.<dynoptic.model.fifosys.cfsm.CFSMState: java.util.List fsmStates>
dynoptic.model.fifosys.cfsm.CFSMState.getFSMState : $r1 = r0.<dynoptic.model.fifosys.cfsm.CFSMState: java.util.List fsmStates> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getFSMState : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
