dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.synTraceGraphToDynObsFifoSys : $z1 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.synTraceGraphToDynObsFifoSys : if $z1 != 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.synTraceGraphToDynObsFifoSys : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.synTraceGraphToDynObsFifoSys : r2 = staticinvoke <dynoptic.util.Util: java.util.List newList()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.synTraceGraphToDynObsFifoSys : r2 = staticinvoke <dynoptic.util.Util: java.util.List newList()>() >>>>>>>> dynoptic.util.Util.newList : $r0 = new java.util.ArrayList
dynoptic.util.Util.newList : $r0 = new java.util.ArrayList >>>>>>>> dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>()>()
dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>()>() >>>>>>>> dynoptic.util.Util.newList : return $r0
dynoptic.util.Util.newList : return $r0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.synTraceGraphToDynObsFifoSys : r3 = staticinvoke <dynoptic.util.Util: java.util.Map newMap()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.synTraceGraphToDynObsFifoSys : r3 = staticinvoke <dynoptic.util.Util: java.util.Map newMap()>() >>>>>>>> dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap
dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap >>>>>>>> dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>()
dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> dynoptic.util.Util.newMap : return $r0
dynoptic.util.Util.newMap : return $r0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.synTraceGraphToDynObsFifoSys : r4 = null
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.synTraceGraphToDynObsFifoSys : r4 = null >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.synTraceGraphToDynObsFifoSys : n0 = null
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.synTraceGraphToDynObsFifoSys : n0 = null >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.synTraceGraphToDynObsFifoSys : r5 = null
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.synTraceGraphToDynObsFifoSys : r5 = null >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.synTraceGraphToDynObsFifoSys : r6 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.synTraceGraphToDynObsFifoSys : r6 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet
dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet >>>>>>>> dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>()
dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> dynoptic.util.Util.newSet : return $r0
dynoptic.util.Util.newSet : return $r0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.synTraceGraphToDynObsFifoSys : i1 = 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.synTraceGraphToDynObsFifoSys : i1 = 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.synTraceGraphToDynObsFifoSys : i2 = 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.synTraceGraphToDynObsFifoSys : i2 = 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSys.synTraceGraphToDynObsFifoSys : $i3 = virtualinvoke r0.<synoptic.model.DAGsTraceGraph: int getNumTraces()>()
