dynoptic.util.Util.newList : $r0 = new java.util.ArrayList >>>>>>>> dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>()>()
dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>()>() >>>>>>>> dynoptic.util.Util.newList : return $r0
dynoptic.util.Util.newList : return $r0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.getPid : $i0 = r0.<dynoptic.model.fifosys.gfsm.GFSMPath: int pid>
dynoptic.model.fifosys.gfsm.GFSMPath.getPid : $i0 = r0.<dynoptic.model.fifosys.gfsm.GFSMPath: int pid> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.getPid : return $i0
dynoptic.model.fifosys.gfsm.GFSMPath.getPid : return $i0 >>>>>>>> dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet
dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet >>>>>>>> dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>()
dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> dynoptic.util.Util.newSet : return $r0
dynoptic.util.Util.newSet : return $r0 >>>>>>>> dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap
dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap >>>>>>>> dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>()
dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> dynoptic.util.Util.newMap : return $r0
dynoptic.util.Util.newMap : return $r0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getObservedStates : $r1 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates>
dynoptic.model.fifosys.gfsm.GFSMState.getObservedStates : $r1 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getObservedStates : return $r1
dynoptic.model.fifosys.gfsm.GFSMState.getObservedStates : return $r1 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getTerminalObsForPid : r1 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.fifosys.gfsm.GFSMState.getTerminalObsForPid : r1 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getTerminalObsForPid : $r4 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates>
dynoptic.model.fifosys.gfsm.GFSMState.getTerminalObsForPid : $r4 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getTerminalObsForPid : r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.GFSMState.getTerminalObsForPid : r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getTerminalObsForPid : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSMState.getTerminalObsForPid : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getTerminalObsForPid : if $z0 == 0
dynoptic.model.fifosys.gfsm.GFSMState.getTerminalObsForPid : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.getTerminalObsForPid : return r1
dynoptic.model.fifosys.gfsm.GFSMState.getTerminalObsForPid : return r1 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.prefixState : $r2 = r0.<dynoptic.model.fifosys.gfsm.GFSMPath: java.util.List states>
dynoptic.model.fifosys.gfsm.GFSMPath.prefixState : $r2 = r0.<dynoptic.model.fifosys.gfsm.GFSMPath: java.util.List states> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.prefixState : interfaceinvoke $r2.<java.util.List: void add(int,java.lang.Object)>(0, r1)
