dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : r1 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet
dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet >>>>>>>> dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>()
dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> dynoptic.util.Util.newSet : return $r0
dynoptic.util.Util.newSet : return $r0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : $r4 = r0.<dynoptic.model.fifosys.cfsm.CFSMState: java.util.List fsmStates>
dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : $r4 = r0.<dynoptic.model.fifosys.cfsm.CFSMState: java.util.List fsmStates> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>()
dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : if $z0 == 0
dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : return r1
dynoptic.model.fifosys.cfsm.CFSMState.getTransitioningEvents : return r1 >>>>>>>> dynoptic.model.AbsFSMState.getNextStates : r1 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.AbsFSMState.getNextStates : r1 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.AbsFSMState.getNextStates : $r4 = virtualinvoke r0.<dynoptic.model.AbsFSMState: java.util.Set getTransitioningEvents()>()
dynoptic.model.AbsFSMState.getNextStates : $r4 = virtualinvoke r0.<dynoptic.model.AbsFSMState: java.util.Set getTransitioningEvents()>() >>>>>>>> dynoptic.model.AbsFSMState.getNextStates : r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.AbsFSMState.getNextStates : r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.AbsFSMState.getNextStates : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.AbsFSMState.getNextStates : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.AbsFSMState.getNextStates : if $z0 == 0
dynoptic.model.AbsFSMState.getNextStates : if $z0 == 0 >>>>>>>> dynoptic.model.AbsFSMState.getNextStates : return r1
