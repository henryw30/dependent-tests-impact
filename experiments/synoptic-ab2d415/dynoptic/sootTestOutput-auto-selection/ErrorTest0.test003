dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap >>>>>>>> dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>()
dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> dynoptic.util.Util.newMap : return $r0
dynoptic.util.Util.newMap : return $r0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.removeObs : $z0 = <dynoptic.model.fifosys.gfsm.GFSMState: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.GFSMState.removeObs : $z0 = <dynoptic.model.fifosys.gfsm.GFSMState: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.removeObs : if $z0 != 0
dynoptic.model.fifosys.gfsm.GFSMState.removeObs : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.removeObs : $z2 = <dynoptic.model.fifosys.gfsm.GFSMState: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.GFSMState.removeObs : $z2 = <dynoptic.model.fifosys.gfsm.GFSMState: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.removeObs : if $z2 != 0
dynoptic.model.fifosys.gfsm.GFSMState.removeObs : if $z2 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.removeObs : $r6 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates>
dynoptic.model.fifosys.gfsm.GFSMState.removeObs : $r6 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.removeObs : interfaceinvoke $r6.<java.util.Set: boolean remove(java.lang.Object)>(r1)
dynoptic.model.fifosys.gfsm.GFSMState.removeObs : interfaceinvoke $r6.<java.util.Set: boolean remove(java.lang.Object)>(r1) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.removeObs : virtualinvoke r1.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: void setParent(dynoptic.model.fifosys.gfsm.GFSMState)>(null)
