dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : $r0 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map initialProcessStatesMap> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r3)
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r3) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : if $z0 == 0
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : $r4 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map initialProcessStatesMap>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : $r4 = <dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.util.Map initialProcessStatesMap> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5)
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : $r7 = (dynoptic.model.fifosys.gfsm.observed.ObsFSMState) $r6
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : $r7 = (dynoptic.model.fifosys.gfsm.observed.ObsFSMState) $r6 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : return $r7
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.consistentAnonInitObsFSMState : return $r7 >>>>>>>> dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet
dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet >>>>>>>> dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>()
dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> dynoptic.util.Util.newSet : return $r0
dynoptic.util.Util.newSet : return $r0 >>>>>>>> dynoptic.util.Util.newList : $r0 = new java.util.ArrayList
dynoptic.util.Util.newList : $r0 = new java.util.ArrayList >>>>>>>> dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>()>()
dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>()>() >>>>>>>> dynoptic.util.Util.newList : return $r0
dynoptic.util.Util.newList : return $r0 >>>>>>>> dynoptic.util.Util.newList : $r1 = new java.util.ArrayList
dynoptic.util.Util.newList : $r1 = new java.util.ArrayList >>>>>>>> dynoptic.util.Util.newList : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>(r0)
dynoptic.util.Util.newList : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>(r0) >>>>>>>> dynoptic.util.Util.newList : return $r1
dynoptic.util.Util.newList : return $r1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : if r1 != null
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : if r1 != null >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : if r0 != r1
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : if r0 != r1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : $z0 = r1 instanceof dynoptic.model.fifosys.gfsm.observed.ObsFSMState
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : $z0 = r1 instanceof dynoptic.model.fifosys.gfsm.observed.ObsFSMState >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : if $z0 != 0
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : return 0
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : return 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.getStates : $r1 = r0.<dynoptic.model.fifosys.gfsm.GFSMPath: java.util.List states>
dynoptic.model.fifosys.gfsm.GFSMPath.getStates : $r1 = r0.<dynoptic.model.fifosys.gfsm.GFSMPath: java.util.List states> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.getStates : return $r1
dynoptic.model.fifosys.gfsm.GFSMPath.getStates : return $r1 >>>>>>>> dynoptic.util.Util.newPair : $r2 = new synoptic.util.Pair
dynoptic.util.Util.newPair : $r2 = new synoptic.util.Pair >>>>>>>> dynoptic.util.Util.newPair : specialinvoke $r2.<synoptic.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r0, r1)
dynoptic.util.Util.newPair : specialinvoke $r2.<synoptic.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r0, r1) >>>>>>>> dynoptic.util.Util.newPair : return $r2
dynoptic.util.Util.newPair : return $r2 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : $r1 = <dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.Map cache>
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : $r1 = <dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.Map cache> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r0)
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r0) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : b0 = 17
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : b0 = 17 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $i1 = 31 * b0
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $i1 = 31 * b0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $z0 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isInitial>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $z0 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isInitial> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : if $z0 == 0
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $s2 = 1231
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $s2 = 1231 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : goto [?= i3 = $i1 + $s2]
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : goto [?= i3 = $i1 + $s2] >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : i3 = $i1 + $s2
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : i3 = $i1 + $s2 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $i4 = 31 * i3
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $i4 = 31 * i3 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $z1 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isTerminal>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $z1 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: boolean isTerminal> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : if $z1 == 0
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : if $z1 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $s5 = 1231
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $s5 = 1231 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : goto [?= i6 = $i4 + $s5]
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : goto [?= i6 = $i4 + $s5] >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : i6 = $i4 + $s5
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : i6 = $i4 + $s5 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $i7 = 31 * i6
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $i7 = 31 * i6 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $i8 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int pid>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $i8 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: int pid> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : i9 = $i7 + $i8
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : i9 = $i7 + $i8 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $i10 = 31 * i9
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $i10 = 31 * i9 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $r1 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.lang.String name>
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $r1 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsFSMState: java.lang.String name> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $i11 = virtualinvoke $r1.<java.lang.String: int hashCode()>()
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : $i11 = virtualinvoke $r1.<java.lang.String: int hashCode()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : i12 = $i10 + $i11
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : i12 = $i10 + $i11 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : return i12
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.hashCode : return i12 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : return 1
dynoptic.model.fifosys.gfsm.observed.ObsFSMState.equals : return 1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : if $z0 == 0
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : $r3 = <dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.Map cache>
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : $r3 = <dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.Map cache> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : $r5 = (dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState) $r4
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : $r5 = (dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState) $r4 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : return $r5
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : return $r5 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState.fromChannelStates : $r1 = <dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState: java.util.Map chCache>
dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState.fromChannelStates : $r1 = <dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState: java.util.Map chCache> >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState.fromChannelStates : $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r0)
dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState.fromChannelStates : $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r0) >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState.fromChannelStates : if $z0 == 0
dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState.fromChannelStates : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState.fromChannelStates : $r3 = <dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState: java.util.Map chCache>
dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState.fromChannelStates : $r3 = <dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState: java.util.Map chCache> >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState.fromChannelStates : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState.fromChannelStates : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState.fromChannelStates : r2 = (dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState) $r4
dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState.fromChannelStates : r2 = (dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState) $r4 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState.fromChannelStates : goto [?= return r2]
dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState.fromChannelStates : goto [?= return r2] >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState.fromChannelStates : return r2
dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState.fromChannelStates : return r2 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.getChannelIds : $r4 = r0.<dynoptic.model.fifosys.channel.channelstate.AbsMultiChState: java.util.List channelStates>
dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.getChannelIds : $r4 = r0.<dynoptic.model.fifosys.channel.channelstate.AbsMultiChState: java.util.List channelStates> >>>>>>>> dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.getChannelIds : $i0 = interfaceinvoke $r4.<java.util.List: int size()>()
dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.getChannelIds : $i0 = interfaceinvoke $r4.<java.util.List: int size()>() >>>>>>>> dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.getChannelIds : r1 = staticinvoke <dynoptic.util.Util: java.util.List newList(int)>($i0)
dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.getChannelIds : r1 = staticinvoke <dynoptic.util.Util: java.util.List newList(int)>($i0) >>>>>>>> dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(i0)
dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(i0) >>>>>>>> dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.getChannelIds : $r5 = r0.<dynoptic.model.fifosys.channel.channelstate.AbsMultiChState: java.util.List channelStates>
dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.getChannelIds : $r5 = r0.<dynoptic.model.fifosys.channel.channelstate.AbsMultiChState: java.util.List channelStates> >>>>>>>> dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.getChannelIds : r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>()
dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.getChannelIds : r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.getChannelIds : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.getChannelIds : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.getChannelIds : if $z0 == 0
dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.getChannelIds : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.getChannelIds : return r1
dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.getChannelIds : return r1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getFifoSysState : $z0 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getFifoSysState : $z0 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getFifoSysState : if $z0 != 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getFifoSysState : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getFifoSysState : $z1 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: boolean $assertionsDisabled>
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getFifoSysState : $z1 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: boolean $assertionsDisabled> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getFifoSysState : if $z1 != 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getFifoSysState : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getFifoSysState : $r5 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: java.util.Map fifoSysStatesMap>
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getFifoSysState : $r5 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: java.util.Map fifoSysStatesMap> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getFifoSysState : $z2 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r0)
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getFifoSysState : $z2 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r0) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.hashCode : $r1 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.List fsmStates>
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.hashCode : $r1 = r0.<dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.List fsmStates> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.hashCode : $i0 = interfaceinvoke $r1.<java.util.List: int hashCode()>()
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.hashCode : $i0 = interfaceinvoke $r1.<java.util.List: int hashCode()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.hashCode : return $i0
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.hashCode : return $i0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getFifoSysState : if $z2 == 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getFifoSysState : if $z2 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getFifoSysState : $r6 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: java.util.Map fifoSysStatesMap>
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getFifoSysState : $r6 = <dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: java.util.Map fifoSysStatesMap> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getFifoSysState : $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getFifoSysState : $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getFifoSysState : r2 = (dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState) $r7
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getFifoSysState : r2 = (dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState) $r7 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getFifoSysState : $r8 = virtualinvoke r2.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState getChannelStates()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getFifoSysState : $r8 = virtualinvoke r2.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState getChannelStates()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getChannelStates : $r1 = r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState channelStates>
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getChannelStates : $r1 = r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState channelStates> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getChannelStates : return $r1
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getChannelStates : return $r1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getFifoSysState : $z3 = virtualinvoke $r8.<dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState: boolean equals(java.lang.Object)>(r1)
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getFifoSysState : $z3 = virtualinvoke $r8.<dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState: boolean equals(java.lang.Object)>(r1) >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState.equals : $z0 = specialinvoke r0.<dynoptic.model.fifosys.channel.channelstate.AbsMultiChState: boolean equals(java.lang.Object)>(r1)
dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState.equals : $z0 = specialinvoke r0.<dynoptic.model.fifosys.channel.channelstate.AbsMultiChState: boolean equals(java.lang.Object)>(r1) >>>>>>>> dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.equals : if r1 != null
dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.equals : if r1 != null >>>>>>>> dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.equals : if r0 != r1
dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.equals : if r0 != r1 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.equals : return 1
dynoptic.model.fifosys.channel.channelstate.AbsMultiChState.equals : return 1 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState.equals : if $z0 != 0
dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState.equals : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState.equals : $z1 = r1 instanceof dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState
dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState.equals : $z1 = r1 instanceof dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState.equals : if $z1 != 0
dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState.equals : if $z1 != 0 >>>>>>>> dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState.equals : return 1
dynoptic.model.fifosys.channel.channelstate.ImmutableMultiChState.equals : return 1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getFifoSysState : if $z3 != 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getFifoSysState : if $z3 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getFifoSysState : return r2
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getFifoSysState : return r2 >>>>>>>> dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap
dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap >>>>>>>> dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>()
dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> dynoptic.util.Util.newMap : return $r0
dynoptic.util.Util.newMap : return $r0 >>>>>>>> dynoptic.util.Util.newSet : $r1 = new java.util.LinkedHashSet
dynoptic.util.Util.newSet : $r1 = new java.util.LinkedHashSet >>>>>>>> dynoptic.util.Util.newSet : specialinvoke $r1.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(r0)
dynoptic.util.Util.newSet : specialinvoke $r1.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(r0) >>>>>>>> dynoptic.util.Util.newSet : return $r1
dynoptic.util.Util.newSet : return $r1 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.addAllObs : r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.GFSMState.addAllObs : r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.addAllObs : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSMState.addAllObs : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.addAllObs : if $z0 == 0
dynoptic.model.fifosys.gfsm.GFSMState.addAllObs : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : $r3 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Map transitions>
dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : $r3 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : interfaceinvoke $r3.<java.util.Map: void clear()>()
dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : interfaceinvoke $r3.<java.util.Map: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : $r4 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates>
dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : $r4 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : if $z0 == 0
dynoptic.model.fifosys.gfsm.GFSMState.recreateCachedTransitions : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toIntermediateString : $r1 = new java.lang.StringBuilder
dynoptic.model.fifosys.gfsm.GFSMState.toIntermediateString : $r1 = new java.lang.StringBuilder >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toIntermediateString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
dynoptic.model.fifosys.gfsm.GFSMState.toIntermediateString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toIntermediateString : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Part-")
dynoptic.model.fifosys.gfsm.GFSMState.toIntermediateString : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Part-") >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toIntermediateString : $r3 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates>
dynoptic.model.fifosys.gfsm.GFSMState.toIntermediateString : $r3 = r0.<dynoptic.model.fifosys.gfsm.GFSMState: java.util.Set observedStates> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toIntermediateString : $i0 = interfaceinvoke $r3.<java.util.Set: int size()>()
dynoptic.model.fifosys.gfsm.GFSMState.toIntermediateString : $i0 = interfaceinvoke $r3.<java.util.Set: int size()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toIntermediateString : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)
dynoptic.model.fifosys.gfsm.GFSMState.toIntermediateString : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toIntermediateString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-")
dynoptic.model.fifosys.gfsm.GFSMState.toIntermediateString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-") >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toIntermediateString : $i1 = virtualinvoke r0.<java.lang.Object: int hashCode()>()
dynoptic.model.fifosys.gfsm.GFSMState.toIntermediateString : $i1 = virtualinvoke r0.<java.lang.Object: int hashCode()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toIntermediateString : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)
dynoptic.model.fifosys.gfsm.GFSMState.toIntermediateString : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1) >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toIntermediateString : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
dynoptic.model.fifosys.gfsm.GFSMState.toIntermediateString : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMState.toIntermediateString : return $r7
dynoptic.model.fifosys.gfsm.GFSMState.toIntermediateString : return $r7 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.setParent : r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: dynoptic.model.fifosys.gfsm.GFSMState parent> = r1
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.setParent : r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: dynoptic.model.fifosys.gfsm.GFSMState parent> = r1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getNextState : $r2 = r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: java.util.Map transitions>
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getNextState : $r2 = r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getNextState : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getNextState : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getNextState : $r4 = (dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState) $r3
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getNextState : $r4 = (dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState) $r3 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getNextState : return $r4
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getNextState : return $r4 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.toShortIntStr : $i0 = r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: int stateId>
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.toShortIntStr : $i0 = r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: int stateId> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.toShortIntStr : $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0)
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.toShortIntStr : $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.toShortIntStr : return $r1
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.toShortIntStr : return $r1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getNextStates : $r2 = r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: java.util.Map transitions>
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getNextStates : $r2 = r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getNextStates : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getNextStates : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getNextStates : $r4 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r3)
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getNextStates : $r4 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r3) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getNextStates : return $r4
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getNextStates : return $r4 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.anyEventScmQRe : $r1 = specialinvoke r0.<dynoptic.model.alphabet.FSMAlphabet: java.lang.String scmQRe(synoptic.model.event.IDistEventType)>(null)
dynoptic.model.alphabet.FSMAlphabet.anyEventScmQRe : $r1 = specialinvoke r0.<dynoptic.model.alphabet.FSMAlphabet: java.lang.String scmQRe(synoptic.model.event.IDistEventType)>(null) >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.scmQRe : r2 = "("
dynoptic.model.alphabet.FSMAlphabet.scmQRe : r2 = "(" >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.scmQRe : r3 = specialinvoke r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set getUniqueEventStrings(synoptic.model.event.IDistEventType)>(r1)
dynoptic.model.alphabet.FSMAlphabet.scmQRe : r3 = specialinvoke r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set getUniqueEventStrings(synoptic.model.event.IDistEventType)>(r1) >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : r2 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : r2 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : $r5 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : $r5 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events> >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : r3 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : r3 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : if $z0 == 0
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : if $z0 == 0 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : return r2
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : return r2 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.scmQRe : r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.alphabet.FSMAlphabet.scmQRe : r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.scmQRe : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.alphabet.FSMAlphabet.scmQRe : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.scmQRe : if $z0 == 0
dynoptic.model.alphabet.FSMAlphabet.scmQRe : if $z0 == 0 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.scmQRe : $i0 = virtualinvoke r2.<java.lang.String: int length()>()
dynoptic.model.alphabet.FSMAlphabet.scmQRe : $i0 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.scmQRe : if $i0 != 1
dynoptic.model.alphabet.FSMAlphabet.scmQRe : if $i0 != 1 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.scmQRe : return "(_)"
dynoptic.model.alphabet.FSMAlphabet.scmQRe : return "(_)" >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.anyEventScmQRe : return $r1
dynoptic.model.alphabet.FSMAlphabet.anyEventScmQRe : return $r1 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.size : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.alphabet.FSMAlphabet.size : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events> >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.size : $i0 = interfaceinvoke $r1.<java.util.Set: int size()>()
dynoptic.model.alphabet.FSMAlphabet.size : $i0 = interfaceinvoke $r1.<java.util.Set: int size()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.size : return $i0
dynoptic.model.alphabet.FSMAlphabet.size : return $i0 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toString : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.alphabet.FSMAlphabet.toString : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events> >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toString : $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>()
dynoptic.model.alphabet.FSMAlphabet.toString : $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toString : return $r2
dynoptic.model.alphabet.FSMAlphabet.toString : return $r2 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.clear : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.alphabet.FSMAlphabet.clear : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events> >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.clear : interfaceinvoke $r1.<java.util.Set: void clear()>()
dynoptic.model.alphabet.FSMAlphabet.clear : interfaceinvoke $r1.<java.util.Set: void clear()>() >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.getPid : $i0 = r0.<dynoptic.model.fifosys.gfsm.GFSMPath: int pid>
dynoptic.model.fifosys.gfsm.GFSMPath.getPid : $i0 = r0.<dynoptic.model.fifosys.gfsm.GFSMPath: int pid> >>>>>>>> dynoptic.model.fifosys.gfsm.GFSMPath.getPid : return $i0
dynoptic.model.fifosys.gfsm.GFSMPath.getPid : return $i0 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.remove : $r2 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.alphabet.FSMAlphabet.remove : $r2 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events> >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.remove : $z0 = interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>(r1)
dynoptic.model.alphabet.FSMAlphabet.remove : $z0 = interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>(r1) >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.remove : return $z0
dynoptic.model.alphabet.FSMAlphabet.remove : return $z0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.equals : if r1 != null
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.equals : if r1 != null >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.equals : if r0 != r1
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.equals : if r0 != r1 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.equals : $z0 = r1 instanceof dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.equals : $z0 = r1 instanceof dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.equals : if $z0 != 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.equals : if $z0 != 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.equals : return 0
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.equals : return 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getTransitioningEvents : $r1 = r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: java.util.Map transitions>
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getTransitioningEvents : $r1 = r0.<dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState: java.util.Map transitions> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getTransitioningEvents : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>()
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getTransitioningEvents : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>() >>>>>>>> dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getTransitioningEvents : return $r2
dynoptic.model.fifosys.gfsm.observed.fifosys.ObsFifoSysState.getTransitioningEvents : return $r2 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.iterator : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.alphabet.FSMAlphabet.iterator : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events> >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.iterator : $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.alphabet.FSMAlphabet.iterator : $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.iterator : return $r2
