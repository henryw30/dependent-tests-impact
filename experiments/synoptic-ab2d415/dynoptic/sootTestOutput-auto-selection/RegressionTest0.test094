dynoptic.invariants.checkers.APChecker.getClone : $r1 = new dynoptic.invariants.checkers.APChecker >>>>>>>> dynoptic.invariants.checkers.APChecker.getClone : $r3 = r0.<dynoptic.invariants.checkers.APChecker: dynoptic.invariants.BinaryInvariant inv>
dynoptic.invariants.checkers.APChecker.getClone : $r3 = r0.<dynoptic.invariants.checkers.APChecker: dynoptic.invariants.BinaryInvariant inv> >>>>>>>> dynoptic.invariants.checkers.APChecker.getClone : specialinvoke $r1.<dynoptic.invariants.checkers.APChecker: void <init>(dynoptic.invariants.BinaryInvariant)>($r3)
dynoptic.invariants.checkers.APChecker.getClone : specialinvoke $r1.<dynoptic.invariants.checkers.APChecker: void <init>(dynoptic.invariants.BinaryInvariant)>($r3) >>>>>>>> dynoptic.invariants.checkers.APChecker.getClone : r2 = $r1
dynoptic.invariants.checkers.APChecker.getClone : r2 = $r1 >>>>>>>> dynoptic.invariants.checkers.APChecker.getClone : $r4 = r0.<dynoptic.invariants.checkers.APChecker: java.lang.Object s>
dynoptic.invariants.checkers.APChecker.getClone : $r4 = r0.<dynoptic.invariants.checkers.APChecker: java.lang.Object s> >>>>>>>> dynoptic.invariants.checkers.APChecker.getClone : r2.<dynoptic.invariants.checkers.APChecker: java.lang.Object s> = $r4
dynoptic.invariants.checkers.APChecker.getClone : r2.<dynoptic.invariants.checkers.APChecker: java.lang.Object s> = $r4 >>>>>>>> dynoptic.invariants.checkers.APChecker.getClone : return r2
dynoptic.invariants.checkers.APChecker.getClone : return r2 >>>>>>>> dynoptic.invariants.checkers.APChecker.transition : $r3 = r0.<dynoptic.invariants.checkers.APChecker: java.lang.Object s>
dynoptic.invariants.checkers.APChecker.transition : $r3 = r0.<dynoptic.invariants.checkers.APChecker: java.lang.Object s> >>>>>>>> dynoptic.invariants.checkers.APChecker.transition : $r2 = <dynoptic.invariants.checkers.APState: dynoptic.invariants.checkers.APState SAW_X>
dynoptic.invariants.checkers.APChecker.transition : $r2 = <dynoptic.invariants.checkers.APState: dynoptic.invariants.checkers.APState SAW_X> >>>>>>>> dynoptic.invariants.checkers.APChecker.transition : if $r3 != $r2
dynoptic.invariants.checkers.APChecker.transition : if $r3 != $r2 >>>>>>>> dynoptic.invariants.checkers.APChecker.transition : $r5 = r0.<dynoptic.invariants.checkers.APChecker: java.lang.Object s>
dynoptic.invariants.checkers.APChecker.transition : $r5 = r0.<dynoptic.invariants.checkers.APChecker: java.lang.Object s> >>>>>>>> dynoptic.invariants.checkers.APChecker.transition : $r6 = <dynoptic.invariants.checkers.APState: dynoptic.invariants.checkers.APState SAW_Y>
dynoptic.invariants.checkers.APChecker.transition : $r6 = <dynoptic.invariants.checkers.APState: dynoptic.invariants.checkers.APState SAW_Y> >>>>>>>> dynoptic.invariants.checkers.APChecker.transition : if $r5 != $r6
dynoptic.invariants.checkers.APChecker.transition : if $r5 != $r6 >>>>>>>> dynoptic.invariants.checkers.APChecker.transition : $z0 = <dynoptic.invariants.checkers.APChecker: boolean $assertionsDisabled>
dynoptic.invariants.checkers.APChecker.transition : $z0 = <dynoptic.invariants.checkers.APChecker: boolean $assertionsDisabled> >>>>>>>> dynoptic.invariants.checkers.APChecker.transition : if $z0 != 0
dynoptic.invariants.checkers.APChecker.transition : if $z0 != 0 >>>>>>>> dynoptic.invariants.checkers.APChecker.transition : $r11 = r0.<dynoptic.invariants.checkers.APChecker: dynoptic.invariants.BinaryInvariant inv>
dynoptic.invariants.checkers.APChecker.transition : $r11 = r0.<dynoptic.invariants.checkers.APChecker: dynoptic.invariants.BinaryInvariant inv> >>>>>>>> dynoptic.invariants.checkers.APChecker.transition : $r12 = virtualinvoke $r11.<dynoptic.invariants.BinaryInvariant: synoptic.model.event.DistEventType getFirst()>()
