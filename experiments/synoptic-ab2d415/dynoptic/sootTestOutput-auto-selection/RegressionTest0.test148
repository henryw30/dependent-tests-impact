dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet >>>>>>>> dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>()
dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> dynoptic.util.Util.newSet : return $r0
dynoptic.util.Util.newSet : return $r0 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.anyEventScmQRe : $r1 = specialinvoke r0.<dynoptic.model.alphabet.FSMAlphabet: java.lang.String scmQRe(synoptic.model.event.IDistEventType)>(null)
dynoptic.model.alphabet.FSMAlphabet.anyEventScmQRe : $r1 = specialinvoke r0.<dynoptic.model.alphabet.FSMAlphabet: java.lang.String scmQRe(synoptic.model.event.IDistEventType)>(null) >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.scmQRe : r2 = "("
dynoptic.model.alphabet.FSMAlphabet.scmQRe : r2 = "(" >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.scmQRe : r3 = specialinvoke r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set getUniqueEventStrings(synoptic.model.event.IDistEventType)>(r1)
dynoptic.model.alphabet.FSMAlphabet.scmQRe : r3 = specialinvoke r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set getUniqueEventStrings(synoptic.model.event.IDistEventType)>(r1) >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : r2 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>()
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : r2 = staticinvoke <dynoptic.util.Util: java.util.Set newSet()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : $r5 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : $r5 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events> >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : r3 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : r3 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : if $z0 == 0
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : if $z0 == 0 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : return r2
dynoptic.model.alphabet.FSMAlphabet.getUniqueEventStrings : return r2 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.scmQRe : r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
dynoptic.model.alphabet.FSMAlphabet.scmQRe : r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.scmQRe : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
dynoptic.model.alphabet.FSMAlphabet.scmQRe : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.scmQRe : if $z0 == 0
dynoptic.model.alphabet.FSMAlphabet.scmQRe : if $z0 == 0 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.scmQRe : $i0 = virtualinvoke r2.<java.lang.String: int length()>()
dynoptic.model.alphabet.FSMAlphabet.scmQRe : $i0 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.scmQRe : if $i0 != 1
dynoptic.model.alphabet.FSMAlphabet.scmQRe : if $i0 != 1 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.scmQRe : return "(_)"
dynoptic.model.alphabet.FSMAlphabet.scmQRe : return "(_)" >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.anyEventScmQRe : return $r1
dynoptic.model.alphabet.FSMAlphabet.anyEventScmQRe : return $r1 >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toString : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events>
dynoptic.model.alphabet.FSMAlphabet.toString : $r1 = r0.<dynoptic.model.alphabet.FSMAlphabet: java.util.Set events> >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toString : $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>()
dynoptic.model.alphabet.FSMAlphabet.toString : $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>() >>>>>>>> dynoptic.model.alphabet.FSMAlphabet.toString : return $r2
