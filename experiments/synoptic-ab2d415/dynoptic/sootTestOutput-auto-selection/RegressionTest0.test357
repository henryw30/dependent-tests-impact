dynoptic.util.Util.newSet : $r0 = new java.util.LinkedHashSet >>>>>>>> dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>()
dynoptic.util.Util.newSet : specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> dynoptic.util.Util.newSet : return $r0
dynoptic.util.Util.newSet : return $r0 >>>>>>>> dynoptic.util.Util.newList : $r0 = new java.util.ArrayList
dynoptic.util.Util.newList : $r0 = new java.util.ArrayList >>>>>>>> dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>()>()
dynoptic.util.Util.newList : specialinvoke $r0.<java.util.ArrayList: void <init>()>() >>>>>>>> dynoptic.util.Util.newList : return $r0
dynoptic.util.Util.newList : return $r0 >>>>>>>> dynoptic.util.Util.newList : $r1 = new java.util.ArrayList
dynoptic.util.Util.newList : $r1 = new java.util.ArrayList >>>>>>>> dynoptic.util.Util.newList : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>(r0)
dynoptic.util.Util.newList : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>(r0) >>>>>>>> dynoptic.util.Util.newList : return $r1
dynoptic.util.Util.newList : return $r1 >>>>>>>> dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap
dynoptic.util.Util.newMap : $r0 = new java.util.LinkedHashMap >>>>>>>> dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>()
dynoptic.util.Util.newMap : specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> dynoptic.util.Util.newMap : return $r0
dynoptic.util.Util.newMap : return $r0 >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.isAccept : $z0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept>
dynoptic.model.fifosys.cfsm.fsm.FSMState.isAccept : $z0 = r0.<dynoptic.model.fifosys.cfsm.fsm.FSMState: boolean isAccept> >>>>>>>> dynoptic.model.fifosys.cfsm.fsm.FSMState.isAccept : return $z0
dynoptic.model.fifosys.cfsm.fsm.FSMState.isAccept : return $z0 >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMExecution.addToPath : $r2 = r0.<dynoptic.model.fifosys.cfsm.CFSMExecution: java.util.List fsmPath>
dynoptic.model.fifosys.cfsm.CFSMExecution.addToPath : $r2 = r0.<dynoptic.model.fifosys.cfsm.CFSMExecution: java.util.List fsmPath> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMExecution.addToPath : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
dynoptic.model.fifosys.cfsm.CFSMExecution.addToPath : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMExecution.getFSMPath : $r1 = r0.<dynoptic.model.fifosys.cfsm.CFSMExecution: java.util.List fsmPath>
dynoptic.model.fifosys.cfsm.CFSMExecution.getFSMPath : $r1 = r0.<dynoptic.model.fifosys.cfsm.CFSMExecution: java.util.List fsmPath> >>>>>>>> dynoptic.model.fifosys.cfsm.CFSMExecution.getFSMPath : return $r1
