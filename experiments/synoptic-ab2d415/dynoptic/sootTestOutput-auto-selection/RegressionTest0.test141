dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : $r1 = <dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: java.util.Map cache> >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r0)
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r0) >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : if $z0 == 0
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : if $z0 == 0 >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : $r6 = new dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState
dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : $r6 = new dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState >>>>>>>> dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState.getMultiFSMState : specialinvoke $r6.<dynoptic.model.fifosys.gfsm.observed.ObsMultFSMState: void <init>(java.util.List)>(r0)
